// Mocks generated by Mockito 5.4.2 from annotations
// in deliver/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i30;
import 'dart:io' as _i27;
import 'dart:typed_data' as _i48;
import 'dart:ui' as _i10;

import 'package:deliver/box/account.dart' as _i75;
import 'package:deliver/box/avatar.dart' as _i64;
import 'package:deliver/box/bot_info.dart' as _i13;
import 'package:deliver/box/broadcast_member.dart' as _i78;
import 'package:deliver/box/call_status.dart' as _i93;
import 'package:deliver/box/call_type.dart' as _i94;
import 'package:deliver/box/contact.dart' as _i72;
import 'package:deliver/box/current_call_info.dart' as _i92;
import 'package:deliver/box/dao/block_dao.dart' as _i65;
import 'package:deliver/box/dao/custom_notification_dao.dart' as _i84;
import 'package:deliver/box/dao/last_activity_dao.dart' as _i98;
import 'package:deliver/box/dao/message_dao.dart' as _i32;
import 'package:deliver/box/dao/meta_count_dao.dart' as _i91;
import 'package:deliver/box/dao/meta_dao.dart' as _i85;
import 'package:deliver/box/dao/muc_dao.dart' as _i100;
import 'package:deliver/box/dao/mute_dao.dart' as _i68;
import 'package:deliver/box/dao/room_dao.dart' as _i34;
import 'package:deliver/box/dao/seen_dao.dart' as _i52;
import 'package:deliver/box/dao/shared_dao.dart' as _i61;
import 'package:deliver/box/dao/uid_id_name_dao.dart' as _i69;
import 'package:deliver/box/last_activity.dart' as _i99;
import 'package:deliver/box/last_call_status.dart' as _i96;
import 'package:deliver/box/livelocation.dart' as _i50;
import 'package:deliver/box/member.dart' as _i73;
import 'package:deliver/box/message.dart' as _i33;
import 'package:deliver/box/meta.dart' as _i86;
import 'package:deliver/box/meta_count.dart' as _i89;
import 'package:deliver/box/meta_type.dart' as _i87;
import 'package:deliver/box/muc.dart' as _i77;
import 'package:deliver/box/muc_type.dart' as _i80;
import 'package:deliver/box/role.dart' as _i79;
import 'package:deliver/box/room.dart' as _i35;
import 'package:deliver/box/seen.dart' as _i3;
import 'package:deliver/box/uid_id_name.dart' as _i39;
import 'package:deliver/localization/i18n.dart' as _i66;
import 'package:deliver/models/call_event_type.dart' as _i17;
import 'package:deliver/models/call_timer.dart' as _i107;
import 'package:deliver/models/file.dart' as _i28;
import 'package:deliver/models/window_frame.dart' as _i102;
import 'package:deliver/repository/accountRepo.dart' as _i74;
import 'package:deliver/repository/analytics_repo.dart' as _i29;
import 'package:deliver/repository/authRepo.dart' as _i40;
import 'package:deliver/repository/avatarRepo.dart' as _i63;
import 'package:deliver/repository/botRepo.dart' as _i81;
import 'package:deliver/repository/callRepo.dart' as _i95;
import 'package:deliver/repository/contactRepo.dart' as _i70;
import 'package:deliver/repository/fileRepo.dart' as _i45;
import 'package:deliver/repository/liveLocationRepo.dart' as _i49;
import 'package:deliver/repository/metaRepo.dart' as _i88;
import 'package:deliver/repository/mucRepo.dart' as _i76;
import 'package:deliver/repository/roomRepo.dart' as _i36;
import 'package:deliver/screen/muc/methods/muc_helper_service.dart' as _i105;
import 'package:deliver/services/analytics_service.dart' as _i109;
import 'package:deliver/services/app_lifecycle_service.dart' as _i108;
import 'package:deliver/services/audio_modules/recorder_module.dart' as _i111;
import 'package:deliver/services/audio_service.dart' as _i110;
import 'package:deliver/services/call_service.dart' as _i18;
import 'package:deliver/services/core_services.dart' as _i60;
import 'package:deliver/services/data_stream_services.dart' as _i56;
import 'package:deliver/services/file_service.dart' as _i47;
import 'package:deliver/services/firebase_services.dart' as _i44;
import 'package:deliver/services/muc_services.dart' as _i53;
import 'package:deliver/services/notification_services.dart' as _i97;
import 'package:deliver/services/routing_service.dart' as _i104;
import 'package:deliver/services/settings.dart' as _i101;
import 'package:deliver/services/url_handler_service.dart' as _i103;
import 'package:deliver/shared/constants.dart' as _i62;
import 'package:deliver/shared/language.dart' as _i67;
import 'package:deliver/shared/persistent_variable.dart' as _i19;
import 'package:deliver/theme/extra_theme.dart' as _i24;
import 'package:deliver/theme/theme.dart' as _i22;
import 'package:deliver_public_protocol/pub/v1/bot.pbgrpc.dart' as _i82;
import 'package:deliver_public_protocol/pub/v1/broadcast.pb.dart' as _i55;
import 'package:deliver_public_protocol/pub/v1/channel.pbgrpc.dart' as _i12;
import 'package:deliver_public_protocol/pub/v1/core.pbgrpc.dart' as _i59;
import 'package:deliver_public_protocol/pub/v1/group.pbgrpc.dart' as _i54;
import 'package:deliver_public_protocol/pub/v1/lb.pbgrpc.dart' as _i41;
import 'package:deliver_public_protocol/pub/v1/live_location.pbgrpc.dart'
    as _i7;
import 'package:deliver_public_protocol/pub/v1/models/activity.pb.dart' as _i37;
import 'package:deliver_public_protocol/pub/v1/models/call.pb.dart' as _i16;
import 'package:deliver_public_protocol/pub/v1/models/categories.pb.dart'
    as _i38;
import 'package:deliver_public_protocol/pub/v1/models/contact.pb.dart' as _i71;
import 'package:deliver_public_protocol/pub/v1/models/file.pb.dart' as _i46;
import 'package:deliver_public_protocol/pub/v1/models/location.pb.dart' as _i51;
import 'package:deliver_public_protocol/pub/v1/models/markup.pb.dart' as _i83;
import 'package:deliver_public_protocol/pub/v1/models/message.pb.dart' as _i57;
import 'package:deliver_public_protocol/pub/v1/models/meta.pb.dart' as _i14;
import 'package:deliver_public_protocol/pub/v1/models/muc.pb.dart' as _i11;
import 'package:deliver_public_protocol/pub/v1/models/phone.pb.dart' as _i42;
import 'package:deliver_public_protocol/pub/v1/models/seen.pb.dart' as _i58;
import 'package:deliver_public_protocol/pub/v1/models/session.pb.dart' as _i43;
import 'package:deliver_public_protocol/pub/v1/models/showcase.pb.dart'
    as _i106;
import 'package:deliver_public_protocol/pub/v1/models/uid.pb.dart' as _i5;
import 'package:deliver_public_protocol/pub/v1/profile.pbgrpc.dart' as _i6;
import 'package:deliver_public_protocol/pub/v1/query.pbgrpc.dart' as _i4;
import 'package:dio/dio.dart' as _i112;
import 'package:fixnum/fixnum.dart' as _i90;
import 'package:flutter/foundation.dart' as _i23;
import 'package:flutter/material.dart' as _i21;
import 'package:flutter_webrtc/flutter_webrtc.dart' as _i15;
import 'package:grpc/grpc.dart' as _i9;
import 'package:grpc/service_api.dart' as _i8;
import 'package:logger/logger.dart' as _i26;
import 'package:logger/src/log_level.dart' as _i31;
import 'package:material_color_utilities/material_color_utilities.dart' as _i25;
import 'package:mockito/mockito.dart' as _i1;
import 'package:protobuf/protobuf.dart' as _i20;
import 'package:rxdart/rxdart.dart' as _i2;
import 'package:shared_preferences/shared_preferences.dart' as _i113;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBehaviorSubject_0<T> extends _i1.SmartFake
    implements _i2.BehaviorSubject<T> {
  _FakeBehaviorSubject_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeen_1 extends _i1.SmartFake implements _i3.Seen {
  _FakeSeen_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUidByIdRes_2 extends _i1.SmartFake implements _i4.GetUidByIdRes {
  _FakeGetUidByIdRes_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUid_3 extends _i1.SmartFake implements _i5.Uid {
  _FakeUid_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_4 extends _i1.SmartFake implements Duration {
  _FakeDuration_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerificationType_5 extends _i1.SmartFake
    implements _i6.VerificationType {
  _FakeVerificationType_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessTokenRes_6 extends _i1.SmartFake
    implements _i6.AccessTokenRes {
  _FakeAccessTokenRes_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRenewAccessTokenRes_7 extends _i1.SmartFake
    implements _i6.RenewAccessTokenRes {
  _FakeRenewAccessTokenRes_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateLiveLocationRes_8 extends _i1.SmartFake
    implements _i7.CreateLiveLocationRes {
  _FakeCreateLiveLocationRes_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStream_9<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseFuture_10<R> extends _i1.SmartFake
    implements _i8.ResponseFuture<R> {
  _FakeResponseFuture_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientCall_11<Q1, R1> extends _i1.SmartFake
    implements _i9.ClientCall<Q1, R1> {
  _FakeClientCall_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseStream_12<R1> extends _i1.SmartFake
    implements _i8.ResponseStream<R1> {
  _FakeResponseStream_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_13 extends _i1.SmartFake implements _i10.Locale {
  _FakeLocale_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRole_14 extends _i1.SmartFake implements _i11.Role {
  _FakeRole_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelType_15 extends _i1.SmartFake implements _i12.ChannelType {
  _FakeChannelType_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBotInfo_16 extends _i1.SmartFake implements _i13.BotInfo {
  _FakeBotInfo_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaGroup_17 extends _i1.SmartFake implements _i14.MetaGroup {
  _FakeMetaGroup_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRTCVideoRenderer_18 extends _i1.SmartFake
    implements _i15.RTCVideoRenderer {
  _FakeRTCVideoRenderer_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallEvent_CallType_19 extends _i1.SmartFake
    implements _i16.CallEvent_CallType {
  _FakeCallEvent_CallType_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallEvents_20 extends _i1.SmartFake implements _i17.CallEvents {
  _FakeCallEvents_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoCallQualityDetails_21 extends _i1.SmartFake
    implements _i18.VideoCallQualityDetails {
  _FakeVideoCallQualityDetails_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBatteryMonitor_22 extends _i1.SmartFake
    implements _i19.BatteryMonitor {
  _FakeBatteryMonitor_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEnumPersistent_23<T extends Enum> extends _i1.SmartFake
    implements _i19.EnumPersistent<T> {
  _FakeEnumPersistent_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIntPersistent_24 extends _i1.SmartFake
    implements _i19.IntPersistent {
  _FakeIntPersistent_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStringPersistent_25 extends _i1.SmartFake
    implements _i19.StringPersistent {
  _FakeStringPersistent_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDoublePersistent_26 extends _i1.SmartFake
    implements _i19.DoublePersistent {
  _FakeDoublePersistent_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBooleanPersistent_27 extends _i1.SmartFake
    implements _i19.BooleanPersistent {
  _FakeBooleanPersistent_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJsonMapPersistent_28<T> extends _i1.SmartFake
    implements _i19.JsonMapPersistent<T> {
  _FakeJsonMapPersistent_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtoPersistent_29<T extends _i20.GeneratedMessage>
    extends _i1.SmartFake implements _i19.ProtoPersistent<T> {
  _FakeProtoPersistent_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOncePersistent_30 extends _i1.SmartFake
    implements _i19.OncePersistent {
  _FakeOncePersistent_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePerformanceBooleanPersistent_31 extends _i1.SmartFake
    implements _i19.PerformanceBooleanPersistent {
  _FakePerformanceBooleanPersistent_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBuildContext_32 extends _i1.SmartFake implements _i21.BuildContext {
  _FakeBuildContext_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeScheme_33 extends _i1.SmartFake implements _i22.ThemeScheme {
  _FakeThemeScheme_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_34 extends _i1.SmartFake implements _i21.ThemeData {
  _FakeThemeData_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i23.DiagnosticLevel? minLevel = _i23.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeExtraThemeData_35 extends _i1.SmartFake
    implements _i24.ExtraThemeData {
  _FakeExtraThemeData_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCorePalette_36 extends _i1.SmartFake implements _i25.CorePalette {
  _FakeCorePalette_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_37<T extends _i21.State<_i21.StatefulWidget>>
    extends _i1.SmartFake implements _i21.GlobalKey<T> {
  _FakeGlobalKey_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePageRouteBuilder_38<T> extends _i1.SmartFake
    implements _i21.PageRouteBuilder<T> {
  _FakePageRouteBuilder_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_39 extends _i1.SmartFake implements _i21.Widget {
  _FakeWidget_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i23.DiagnosticLevel? minLevel = _i23.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStatsReport_40 extends _i1.SmartFake implements _i15.StatsReport {
  _FakeStatsReport_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_41 extends _i1.SmartFake implements _i26.Logger {
  _FakeLogger_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_42 extends _i1.SmartFake implements _i27.File {
  _FakeFile_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_43 extends _i1.SmartFake implements _i28.File {
  _FakeFile_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AnalyticsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsRepo extends _i1.Mock implements _i29.AnalyticsRepo {
  MockAnalyticsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, int> get requestsFrequency => (super.noSuchMethod(
        Invocation.getter(#requestsFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);

  @override
  Map<String, int> get coreStreamPacketFrequency => (super.noSuchMethod(
        Invocation.getter(#coreStreamPacketFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);

  @override
  Map<String, int> get pageViewFrequency => (super.noSuchMethod(
        Invocation.getter(#pageViewFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);

  @override
  Map<String, int> get daoFrequency => (super.noSuchMethod(
        Invocation.getter(#daoFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);

  @override
  _i30.Stream<void> get coreStreamEvents => (super.noSuchMethod(
        Invocation.getter(#coreStreamEvents),
        returnValue: _i30.Stream<void>.empty(),
      ) as _i30.Stream<void>);

  @override
  _i30.Stream<void> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _i30.Stream<void>.empty(),
      ) as _i30.Stream<void>);

  @override
  _i30.Stream<void> get daoEvents => (super.noSuchMethod(
        Invocation.getter(#daoEvents),
        returnValue: _i30.Stream<void>.empty(),
      ) as _i30.Stream<void>);

  @override
  void incCSF(String? key) => super.noSuchMethod(
        Invocation.method(
          #incCSF,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void incRF(String? key) => super.noSuchMethod(
        Invocation.method(
          #incRF,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void incPVF(String? key) => super.noSuchMethod(
        Invocation.method(
          #incPVF,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void incDao(String? key) => super.noSuchMethod(
        Invocation.method(
          #incDao,
          [key],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Logger].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogger extends _i1.Mock implements _i26.Logger {
  MockLogger() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void v(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #v,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void t(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #t,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void d(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #d,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void i(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #i,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void w(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #w,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void e(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #e,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void wtf(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #wtf,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void f(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #f,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void log(
    _i31.Level? level,
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            level,
            message,
          ],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isClosed() => (super.noSuchMethod(
        Invocation.method(
          #isClosed,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [MessageDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageDao extends _i1.Mock implements _i32.MessageDao {
  MockMessageDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<void> insertMessage(_i33.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #insertMessage,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> updateMessage(_i33.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #updateMessage,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i33.Message>> searchMessages(
    _i5.Uid? roomUid,
    String? keyword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMessages,
          [
            roomUid,
            keyword,
          ],
        ),
        returnValue: _i30.Future<List<_i33.Message>>.value(<_i33.Message>[]),
      ) as _i30.Future<List<_i33.Message>>);

  @override
  _i30.Future<_i33.Message?> getMessage(
    _i5.Uid? roomUid,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessage,
          [
            roomUid,
            id,
          ],
        ),
        returnValue: _i30.Future<_i33.Message?>.value(),
      ) as _i30.Future<_i33.Message?>);

  @override
  _i30.Future<List<_i33.Message>> getMessagePage(
    _i5.Uid? roomUid,
    int? page, {
    int? pageSize = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessagePage,
          [
            roomUid,
            page,
          ],
          {#pageSize: pageSize},
        ),
        returnValue: _i30.Future<List<_i33.Message>>.value(<_i33.Message>[]),
      ) as _i30.Future<List<_i33.Message>>);
}

/// A class which mocks [RoomDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoomDao extends _i1.Mock implements _i34.RoomDao {
  MockRoomDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<void> updateRoom({
    required _i5.Uid? uid,
    _i33.Message? lastMessage,
    int? lastMessageId,
    bool? deleted,
    String? draft,
    int? lastUpdateTime,
    int? firstMessageId,
    bool? pinned,
    int? pinId,
    bool? synced,
    int? lastCurrentUserSentMessageId,
    bool? seenSynced,
    String? replyKeyboardMarkup,
    bool? forceToUpdateReplyKeyboardMarkup = false,
    List<int>? mentionsId,
    bool? shouldUpdateMediaCount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRoom,
          [],
          {
            #uid: uid,
            #lastMessage: lastMessage,
            #lastMessageId: lastMessageId,
            #deleted: deleted,
            #draft: draft,
            #lastUpdateTime: lastUpdateTime,
            #firstMessageId: firstMessageId,
            #pinned: pinned,
            #pinId: pinId,
            #synced: synced,
            #lastCurrentUserSentMessageId: lastCurrentUserSentMessageId,
            #seenSynced: seenSynced,
            #replyKeyboardMarkup: replyKeyboardMarkup,
            #forceToUpdateReplyKeyboardMarkup: forceToUpdateReplyKeyboardMarkup,
            #mentionsId: mentionsId,
            #shouldUpdateMediaCount: shouldUpdateMediaCount,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i35.Room>> getAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #getAllRooms,
          [],
        ),
        returnValue: _i30.Future<List<_i35.Room>>.value(<_i35.Room>[]),
      ) as _i30.Future<List<_i35.Room>>);

  @override
  _i30.Stream<List<_i35.Room>> watchAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #watchAllRooms,
          [],
        ),
        returnValue: _i30.Stream<List<_i35.Room>>.empty(),
      ) as _i30.Stream<List<_i35.Room>>);

  @override
  _i30.Future<_i35.Room?> getRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getRoom,
          [roomUid],
        ),
        returnValue: _i30.Future<_i35.Room?>.value(),
      ) as _i30.Future<_i35.Room?>);

  @override
  _i30.Stream<_i35.Room> watchRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #watchRoom,
          [roomUid],
        ),
        returnValue: _i30.Stream<_i35.Room>.empty(),
      ) as _i30.Stream<_i35.Room>);

  @override
  _i30.Future<List<_i35.Room>> getAllBots() => (super.noSuchMethod(
        Invocation.method(
          #getAllBots,
          [],
        ),
        returnValue: _i30.Future<List<_i35.Room>>.value(<_i35.Room>[]),
      ) as _i30.Future<List<_i35.Room>>);
}

/// A class which mocks [RoomRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoomRepo extends _i1.Mock implements _i36.RoomRepo {
  MockRoomRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<int?> get mentionAnimationId => (super.noSuchMethod(
        Invocation.getter(#mentionAnimationId),
        returnValue: _FakeBehaviorSubject_0<int?>(
          this,
          Invocation.getter(#mentionAnimationId),
        ),
      ) as _i2.BehaviorSubject<int?>);

  @override
  Map<String, _i2.BehaviorSubject<_i37.Activity>> get activityObject =>
      (super.noSuchMethod(
        Invocation.getter(#activityObject),
        returnValue: <String, _i2.BehaviorSubject<_i37.Activity>>{},
      ) as Map<String, _i2.BehaviorSubject<_i37.Activity>>);

  @override
  void addMentionAnimationId(int? id) => super.noSuchMethod(
        Invocation.method(
          #addMentionAnimationId,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<String> getSlangName(
    _i5.Uid? uid, {
    String? unknownName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSlangName,
          [uid],
          {#unknownName: unknownName},
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  bool fastForwardIsVerified(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #fastForwardIsVerified,
          [uid],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<bool> isVerified(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #isVerified,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  String? fastForwardName(_i5.Uid? uid) =>
      (super.noSuchMethod(Invocation.method(
        #fastForwardName,
        [uid],
      )) as String?);

  @override
  String? getContactNameFromCache(_i5.Uid? uid) =>
      (super.noSuchMethod(Invocation.method(
        #getContactNameFromCache,
        [uid],
      )) as String?);

  @override
  _i30.Future<String?> getMyContactNameOfMember(_i5.Uid? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyContactNameOfMember,
          [uid],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<String> getName(
    _i5.Uid? uid, {
    String? unknownName,
    bool? forceToReturnSavedMessage = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getName,
          [uid],
          {
            #unknownName: unknownName,
            #forceToReturnSavedMessage: forceToReturnSavedMessage,
          },
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Stream<String?> watchId(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchId,
          [uid],
        ),
        returnValue: _i30.Stream<String?>.empty(),
      ) as _i30.Stream<String?>);

  @override
  _i30.Future<bool> deleteRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoom,
          [roomUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<List<_i35.Room>> getAllBots() => (super.noSuchMethod(
        Invocation.method(
          #getAllBots,
          [],
        ),
        returnValue: _i30.Future<List<_i35.Room>>.value(<_i35.Room>[]),
      ) as _i30.Future<List<_i35.Room>>);

  @override
  _i30.Future<void> updateRoomInfo(
    _i5.Uid? uid, {
    bool? foreToUpdate = false,
    bool? needToFetchMembers = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRoomInfo,
          [uid],
          {
            #foreToUpdate: foreToUpdate,
            #needToFetchMembers: needToFetchMembers,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void updateActivity(_i37.Activity? activity) => super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [activity],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initActivity(String? roomId) => super.noSuchMethod(
        Invocation.method(
          #initActivity,
          [roomId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateRoomName(
    _i5.Uid? uid,
    String? name,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateRoomName,
          [
            uid,
            name,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<bool> isRoomHaveACustomNotification(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #isRoomHaveACustomNotification,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> setRoomCustomNotification(
    String? uid,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRoomCustomNotification,
          [
            uid,
            path,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<String> getRoomCustomNotification(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoomCustomNotification,
          [uid],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Stream<String> watchRoomCustomNotification(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchRoomCustomNotification,
          [uid],
        ),
        returnValue: _i30.Stream<String>.empty(),
      ) as _i30.Stream<String>);

  @override
  _i30.Future<bool> isRoomMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isRoomMuted,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Stream<bool> watchIsRoomMuted(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsRoomMuted,
          [uid],
        ),
        returnValue: _i30.Stream<bool>.empty(),
      ) as _i30.Stream<bool>);

  @override
  void mute(_i5.Uid? uid) => super.noSuchMethod(
        Invocation.method(
          #mute,
          [uid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unMute(_i5.Uid? uid) => super.noSuchMethod(
        Invocation.method(
          #unMute,
          [uid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<bool> isRoomBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isRoomBlocked,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Stream<bool?> watchIsRoomBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsRoomBlocked,
          [uid],
        ),
        returnValue: _i30.Stream<bool?>.empty(),
      ) as _i30.Stream<bool?>);

  @override
  _i30.Stream<List<_i35.Room>> watchAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #watchAllRooms,
          [],
        ),
        returnValue: _i30.Stream<List<_i35.Room>>.empty(),
      ) as _i30.Stream<List<_i35.Room>>);

  @override
  _i30.Stream<List<String>?> watchAllUnreadRooms() => (super.noSuchMethod(
        Invocation.method(
          #watchAllUnreadRooms,
          [],
        ),
        returnValue: _i30.Stream<List<String>?>.empty(),
      ) as _i30.Stream<List<String>?>);

  @override
  _i30.Stream<List<_i38.Categories>> watchRoomsCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchRoomsCategories,
          [],
        ),
        returnValue: _i30.Stream<List<_i38.Categories>>.empty(),
      ) as _i30.Stream<List<_i38.Categories>>);

  @override
  _i30.Stream<_i35.Room> watchRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #watchRoom,
          [roomUid],
        ),
        returnValue: _i30.Stream<_i35.Room>.empty(),
      ) as _i30.Stream<_i35.Room>);

  @override
  _i30.Future<_i35.Room?> getRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getRoom,
          [roomUid],
        ),
        returnValue: _i30.Future<_i35.Room?>.value(),
      ) as _i30.Future<_i35.Room?>);

  @override
  _i30.Future<int> getRoomLastMessageId(_i5.Uid? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoomLastMessageId,
          [roomUid],
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i30.Future<void> updateMentionIds(
    _i5.Uid? roomUid,
    List<int>? mentionsId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMentionIds,
          [
            roomUid,
            mentionsId,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> processMentionIds(
    _i5.Uid? roomUid,
    List<int>? mentionsId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #processMentionIds,
          [
            roomUid,
            mentionsId,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> createRoomIfNotExist(_i5.Uid? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRoomIfNotExist,
          [roomUid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Stream<_i3.Seen> watchMySeen(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #watchMySeen,
          [roomUid],
        ),
        returnValue: _i30.Stream<_i3.Seen>.empty(),
      ) as _i30.Stream<_i3.Seen>);

  @override
  _i30.Future<_i3.Seen> getMySeen(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getMySeen,
          [roomUid],
        ),
        returnValue: _i30.Future<_i3.Seen>.value(_FakeSeen_1(
          this,
          Invocation.method(
            #getMySeen,
            [roomUid],
          ),
        )),
      ) as _i30.Future<_i3.Seen>);

  @override
  _i30.Future<_i3.Seen?> getOthersSeen(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getOthersSeen,
          [roomUid],
        ),
        returnValue: _i30.Future<_i3.Seen?>.value(),
      ) as _i30.Future<_i3.Seen?>);

  @override
  _i30.Future<void> updateMySeen({
    required _i5.Uid? uid,
    int? messageId,
    int? hiddenMessageCount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMySeen,
          [],
          {
            #uid: uid,
            #messageId: messageId,
            #hiddenMessageCount: hiddenMessageCount,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> updateReplyKeyboard(
    String? replyKeyboardMarkup,
    _i5.Uid? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReplyKeyboard,
          [
            replyKeyboardMarkup,
            uid,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> block(
    String? uid, {
    bool? block,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #block,
          [uid],
          {#block: block},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> fetchBlockedRoom() => (super.noSuchMethod(
        Invocation.method(
          #fetchBlockedRoom,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i5.Uid>> getAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #getAllRooms,
          [],
        ),
        returnValue: _i30.Future<List<_i5.Uid>>.value(<_i5.Uid>[]),
      ) as _i30.Future<List<_i5.Uid>>);

  @override
  _i30.Stream<List<_i39.UidIdName>> searchInRooms(String? text) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInRooms,
          [text],
        ),
        returnValue: _i30.Stream<List<_i39.UidIdName>>.empty(),
      ) as _i30.Stream<List<_i39.UidIdName>>);

  @override
  _i30.Future<String> getUidById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUidById,
          [id],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<_i4.GetUidByIdRes> fetchUidById(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUidById,
          [username],
        ),
        returnValue: _i30.Future<_i4.GetUidByIdRes>.value(_FakeGetUidByIdRes_2(
          this,
          Invocation.method(
            #fetchUidById,
            [username],
          ),
        )),
      ) as _i30.Future<_i4.GetUidByIdRes>);

  @override
  _i30.Future<void> reportRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #reportRoom,
          [roomUid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void updateRoomDraft(
    _i5.Uid? roomUid,
    String? draft,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateRoomDraft,
          [
            roomUid,
            draft,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<bool> isDeletedRoom(_i5.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #isDeletedRoom,
          [roomUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  String getCustomNotificationShowingName(String? customNotificationSound) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomNotificationShowingName,
          [customNotificationSound],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [AuthRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepo extends _i1.Mock implements _i40.AuthRepo {
  MockAuthRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get isOutOfDate => (super.noSuchMethod(
        Invocation.getter(#isOutOfDate),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#isOutOfDate),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<_i41.ClientVersion?> get newClientVersionInformation =>
      (super.noSuchMethod(
        Invocation.getter(#newClientVersionInformation),
        returnValue: _FakeBehaviorSubject_0<_i41.ClientVersion?>(
          this,
          Invocation.getter(#newClientVersionInformation),
        ),
      ) as _i2.BehaviorSubject<_i41.ClientVersion?>);

  @override
  _i5.Uid get currentUserUid => (super.noSuchMethod(
        Invocation.getter(#currentUserUid),
        returnValue: _FakeUid_3(
          this,
          Invocation.getter(#currentUserUid),
        ),
      ) as _i5.Uid);

  @override
  set currentUserUid(_i5.Uid? _currentUserUid) => super.noSuchMethod(
        Invocation.setter(
          #currentUserUid,
          _currentUserUid,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: '',
      ) as String);

  @override
  Duration get serverTimeDiff => (super.noSuchMethod(
        Invocation.getter(#serverTimeDiff),
        returnValue: _FakeDuration_4(
          this,
          Invocation.getter(#serverTimeDiff),
        ),
      ) as Duration);

  @override
  _i30.Stream<bool> get isLocalLockEnabledStream => (super.noSuchMethod(
        Invocation.getter(#isLocalLockEnabledStream),
        returnValue: _i30.Stream<bool>.empty(),
      ) as _i30.Stream<bool>);

  @override
  _i30.Stream<int> watchResendTimer() => (super.noSuchMethod(
        Invocation.method(
          #watchResendTimer,
          [],
        ),
        returnValue: _i30.Stream<int>.empty(),
      ) as _i30.Stream<int>);

  @override
  void resetTimer() => super.noSuchMethod(
        Invocation.method(
          #resetTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String refreshToken({bool? checkDaoFirst = false}) => (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
          {#checkDaoFirst: checkDaoFirst},
        ),
        returnValue: '',
      ) as String);

  @override
  _i30.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i6.VerificationType> getVerificationCode({
    _i42.PhoneNumber? phoneNumber,
    bool? forceToSendSms = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVerificationCode,
          [],
          {
            #phoneNumber: phoneNumber,
            #forceToSendSms: forceToSendSms,
          },
        ),
        returnValue:
            _i30.Future<_i6.VerificationType>.value(_FakeVerificationType_5(
          this,
          Invocation.method(
            #getVerificationCode,
            [],
            {
              #phoneNumber: phoneNumber,
              #forceToSendSms: forceToSendSms,
            },
          ),
        )),
      ) as _i30.Future<_i6.VerificationType>);

  @override
  _i30.Future<_i6.AccessTokenRes> sendVerificationCode(
    String? code, {
    String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCode,
          [code],
          {#password: password},
        ),
        returnValue:
            _i30.Future<_i6.AccessTokenRes>.value(_FakeAccessTokenRes_6(
          this,
          Invocation.method(
            #sendVerificationCode,
            [code],
            {#password: password},
          ),
        )),
      ) as _i30.Future<_i6.AccessTokenRes>);

  @override
  _i30.Future<_i6.AccessTokenRes> checkQrCodeToken(
    String? token, {
    String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkQrCodeToken,
          [token],
          {#password: password},
        ),
        returnValue:
            _i30.Future<_i6.AccessTokenRes>.value(_FakeAccessTokenRes_6(
          this,
          Invocation.method(
            #checkQrCodeToken,
            [token],
            {#password: password},
          ),
        )),
      ) as _i30.Future<_i6.AccessTokenRes>);

  @override
  _i30.Future<_i6.RenewAccessTokenRes> tryRenewTokens({
    String? refreshToken,
    bool? checkDaoFirst = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryRenewTokens,
          [],
          {
            #refreshToken: refreshToken,
            #checkDaoFirst: checkDaoFirst,
          },
        ),
        returnValue: _i30.Future<_i6.RenewAccessTokenRes>.value(
            _FakeRenewAccessTokenRes_7(
          this,
          Invocation.method(
            #tryRenewTokens,
            [],
            {
              #refreshToken: refreshToken,
              #checkDaoFirst: checkDaoFirst,
            },
          ),
        )),
      ) as _i30.Future<_i6.RenewAccessTokenRes>);

  @override
  _i30.Future<String> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  bool isLocalLockEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isLocalLockEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool localPasswordIsCorrect(String? pass) => (super.noSuchMethod(
        Invocation.method(
          #localPasswordIsCorrect,
          [pass],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setLocalPassword(String? pass) => super.noSuchMethod(
        Invocation.method(
          #setLocalPassword,
          [pass],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isCurrentUser(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentUser,
          [uid],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isCurrentUserSender(_i33.Message? msg) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentUserSender,
          [msg],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isCurrentSession(_i43.Session? session) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentSession,
          [session],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> sendForgetPasswordEmail(_i42.PhoneNumber? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendForgetPasswordEmail,
          [phoneNumber],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> syncTimeAndServersSettingWithServer({
    bool? retry = true,
    int? timeout = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncTimeAndServersSettingWithServer,
          [],
          {
            #retry: retry,
            #timeout: timeout,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<bool> login({
    required String? accessToken,
    required String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> updateAndCheckTokens() => (super.noSuchMethod(
        Invocation.method(
          #updateAndCheckTokens,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void handleGrpcError(_i9.GrpcError? e) => super.noSuchMethod(
        Invocation.method(
          #handleGrpcError,
          [e],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitNewClientVersionInformationIfNeeded(
          _i41.ClientVersion? clientVersion) =>
      super.noSuchMethod(
        Invocation.method(
          #emitNewClientVersionInformationIfNeeded,
          [clientVersion],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitOutOfDateIfNeeded() => super.noSuchMethod(
        Invocation.method(
          #emitOutOfDateIfNeeded,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void storeTokens({
    required String? accessToken,
    required String? refreshToken,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #storeTokens,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool checkTokensTimes({
    String? accessToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkTokensTimes,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<bool> checkAccessToken({String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAccessToken,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> checkRefreshToken({String? refreshToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkRefreshToken,
          [],
          {#refreshToken: refreshToken},
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  bool isDeliverTokenValid(
    String? token, {
    bool? isAccessToken = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isDeliverTokenValid,
          [token],
          {#isAccessToken: isAccessToken},
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [FireBaseServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockFireBaseServices extends _i1.Mock implements _i44.FireBaseServices {
  MockFireBaseServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<void> sendFireBaseToken() => (super.noSuchMethod(
        Invocation.method(
          #sendFireBaseToken,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> updateFirebaseToken() => (super.noSuchMethod(
        Invocation.method(
          #updateFirebaseToken,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void deleteToken() => super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> sendGlitchReportForFirebaseNotification(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendGlitchReportForFirebaseNotification,
          [roomUid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [FileRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileRepo extends _i1.Mock implements _i45.FileRepo {
  MockFileRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get localUploadedFilePath => (super.noSuchMethod(
        Invocation.getter(#localUploadedFilePath),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set localUploadedFilePath(Map<String, String>? _localUploadedFilePath) =>
      super.noSuchMethod(
        Invocation.setter(
          #localUploadedFilePath,
          _localUploadedFilePath,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> saveInFileInfo(
    _i27.File? file,
    String? uploadKey,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveInFileInfo,
          [
            file,
            uploadKey,
            name,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i46.File?> uploadClonedFile(
    String? uploadKey,
    String? name, {
    required List<String>? packetIds,
    void Function(int)? sendActivity,
    bool? isVoice = false,
    _i5.Uid? uid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadClonedFile,
          [
            uploadKey,
            name,
          ],
          {
            #packetIds: packetIds,
            #sendActivity: sendActivity,
            #isVoice: isVoice,
            #uid: uid,
          },
        ),
        returnValue: _i30.Future<_i46.File?>.value(),
      ) as _i30.Future<_i46.File?>);

  @override
  _i30.Future<String?> getFilePathFromFileProto(_i46.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilePathFromFileProto,
          [file],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<bool> isExist(
    String? uuid,
    String? filename, {
    _i47.ThumbnailSize? thumbnailSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isExist,
          [
            uuid,
            filename,
          ],
          {#thumbnailSize: thumbnailSize},
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  void saveDownloadedFile(
    String? url,
    String? filename,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveDownloadedFile,
          [
            url,
            filename,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool fileExitInCache(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #fileExitInCache,
          [uuid],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<String?> getFileIfExist(
    String? uuid,
    String? filename, {
    _i47.ThumbnailSize? thumbnailSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileIfExist,
          [
            uuid,
            filename,
          ],
          {#thumbnailSize: thumbnailSize},
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<String?> getFile(
    String? uuid,
    String? filename, {
    String? directUrl,
    _i47.ThumbnailSize? thumbnailSize,
    bool? intiProgressbar = true,
    bool? showAlertOnError = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [
            uuid,
            filename,
          ],
          {
            #directUrl: directUrl,
            #thumbnailSize: thumbnailSize,
            #intiProgressbar: intiProgressbar,
            #showAlertOnError: showAlertOnError,
          },
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<void> saveLocalNetworkFile({
    required String? uuid,
    required String? filename,
    required List<int>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocalNetworkFile,
          [],
          {
            #uuid: uuid,
            #filename: filename,
            #data: data,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void saveDownloadedFileInWeb(
    String? uuid,
    String? name,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveDownloadedFileInWeb,
          [
            uuid,
            name,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void saveTableAdImage(
    _i48.Uint8List? res,
    String? title,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveTableAdImage,
          [
            res,
            title,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void saveFileInDownloadDir(
    String? uuid,
    String? name,
    String? dir,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveFileInDownloadDir,
          [
            uuid,
            name,
            dir,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelUploadFile(String? uuid) => super.noSuchMethod(
        Invocation.method(
          #cancelUploadFile,
          [uuid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void saveFileToSpecifiedAddress(
    String? uuid,
    String? name,
    String? address, {
    bool? convertToJpg = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #saveFileToSpecifiedAddress,
          [
            uuid,
            name,
            address,
          ],
          {#convertToJpg: convertToJpg},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> openFile(
    String? filePath, {
    bool? preferShowInFolder = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openFile,
          [filePath],
          {#preferShowInFolder: preferShowInFolder},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void copyFileToPasteboard(String? path) => super.noSuchMethod(
        Invocation.method(
          #copyFileToPasteboard,
          [path],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LiveLocationRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockLiveLocationRepo extends _i1.Mock implements _i49.LiveLocationRepo {
  MockLiveLocationRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveLiveLocation(_i50.LiveLocation? liveLocation) => super.noSuchMethod(
        Invocation.method(
          #saveLiveLocation,
          [liveLocation],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<_i50.LiveLocation?> getLiveLocation(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLiveLocation,
          [uuid],
        ),
        returnValue: _i30.Future<_i50.LiveLocation?>.value(),
      ) as _i30.Future<_i50.LiveLocation?>);

  @override
  _i30.Stream<_i50.LiveLocation?> watchLiveLocation(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchLiveLocation,
          [uuid],
        ),
        returnValue: _i30.Stream<_i50.LiveLocation?>.empty(),
      ) as _i30.Stream<_i50.LiveLocation?>);

  @override
  void updateLiveLocation(_i51.LiveLocation? liveLocation) =>
      super.noSuchMethod(
        Invocation.method(
          #updateLiveLocation,
          [liveLocation],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<_i7.CreateLiveLocationRes> createLiveLocation(
    _i5.Uid? roomUid,
    int? duration,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLiveLocation,
          [
            roomUid,
            duration,
          ],
        ),
        returnValue: _i30.Future<_i7.CreateLiveLocationRes>.value(
            _FakeCreateLiveLocationRes_8(
          this,
          Invocation.method(
            #createLiveLocation,
            [
              roomUid,
              duration,
            ],
          ),
        )),
      ) as _i30.Future<_i7.CreateLiveLocationRes>);

  @override
  void sendLiveLocationAsStream(
    String? uuid,
    int? duration,
    _i51.Location? location,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendLiveLocationAsStream,
          [
            uuid,
            duration,
            location,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SeenDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeenDao extends _i1.Mock implements _i52.SeenDao {
  MockSeenDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<String?> getRoomSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getRoomSeen,
          [uid],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<void> addRoomSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #addRoomSeen,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Stream<List<String>> watchAllRoomSeen() => (super.noSuchMethod(
        Invocation.method(
          #watchAllRoomSeen,
          [],
        ),
        returnValue: _i30.Stream<List<String>>.empty(),
      ) as _i30.Stream<List<String>>);

  @override
  _i30.Future<void> deleteRoomSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoomSeen,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i3.Seen?> getOthersSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getOthersSeen,
          [uid],
        ),
        returnValue: _i30.Future<_i3.Seen?>.value(),
      ) as _i30.Future<_i3.Seen?>);

  @override
  _i30.Stream<_i3.Seen?> watchOthersSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchOthersSeen,
          [uid],
        ),
        returnValue: _i30.Stream<_i3.Seen?>.empty(),
      ) as _i30.Stream<_i3.Seen?>);

  @override
  _i30.Future<_i3.Seen> getMySeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getMySeen,
          [uid],
        ),
        returnValue: _i30.Future<_i3.Seen>.value(_FakeSeen_1(
          this,
          Invocation.method(
            #getMySeen,
            [uid],
          ),
        )),
      ) as _i30.Future<_i3.Seen>);

  @override
  _i30.Stream<_i3.Seen> watchMySeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchMySeen,
          [uid],
        ),
        returnValue: _i30.Stream<_i3.Seen>.empty(),
      ) as _i30.Stream<_i3.Seen>);

  @override
  _i30.Future<void> saveOthersSeen(_i3.Seen? seen) => (super.noSuchMethod(
        Invocation.method(
          #saveOthersSeen,
          [seen],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> updateMySeen({
    required String? uid,
    int? messageId,
    int? hiddenMessageCount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMySeen,
          [],
          {
            #uid: uid,
            #messageId: messageId,
            #hiddenMessageCount: hiddenMessageCount,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [MucServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockMucServices extends _i1.Mock implements _i53.MucServices {
  MockMucServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i5.Uid?> createNewGroup(
    String? groupName,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewGroup,
          [
            groupName,
            info,
          ],
        ),
        returnValue: _i30.Future<_i5.Uid?>.value(),
      ) as _i30.Future<_i5.Uid?>);

  @override
  _i30.Future<int> addGroupMembers(
    List<_i11.Member>? members,
    _i5.Uid? groupUid, {
    bool? retry = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGroupMembers,
          [
            members,
            groupUid,
          ],
          {#retry: retry},
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i30.Future<int> addBroadcastMembers(
    List<_i11.Member>? members,
    _i5.Uid? broadcastUid, {
    bool? retry = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBroadcastMembers,
          [
            members,
            broadcastUid,
          ],
          {#retry: retry},
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i30.Future<_i54.GetGroupRes?> getGroup(_i5.Uid? groupUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroup,
          [groupUid],
        ),
        returnValue: _i30.Future<_i54.GetGroupRes?>.value(),
      ) as _i30.Future<_i54.GetGroupRes?>);

  @override
  _i30.Future<_i55.GetBroadcastRes?> getBroadcast(_i5.Uid? broadcastUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBroadcast,
          [broadcastUid],
        ),
        returnValue: _i30.Future<_i55.GetBroadcastRes?>.value(),
      ) as _i30.Future<_i55.GetBroadcastRes?>);

  @override
  _i30.Future<bool> removeBroadcast(_i5.Uid? broadcastUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeBroadcast,
          [broadcastUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> removeGroup(_i5.Uid? groupUid) => (super.noSuchMethod(
        Invocation.method(
          #removeGroup,
          [groupUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> changeGroupRole(
    _i11.Member? member,
    _i5.Uid? group,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeGroupRole,
          [
            member,
            group,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<(List<_i11.Member>, bool)> getGroupMembers(
    _i5.Uid? groupUid,
    int? limit,
    int? pointer, {
    String? query = r'*',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMembers,
          [
            groupUid,
            limit,
            pointer,
          ],
          {#query: query},
        ),
        returnValue: _i30.Future<(List<_i11.Member>, bool)>.value(
            (<_i11.Member>[], false)),
      ) as _i30.Future<(List<_i11.Member>, bool)>);

  @override
  _i30.Future<bool> leaveGroup(_i5.Uid? groupUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveGroup,
          [groupUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> kickGroupMembers(
    List<_i11.Member>? members,
    _i5.Uid? groupUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickGroupMembers,
          [
            members,
            groupUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> banGroupMember(
    _i11.Member? member,
    _i5.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #banGroupMember,
          [
            member,
            mucUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> unbanGroupMember(
    _i11.Member? member,
    _i5.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unbanGroupMember,
          [
            member,
            mucUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> joinGroup(
    _i5.Uid? groupUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinGroup,
          [
            groupUid,
            token,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> modifyGroup(
    _i54.GroupInfo? group,
    _i5.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyGroup,
          [
            group,
            mucUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<_i5.Uid?> createNewChannel(
    String? channelName,
    _i12.ChannelType? type,
    String? channelId,
    String? info, {
    bool? retry = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewChannel,
          [
            channelName,
            type,
            channelId,
            info,
          ],
          {#retry: retry},
        ),
        returnValue: _i30.Future<_i5.Uid?>.value(),
      ) as _i30.Future<_i5.Uid?>);

  @override
  _i30.Future<_i5.Uid?> createNewBroadcast(
    String? channelName,
    String? info, {
    bool? retry = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewBroadcast,
          [
            channelName,
            info,
          ],
          {#retry: retry},
        ),
        returnValue: _i30.Future<_i5.Uid?>.value(),
      ) as _i30.Future<_i5.Uid?>);

  @override
  _i30.Future<int> addChannelMembers(
    List<_i11.Member>? members,
    _i5.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addChannelMembers,
          [
            members,
            mucUid,
          ],
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i30.Future<_i12.GetChannelRes?> getChannel(_i5.Uid? channelUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannel,
          [channelUid],
        ),
        returnValue: _i30.Future<_i12.GetChannelRes?>.value(),
      ) as _i30.Future<_i12.GetChannelRes?>);

  @override
  _i30.Future<bool> removeChannel(_i5.Uid? channelUid) => (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channelUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> changeChannelRole(
    _i11.Member? member,
    _i5.Uid? channel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeChannelRole,
          [
            member,
            channel,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<(List<_i11.Member>, bool)> getChannelMembers(
    _i5.Uid? channelUid,
    int? limit,
    int? pointer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelMembers,
          [
            channelUid,
            limit,
            pointer,
          ],
        ),
        returnValue: _i30.Future<(List<_i11.Member>, bool)>.value(
            (<_i11.Member>[], false)),
      ) as _i30.Future<(List<_i11.Member>, bool)>);

  @override
  _i30.Future<(List<_i11.Member>, bool)> getBroadcastMembers(
    _i5.Uid? mucUid,
    int? limit,
    int? pointer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBroadcastMembers,
          [
            mucUid,
            limit,
            pointer,
          ],
        ),
        returnValue: _i30.Future<(List<_i11.Member>, bool)>.value(
            (<_i11.Member>[], false)),
      ) as _i30.Future<(List<_i11.Member>, bool)>);

  @override
  _i30.Future<bool> leaveChannel(_i5.Uid? channelUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveChannel,
          [channelUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> kickChannelMembers(
    List<_i11.Member>? members,
    _i5.Uid? channelUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickChannelMembers,
          [
            members,
            channelUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> kickBroadcastMembers(
    List<_i11.Member>? members,
    _i5.Uid? broadcastUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickBroadcastMembers,
          [
            members,
            broadcastUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> banChannelMember(
    _i11.Member? member,
    _i5.Uid? channelUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #banChannelMember,
          [
            member,
            channelUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> unbanChannelMember(
    _i11.Member? member,
    _i5.Uid? channelUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unbanChannelMember,
          [
            member,
            channelUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> joinChannel(
    _i5.Uid? channelUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannel,
          [
            channelUid,
            token,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> modifyChannel(
    _i12.ChannelInfo? channelInfo,
    _i5.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyChannel,
          [
            channelInfo,
            mucUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> modifyBroadcast(
    _i55.BroadcastInfo? broadcastInfo,
    _i5.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyBroadcast,
          [
            broadcastInfo,
            mucUid,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> pinMessage(_i33.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #pinMessage,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<String> getGroupJointToken({required _i5.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<void> deleteGroupJointToken({required _i5.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<String> getChannelJointToken({required _i5.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<void> deleteChannelJointToken({required _i5.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> unpinMessage(_i33.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #unpinMessage,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [DataStreamServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataStreamServices extends _i1.Mock
    implements _i56.DataStreamServices {
  MockDataStreamServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i33.Message?> handleIncomingMessage(
    _i57.Message? message, {
    String? roomName,
    required bool? isOnlineMessage,
    bool? saveInDatabase = true,
    bool? isFirebaseMessage = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleIncomingMessage,
          [message],
          {
            #roomName: roomName,
            #isOnlineMessage: isOnlineMessage,
            #saveInDatabase: saveInDatabase,
            #isFirebaseMessage: isFirebaseMessage,
          },
        ),
        returnValue: _i30.Future<_i33.Message?>.value(),
      ) as _i30.Future<_i33.Message?>);

  @override
  _i30.Future<bool> isMentioned(_i57.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #isMentioned,
          [message],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> handleSeen(_i58.Seen? seen) => (super.noSuchMethod(
        Invocation.method(
          #handleSeen,
          [seen],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> handleCallEvent(_i16.CallEventV2? callEventV2) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleCallEvent,
          [callEventV2],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void handleActivity(_i37.Activity? activity) => super.noSuchMethod(
        Invocation.method(
          #handleActivity,
          [activity],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> handleAckMessage(
          _i57.MessageDeliveryAck? messageDeliveryAck) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleAckMessage,
          [messageDeliveryAck],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void handleRoomPresenceTypeChange(
          _i59.RoomPresenceTypeChanged? roomPresenceTypeChanged) =>
      super.noSuchMethod(
        Invocation.method(
          #handleRoomPresenceTypeChange,
          [roomPresenceTypeChanged],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<bool> shouldNotifyForThisMessage(_i57.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldNotifyForThisMessage,
          [message],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<_i33.Message?> saveMessageInMessagesDB(_i57.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageInMessagesDB,
          [message],
        ),
        returnValue: _i30.Future<_i33.Message?>.value(),
      ) as _i30.Future<_i33.Message?>);

  @override
  _i30.Future<_i33.Message?> fetchLastNotHiddenMessage(
    _i5.Uid? roomUid,
    int? lastMessageId,
    int? firstMessageId, {
    bool? appRunInForeground = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchLastNotHiddenMessage,
          [
            roomUid,
            lastMessageId,
            firstMessageId,
          ],
          {#appRunInForeground: appRunInForeground},
        ),
        returnValue: _i30.Future<_i33.Message?>.value(),
      ) as _i30.Future<_i33.Message?>);

  @override
  _i30.Future<void> handleFetchMessagesActions(
    _i5.Uid? roomId,
    List<_i57.Message>? messages,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleFetchMessagesActions,
          [
            roomId,
            messages,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i33.Message>> saveFetchMessages(
    List<_i57.Message>? messages, {
    bool? appRunInForeground = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFetchMessages,
          [messages],
          {#appRunInForeground: appRunInForeground},
        ),
        returnValue: _i30.Future<List<_i33.Message>>.value(<_i33.Message>[]),
      ) as _i30.Future<List<_i33.Message>>);
}

/// A class which mocks [CoreServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoreServices extends _i1.Mock implements _i60.CoreServices {
  MockCoreServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get responseChecked => (super.noSuchMethod(
        Invocation.getter(#responseChecked),
        returnValue: false,
      ) as bool);

  @override
  set responseChecked(bool? _responseChecked) => super.noSuchMethod(
        Invocation.setter(
          #responseChecked,
          _responseChecked,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get backoffTime => (super.noSuchMethod(
        Invocation.getter(#backoffTime),
        returnValue: 0,
      ) as int);

  @override
  set backoffTime(int? _backoffTime) => super.noSuchMethod(
        Invocation.setter(
          #backoffTime,
          _backoffTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i60.ConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _FakeBehaviorSubject_0<_i60.ConnectionStatus>(
          this,
          Invocation.getter(#connectionStatus),
        ),
      ) as _i2.BehaviorSubject<_i60.ConnectionStatus>);

  @override
  set connectionStatus(
          _i2.BehaviorSubject<_i60.ConnectionStatus>? _connectionStatus) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionStatus,
          _connectionStatus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<bool> get proposeUseLocalNetwork => (super.noSuchMethod(
        Invocation.getter(#proposeUseLocalNetwork),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#proposeUseLocalNetwork),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  set proposeUseLocalNetwork(
          _i2.BehaviorSubject<bool>? _proposeUseLocalNetwork) =>
      super.noSuchMethod(
        Invocation.setter(
          #proposeUseLocalNetwork,
          _proposeUseLocalNetwork,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get lastRoomMetadataUpdateTime => (super.noSuchMethod(
        Invocation.getter(#lastRoomMetadataUpdateTime),
        returnValue: 0,
      ) as int);

  @override
  _i2.ValueStream<int> get uptimeStartTime => (super.noSuchMethod(
        Invocation.getter(#uptimeStartTime),
        returnValue: _FakeValueStream_9<int>(
          this,
          Invocation.getter(#uptimeStartTime),
        ),
      ) as _i2.ValueStream<int>);

  @override
  _i2.ValueStream<int> get reconnectCount => (super.noSuchMethod(
        Invocation.getter(#reconnectCount),
        returnValue: _FakeValueStream_9<int>(
          this,
          Invocation.getter(#reconnectCount),
        ),
      ) as _i2.ValueStream<int>);

  @override
  void useLocalNetwork() => super.noSuchMethod(
        Invocation.method(
          #useLocalNetwork,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void retryConnection({bool? forced = false}) => super.noSuchMethod(
        Invocation.method(
          #retryConnection,
          [],
          {#forced: forced},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void fasterRetryConnection() => super.noSuchMethod(
        Invocation.method(
          #fasterRetryConnection,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> initStreamConnection() => (super.noSuchMethod(
        Invocation.method(
          #initStreamConnection,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void closeConnection() => super.noSuchMethod(
        Invocation.method(
          #closeConnection,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startCheckerTimer() => super.noSuchMethod(
        Invocation.method(
          #startCheckerTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void checkConnectionTimer() => super.noSuchMethod(
        Invocation.method(
          #checkConnectionTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void gotResponse({required bool? isPong}) => super.noSuchMethod(
        Invocation.method(
          #gotResponse,
          [],
          {#isPong: isPong},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startStream() => super.noSuchMethod(
        Invocation.method(
          #startStream,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> sendMessage(_i57.MessageByClient? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void sendPing() => super.noSuchMethod(
        Invocation.method(
          #sendPing,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> sendSeen(_i58.SeenByClient? seen) => (super.noSuchMethod(
        Invocation.method(
          #sendSeen,
          [seen],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void sendCallAnswer(_i16.CallAnswerByClient? callAnswerByClient) =>
      super.noSuchMethod(
        Invocation.method(
          #sendCallAnswer,
          [callAnswerByClient],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendCallOffer(_i16.CallOfferByClient? callOfferByClient) =>
      super.noSuchMethod(
        Invocation.method(
          #sendCallOffer,
          [callOfferByClient],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendCallEvent(_i16.CallEventV2ByClient? callEventV2ByClient) =>
      super.noSuchMethod(
        Invocation.method(
          #sendCallEvent,
          [callEventV2ByClient],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendActivity(
    _i37.ActivityByClient? activity,
    String? id,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendActivity,
          [
            activity,
            id,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [QueryServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueryServiceClient extends _i1.Mock
    implements _i4.QueryServiceClient {
  MockQueryServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.ResponseFuture<_i4.GetTimeRes> getTime(
    _i4.GetTimeReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTime,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetTimeRes>(
          this,
          Invocation.method(
            #getTime,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetTimeRes>);

  @override
  _i8.ResponseFuture<_i4.IdIsAvailableRes> idIsAvailable(
    _i4.IdIsAvailableReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idIsAvailable,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.IdIsAvailableRes>(
          this,
          Invocation.method(
            #idIsAvailable,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.IdIsAvailableRes>);

  @override
  _i8.ResponseFuture<_i4.SetIdRes> setId(
    _i4.SetIdReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setId,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.SetIdRes>(
          this,
          Invocation.method(
            #setId,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.SetIdRes>);

  @override
  _i8.ResponseFuture<_i4.BlockUidRes> blockUid(
    _i4.BlockUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #blockUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.BlockUidRes>(
          this,
          Invocation.method(
            #blockUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.BlockUidRes>);

  @override
  _i8.ResponseFuture<_i4.UnblockUidRes> unblockUid(
    _i4.UnblockUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unblockUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.UnblockUidRes>(
          this,
          Invocation.method(
            #unblockUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.UnblockUidRes>);

  @override
  _i8.ResponseFuture<_i4.ReportRes> report(
    _i4.ReportReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #report,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.ReportRes>(
          this,
          Invocation.method(
            #report,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.ReportRes>);

  @override
  _i8.ResponseFuture<_i4.GetBlockedListRes> getBlockedList(
    _i4.GetBlockedListReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBlockedList,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetBlockedListRes>(
          this,
          Invocation.method(
            #getBlockedList,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetBlockedListRes>);

  @override
  _i8.ResponseFuture<_i4.GetIdByUidRes> getIdByUid(
    _i4.GetIdByUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdByUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetIdByUidRes>(
          this,
          Invocation.method(
            #getIdByUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetIdByUidRes>);

  @override
  _i8.ResponseFuture<_i4.GetUidByIdRes> getUidById(
    _i4.GetUidByIdReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUidById,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetUidByIdRes>(
          this,
          Invocation.method(
            #getUidById,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetUidByIdRes>);

  @override
  _i8.ResponseFuture<_i4.GetIsVerifiedRes> getIsVerified(
    _i4.GetIsVerifiedReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIsVerified,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetIsVerifiedRes>(
          this,
          Invocation.method(
            #getIsVerified,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetIsVerifiedRes>);

  @override
  _i8.ResponseFuture<_i4.SearchUidRes> searchUid(
    _i4.SearchUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.SearchUidRes>(
          this,
          Invocation.method(
            #searchUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.SearchUidRes>);

  @override
  _i8.ResponseFuture<_i4.GetLastActivityRes> getLastActivity(
    _i4.GetLastActivityReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastActivity,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetLastActivityRes>(
          this,
          Invocation.method(
            #getLastActivity,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetLastActivityRes>);

  @override
  _i8.ResponseFuture<_i4.FetchMessagesRes> fetchMessages(
    _i4.FetchMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchMessagesRes>(
          this,
          Invocation.method(
            #fetchMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchMessagesRes>);

  @override
  _i8.ResponseFuture<_i4.CountIsHiddenMessagesRes> countIsHiddenMessages(
    _i4.CountIsHiddenMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #countIsHiddenMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.CountIsHiddenMessagesRes>(
          this,
          Invocation.method(
            #countIsHiddenMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.CountIsHiddenMessagesRes>);

  @override
  _i8.ResponseFuture<_i4.GetAllUserRoomMetaRes> getAllUserRoomMeta(
    _i4.GetAllUserRoomMetaReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUserRoomMeta,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetAllUserRoomMetaRes>(
          this,
          Invocation.method(
            #getAllUserRoomMeta,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetAllUserRoomMetaRes>);

  @override
  _i8.ResponseFuture<_i4.GetUserRoomMetaRes> getUserRoomMeta(
    _i4.GetUserRoomMetaReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRoomMeta,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetUserRoomMetaRes>(
          this,
          Invocation.method(
            #getUserRoomMeta,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetUserRoomMetaRes>);

  @override
  _i8.ResponseFuture<_i4.GetUserLastDeliveryAckRes> getUserLastDeliveryAck(
    _i4.GetUserLastDeliveryAckReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLastDeliveryAck,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetUserLastDeliveryAckRes>(
          this,
          Invocation.method(
            #getUserLastDeliveryAck,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetUserLastDeliveryAckRes>);

  @override
  _i8.ResponseFuture<_i4.GetMediaMetadataRes> getMediaMetadata(
    _i4.GetMediaMetadataReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaMetadata,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetMediaMetadataRes>(
          this,
          Invocation.method(
            #getMediaMetadata,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetMediaMetadataRes>);

  @override
  _i8.ResponseFuture<_i4.FetchMediasRes> fetchMedias(
    _i4.FetchMediasReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMedias,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchMediasRes>(
          this,
          Invocation.method(
            #fetchMedias,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchMediasRes>);

  @override
  _i8.ResponseFuture<_i4.GetMetaCountsRes> getMetaCounts(
    _i4.GetMetaCountsReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaCounts,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetMetaCountsRes>(
          this,
          Invocation.method(
            #getMetaCounts,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetMetaCountsRes>);

  @override
  _i8.ResponseFuture<_i4.FetchMetaListRes> fetchMetaList(
    _i4.FetchMetaListReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMetaList,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchMetaListRes>(
          this,
          Invocation.method(
            #fetchMetaList,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchMetaListRes>);

  @override
  _i8.ResponseFuture<_i4.FetchMessageMetaIndexRes> fetchMessageMetaIndex(
    _i4.FetchMessageMetaIndexReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMessageMetaIndex,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchMessageMetaIndexRes>(
          this,
          Invocation.method(
            #fetchMessageMetaIndex,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchMessageMetaIndexRes>);

  @override
  _i8.ResponseFuture<_i4.FetchMetaDeletedIndexesRes> fetchMetaDeletedIndexes(
    _i4.FetchMetaDeletedIndexesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMetaDeletedIndexes,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchMetaDeletedIndexesRes>(
          this,
          Invocation.method(
            #fetchMetaDeletedIndexes,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchMetaDeletedIndexesRes>);

  @override
  _i8.ResponseFuture<_i4.FetchMentionListRes> fetchMentionList(
    _i4.FetchMentionListReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMentionList,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchMentionListRes>(
          this,
          Invocation.method(
            #fetchMentionList,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchMentionListRes>);

  @override
  _i8.ResponseFuture<_i4.FetchCurrentUserSeenDataRes> fetchCurrentUserSeenData(
    _i4.FetchCurrentUserSeenDataReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCurrentUserSeenData,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchCurrentUserSeenDataRes>(
          this,
          Invocation.method(
            #fetchCurrentUserSeenData,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchCurrentUserSeenDataRes>);

  @override
  _i8.ResponseFuture<_i4.FetchLastOtherUserSeenDataRes>
      fetchLastOtherUserSeenData(
    _i4.FetchLastOtherUserSeenDataReq? request, {
    _i8.CallOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchLastOtherUserSeenData,
              [request],
              {#options: options},
            ),
            returnValue:
                _FakeResponseFuture_10<_i4.FetchLastOtherUserSeenDataRes>(
              this,
              Invocation.method(
                #fetchLastOtherUserSeenData,
                [request],
                {#options: options},
              ),
            ),
          ) as _i8.ResponseFuture<_i4.FetchLastOtherUserSeenDataRes>);

  @override
  _i8.ResponseFuture<_i4.FetchSeenCountOfChannelMessageRes>
      fetchSeenCountOfChannelMessage(
    _i4.FetchSeenCountOfChannelMessageReq? request, {
    _i8.CallOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchSeenCountOfChannelMessage,
              [request],
              {#options: options},
            ),
            returnValue:
                _FakeResponseFuture_10<_i4.FetchSeenCountOfChannelMessageRes>(
              this,
              Invocation.method(
                #fetchSeenCountOfChannelMessage,
                [request],
                {#options: options},
              ),
            ),
          ) as _i8.ResponseFuture<_i4.FetchSeenCountOfChannelMessageRes>);

  @override
  _i8.ResponseFuture<_i4.FetchUserCallsRes> fetchUserCalls(
    _i4.FetchUserCallsReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserCalls,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.FetchUserCallsRes>(
          this,
          Invocation.method(
            #fetchUserCalls,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.FetchUserCallsRes>);

  @override
  _i8.ResponseFuture<_i4.UpdateMessageRes> updateMessage(
    _i4.UpdateMessageReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessage,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.UpdateMessageRes>(
          this,
          Invocation.method(
            #updateMessage,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.UpdateMessageRes>);

  @override
  _i8.ResponseFuture<_i4.DeleteMessageRes> deleteMessage(
    _i4.DeleteMessageReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.DeleteMessageRes>(
          this,
          Invocation.method(
            #deleteMessage,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.DeleteMessageRes>);

  @override
  _i8.ResponseFuture<_i4.ForwardMessagesRes> forwardMessages(
    _i4.ForwardMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #forwardMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.ForwardMessagesRes>(
          this,
          Invocation.method(
            #forwardMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.ForwardMessagesRes>);

  @override
  _i8.ResponseFuture<_i4.AddAvatarRes> addAvatar(
    _i4.AddAvatarReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAvatar,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.AddAvatarRes>(
          this,
          Invocation.method(
            #addAvatar,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.AddAvatarRes>);

  @override
  _i8.ResponseFuture<_i4.RemoveAvatarRes> removeAvatar(
    _i4.RemoveAvatarReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAvatar,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.RemoveAvatarRes>(
          this,
          Invocation.method(
            #removeAvatar,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.RemoveAvatarRes>);

  @override
  _i8.ResponseFuture<_i4.RemovePrivateRoomRes> removePrivateRoom(
    _i4.RemovePrivateRoomReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePrivateRoom,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.RemovePrivateRoomRes>(
          this,
          Invocation.method(
            #removePrivateRoom,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.RemovePrivateRoomRes>);

  @override
  _i8.ResponseFuture<_i4.SearchInMessagesRes> searchInMessages(
    _i4.SearchInMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.SearchInMessagesRes>(
          this,
          Invocation.method(
            #searchInMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.SearchInMessagesRes>);

  @override
  _i8.ResponseFuture<_i4.SendGlitchRes> sendGlitch(
    _i4.SendGlitchReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendGlitch,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.SendGlitchRes>(
          this,
          Invocation.method(
            #sendGlitch,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.SendGlitchRes>);

  @override
  _i8.ResponseFuture<_i4.CreateGroupCallRes> createGroupCall(
    _i4.CreateGroupCallReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGroupCall,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.CreateGroupCallRes>(
          this,
          Invocation.method(
            #createGroupCall,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.CreateGroupCallRes>);

  @override
  _i8.ResponseFuture<_i4.EndGroupCallRes> endGroupCall(
    _i4.EndGroupCallReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #endGroupCall,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.EndGroupCallRes>(
          this,
          Invocation.method(
            #endGroupCall,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.EndGroupCallRes>);

  @override
  _i8.ResponseFuture<_i4.SetMuteSettingsOfRoomRes> setMuteSettingsOfRoom(
    _i4.SetMuteSettingsOfRoomReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMuteSettingsOfRoom,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.SetMuteSettingsOfRoomRes>(
          this,
          Invocation.method(
            #setMuteSettingsOfRoom,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.SetMuteSettingsOfRoomRes>);

  @override
  _i8.ResponseFuture<_i4.UpdateSettingsRes> updateSettings(
    _i4.UpdateSettingsReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSettings,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.UpdateSettingsRes>(
          this,
          Invocation.method(
            #updateSettings,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.UpdateSettingsRes>);

  @override
  _i8.ResponseFuture<_i4.GetSettingsRes> getSettings(
    _i4.GetSettingsReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i4.GetSettingsRes>(
          this,
          Invocation.method(
            #getSettings,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i4.GetSettingsRes>);

  @override
  _i8.ResponseFuture<_i4.CheckCallAvailabilityStatusRes>
      checkCallAvailabilityStatus(
    _i4.CheckCallAvailabilityStatusReq? request, {
    _i8.CallOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #checkCallAvailabilityStatus,
              [request],
              {#options: options},
            ),
            returnValue:
                _FakeResponseFuture_10<_i4.CheckCallAvailabilityStatusRes>(
              this,
              Invocation.method(
                #checkCallAvailabilityStatus,
                [request],
                {#options: options},
              ),
            ),
          ) as _i8.ResponseFuture<_i4.CheckCallAvailabilityStatusRes>);

  @override
  _i9.ClientCall<Q, R> $createCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i30.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_11<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i9.ClientCall<Q, R>);

  @override
  _i8.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    Q? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<R>);

  @override
  _i8.ResponseStream<R> $createStreamingCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i30.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_12<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseStream<R>);
}

/// A class which mocks [AuthServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthServiceClient extends _i1.Mock implements _i6.AuthServiceClient {
  MockAuthServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.ResponseFuture<_i6.GetVerificationCodeRes> getVerificationCode(
    _i6.GetVerificationCodeReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVerificationCode,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.GetVerificationCodeRes>(
          this,
          Invocation.method(
            #getVerificationCode,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.GetVerificationCodeRes>);

  @override
  _i8.ResponseFuture<_i6.AccessTokenRes> verifyAndGetToken(
    _i6.VerifyCodeReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyAndGetToken,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.AccessTokenRes>(
          this,
          Invocation.method(
            #verifyAndGetToken,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.AccessTokenRes>);

  @override
  _i8.ResponseFuture<_i6.AccessTokenRes> checkQrCodeIsVerifiedAndLogin(
    _i6.CheckQrCodeIsVerifiedAndLoginReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkQrCodeIsVerifiedAndLogin,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.AccessTokenRes>(
          this,
          Invocation.method(
            #checkQrCodeIsVerifiedAndLogin,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.AccessTokenRes>);

  @override
  _i8.ResponseFuture<_i6.RenewAccessTokenRes> renewAccessToken(
    _i6.RenewAccessTokenReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #renewAccessToken,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.RenewAccessTokenRes>(
          this,
          Invocation.method(
            #renewAccessToken,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.RenewAccessTokenRes>);

  @override
  _i8.ResponseFuture<_i6.VerifyEmailAddressRes> verifyEmailAddress(
    _i6.VerifyEmailAddressReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyEmailAddress,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.VerifyEmailAddressRes>(
          this,
          Invocation.method(
            #verifyEmailAddress,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.VerifyEmailAddressRes>);

  @override
  _i8.ResponseFuture<_i6.SendErasePasswordEmailRes> sendErasePasswordEmail(
    _i6.SendErasePasswordEmailReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendErasePasswordEmail,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.SendErasePasswordEmailRes>(
          this,
          Invocation.method(
            #sendErasePasswordEmail,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.SendErasePasswordEmailRes>);

  @override
  _i8.ResponseFuture<_i6.ErasePasswordRes> erasePassword(
    _i6.ErasePasswordReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #erasePassword,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<_i6.ErasePasswordRes>(
          this,
          Invocation.method(
            #erasePassword,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i6.ErasePasswordRes>);

  @override
  _i9.ClientCall<Q, R> $createCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i30.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_11<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i9.ClientCall<Q, R>);

  @override
  _i8.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    Q? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_10<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<R>);

  @override
  _i8.ResponseStream<R> $createStreamingCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i30.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_12<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseStream<R>);
}

/// A class which mocks [SharedDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedDao extends _i1.Mock implements _i61.SharedDao {
  MockSharedDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<String?> get(_i62.SharedKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<void> put(
    _i62.SharedKeys? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<Map<String, String>> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: _i30.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i30.Future<Map<String, String>>);
}

/// A class which mocks [AvatarRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAvatarRepo extends _i1.Mock implements _i63.AvatarRepo {
  MockAvatarRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<void> fetchAvatar(
    _i5.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAvatar,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Stream<List<_i64.Avatar?>> watchAvatars(
    _i5.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAvatars,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i30.Stream<List<_i64.Avatar?>>.empty(),
      ) as _i30.Stream<List<_i64.Avatar?>>);

  @override
  _i30.Future<_i64.Avatar?> getLastAvatar(
    _i5.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastAvatar,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i30.Future<_i64.Avatar?>.value(),
      ) as _i30.Future<_i64.Avatar?>);

  @override
  _i30.Future<void> setMucAvatar(
    _i5.Uid? uid,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMucAvatar,
          [
            uid,
            path,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  String? fastForwardAvatarFilePath(_i5.Uid? userUid) =>
      (super.noSuchMethod(Invocation.method(
        #fastForwardAvatarFilePath,
        [userUid],
      )) as String?);

  @override
  _i30.Stream<String?> getLastAvatarFilePathStream(
    _i5.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastAvatarFilePathStream,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i30.Stream<String?>.empty(),
      ) as _i30.Stream<String?>);

  @override
  _i30.Future<void> uploadAvatar(
    String? path,
    _i5.Uid? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAvatar,
          [
            path,
            uid,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> deleteAvatar(_i64.Avatar? avatar) => (super.noSuchMethod(
        Invocation.method(
          #deleteAvatar,
          [avatar],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [BlockDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockBlockDao extends _i1.Mock implements _i65.BlockDao {
  MockBlockDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<bool> isBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isBlocked,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Stream<bool?> watchIsBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsBlocked,
          [uid],
        ),
        returnValue: _i30.Stream<bool?>.empty(),
      ) as _i30.Stream<bool?>);

  @override
  _i30.Future<void> block(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #block,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> unblock(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #unblock,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [I18N].
///
/// See the documentation for Mockito's code generation for more information.
class MockI18N extends _i1.Mock implements _i66.I18N {
  MockI18N() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isRtl => (super.noSuchMethod(
        Invocation.getter(#isRtl),
        returnValue: false,
      ) as bool);

  @override
  List<String> get changelogs => (super.noSuchMethod(
        Invocation.getter(#changelogs),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get isPersian => (super.noSuchMethod(
        Invocation.getter(#isPersian),
        returnValue: false,
      ) as bool);

  @override
  _i10.TextDirection get defaultTextDirection => (super.noSuchMethod(
        Invocation.getter(#defaultTextDirection),
        returnValue: _i10.TextDirection.rtl,
      ) as _i10.TextDirection);

  @override
  _i10.TextDirection get reverseDefaultTextDirection => (super.noSuchMethod(
        Invocation.getter(#reverseDefaultTextDirection),
        returnValue: _i10.TextDirection.rtl,
      ) as _i10.TextDirection);

  @override
  _i30.Stream<dynamic> get localeStream => (super.noSuchMethod(
        Invocation.getter(#localeStream),
        returnValue: _i30.Stream<dynamic>.empty(),
      ) as _i30.Stream<dynamic>);

  @override
  _i10.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_13(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i10.Locale);

  @override
  _i67.Language get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: _i67.Language.FARSI,
      ) as _i67.Language);

  @override
  String get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValue: '',
      ) as String);

  @override
  String operator [](String? key) => (super.noSuchMethod(
        Invocation.method(
          #[],
          [key],
        ),
        returnValue: '',
      ) as String);

  @override
  String verb(
    String? key, {
    bool? isFirstPerson = false,
    bool? needParticleSuffixed = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verb,
          [key],
          {
            #isFirstPerson: isFirstPerson,
            #needParticleSuffixed: needParticleSuffixed,
          },
        ),
        returnValue: '',
      ) as String);

  @override
  void changeLanguage(_i67.Language? language) => super.noSuchMethod(
        Invocation.method(
          #changeLanguage,
          [language],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.TextDirection getDirection(String? v) => (super.noSuchMethod(
        Invocation.method(
          #getDirection,
          [v],
        ),
        returnValue: _i10.TextDirection.rtl,
      ) as _i10.TextDirection);

  @override
  _i21.CrossAxisAlignment getCrossAxisAlignment(String? v) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCrossAxisAlignment,
          [v],
        ),
        returnValue: _i21.CrossAxisAlignment.start,
      ) as _i21.CrossAxisAlignment);
}

/// A class which mocks [MuteDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMuteDao extends _i1.Mock implements _i68.MuteDao {
  MockMuteDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<bool> isMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isMuted,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Stream<bool> watchIsMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsMuted,
          [uid],
        ),
        returnValue: _i30.Stream<bool>.empty(),
      ) as _i30.Stream<bool>);

  @override
  _i30.Future<void> mute(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #mute,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> unMute(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #unMute,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [UidIdNameDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUidIdNameDao extends _i1.Mock implements _i69.UidIdNameDao {
  MockUidIdNameDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i39.UidIdName?> getByUid(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #getByUid,
          [uid],
        ),
        returnValue: _i30.Future<_i39.UidIdName?>.value(),
      ) as _i30.Future<_i39.UidIdName?>);

  @override
  _i30.Stream<String?> watchIdByUid(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIdByUid,
          [uid],
        ),
        returnValue: _i30.Stream<String?>.empty(),
      ) as _i30.Stream<String?>);

  @override
  _i30.Future<String?> getUidById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUidById,
          [id],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<void> update(
    _i5.Uid? uid, {
    String? id,
    String? name,
    String? realName,
    bool? isContact = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [uid],
          {
            #id: id,
            #name: name,
            #realName: realName,
            #isContact: isContact,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i39.UidIdName>> search(String? term) => (super.noSuchMethod(
        Invocation.method(
          #search,
          [term],
        ),
        returnValue:
            _i30.Future<List<_i39.UidIdName>>.value(<_i39.UidIdName>[]),
      ) as _i30.Future<List<_i39.UidIdName>>);

  @override
  _i30.Future<List<_i39.UidIdName>> searchInContacts(String? term) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInContacts,
          [term],
        ),
        returnValue:
            _i30.Future<List<_i39.UidIdName>>.value(<_i39.UidIdName>[]),
      ) as _i30.Future<List<_i39.UidIdName>>);
}

/// A class which mocks [ContactRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactRepo extends _i1.Mock implements _i70.ContactRepo {
  MockContactRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get isSyncingContacts => (super.noSuchMethod(
        Invocation.getter(#isSyncingContacts),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#isSyncingContacts),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<double> get sendContactProgress => (super.noSuchMethod(
        Invocation.getter(#sendContactProgress),
        returnValue: _FakeBehaviorSubject_0<double>(
          this,
          Invocation.getter(#sendContactProgress),
        ),
      ) as _i2.BehaviorSubject<double>);

  @override
  bool get hasContactPermission => (super.noSuchMethod(
        Invocation.getter(#hasContactPermission),
        returnValue: false,
      ) as bool);

  @override
  set hasContactPermission(bool? _hasContactPermission) => super.noSuchMethod(
        Invocation.setter(
          #hasContactPermission,
          _hasContactPermission,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> syncContacts(_i21.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncContacts,
          [context],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> sendNotSyncedContactInStartTime() => (super.noSuchMethod(
        Invocation.method(
          #sendNotSyncedContactInStartTime,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> sendContacts(
    List<_i71.Contact>? contacts, {
    bool? initProgressbar = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendContacts,
          [contacts],
          {#initProgressbar: initProgressbar},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<String?> sendNewContact(_i71.Contact? contact) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendNewContact,
          [contact],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Stream<List<_i72.Contact>> watchAllMessengerContacts() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllMessengerContacts,
          [],
        ),
        returnValue: _i30.Stream<List<_i72.Contact>>.empty(),
      ) as _i30.Stream<List<_i72.Contact>>);

  @override
  _i30.Future<List<_i72.Contact>> getAllUserAsContact() => (super.noSuchMethod(
        Invocation.method(
          #getAllUserAsContact,
          [],
        ),
        returnValue: _i30.Future<List<_i72.Contact>>.value(<_i72.Contact>[]),
      ) as _i30.Future<List<_i72.Contact>>);

  @override
  _i30.Future<List<_i72.Contact>> getNotMessengerContacts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotMessengerContacts,
          [],
        ),
        returnValue: _i30.Future<List<_i72.Contact>>.value(<_i72.Contact>[]),
      ) as _i30.Future<List<_i72.Contact>>);

  @override
  _i30.Stream<List<_i72.Contact>> watchNotMessengerContact() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNotMessengerContact,
          [],
        ),
        returnValue: _i30.Stream<List<_i72.Contact>>.empty(),
      ) as _i30.Stream<List<_i72.Contact>>);

  @override
  _i30.Stream<List<_i72.Contact>> watchAll() => (super.noSuchMethod(
        Invocation.method(
          #watchAll,
          [],
        ),
        returnValue: _i30.Stream<List<_i72.Contact>>.empty(),
      ) as _i30.Stream<List<_i72.Contact>>);

  @override
  _i30.Future<void> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> getUserIdByUid(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserIdByUid,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> fetchMemberId(_i73.Member? member) => (super.noSuchMethod(
        Invocation.method(
          #fetchMemberId,
          [member],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i5.Uid>> searchUser(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchUser,
          [query],
        ),
        returnValue: _i30.Future<List<_i5.Uid>>.value(<_i5.Uid>[]),
      ) as _i30.Future<List<_i5.Uid>>);

  @override
  _i30.Future<_i72.Contact?> getContact(_i5.Uid? userUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContact,
          [userUid],
        ),
        returnValue: _i30.Future<_i72.Contact?>.value(),
      ) as _i30.Future<_i72.Contact?>);

  @override
  _i30.Future<({String? name, String? realName})> getContactFromServer(
    _i5.Uid? contactUid, {
    bool? ignoreInsertingOrUpdatingContactDao = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContactFromServer,
          [contactUid],
          {
            #ignoreInsertingOrUpdatingContactDao:
                ignoreInsertingOrUpdatingContactDao
          },
        ),
        returnValue: _i30.Future<({String? name, String? realName})>.value(
            (name: null, realName: null)),
      ) as _i30.Future<({String? name, String? realName})>);

  @override
  _i30.Future<bool> contactIsExist(
    int? countryCode,
    int? nationalNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #contactIsExist,
          [
            countryCode,
            nationalNumber,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> importContactsFormVcard() => (super.noSuchMethod(
        Invocation.method(
          #importContactsFormVcard,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [AccountRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepo extends _i1.Mock implements _i74.AccountRepo {
  MockAccountRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<bool> hasProfile({bool? retry = false}) => (super.noSuchMethod(
        Invocation.method(
          #hasProfile,
          [],
          {#retry: retry},
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> getUserProfileFromServer() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfileFromServer,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Stream<_i75.Account?> getAccountAsStream() => (super.noSuchMethod(
        Invocation.method(
          #getAccountAsStream,
          [],
        ),
        returnValue: _i30.Stream<_i75.Account?>.empty(),
      ) as _i30.Stream<_i75.Account?>);

  @override
  _i30.Future<bool> idIsAvailable(String? username) => (super.noSuchMethod(
        Invocation.method(
          #idIsAvailable,
          [username],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> updateEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [email],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> setAccountDetails({
    String? username,
    String? firstname,
    String? lastname,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAccountDetails,
          [],
          {
            #username: username,
            #firstname: firstname,
            #lastname: lastname,
            #description: description,
          },
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> updatePassword({
    String? currentPassword,
    required String? newPassword,
    String? passwordHint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #currentPassword: currentPassword,
            #newPassword: newPassword,
            #passwordHint: passwordHint,
          },
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> disableTwoStepVerification(String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableTwoStepVerification,
          [password],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<List<_i43.Session>> getSessions() => (super.noSuchMethod(
        Invocation.method(
          #getSessions,
          [],
        ),
        returnValue: _i30.Future<List<_i43.Session>>.value(<_i43.Session>[]),
      ) as _i30.Future<List<_i43.Session>>);

  @override
  _i30.Future<void> checkUpdatePlatformSessionInformation() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkUpdatePlatformSessionInformation,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> updatePlatformVersion() => (super.noSuchMethod(
        Invocation.method(
          #updatePlatformVersion,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  bool shouldUpdateSessionPlatformInformation(String? previousVersion) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldUpdateSessionPlatformInformation,
          [previousVersion],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool shouldShowNewFeaturesDialog(String? previousVersion) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldShowNewFeaturesDialog,
          [previousVersion],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<bool> verifyQrCodeToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #verifyQrCodeToken,
          [token],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> revokeSession(String? session) => (super.noSuchMethod(
        Invocation.method(
          #revokeSession,
          [session],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> revokeAllOtherSession() => (super.noSuchMethod(
        Invocation.method(
          #revokeAllOtherSession,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  String getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: '',
      ) as String);

  @override
  bool shouldShowNewFeatureDialog() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowNewFeatureDialog,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<bool> isTwoStepVerificationEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isTwoStepVerificationEnabled,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> changeTwoStepVerificationPassword({
    required String? currentPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeTwoStepVerificationPassword,
          [],
          {
            #currentPassword: currentPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
}

/// A class which mocks [MucRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMucRepo extends _i1.Mock implements _i76.MucRepo {
  MockMucRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i5.Uid?> createNewGroup(
    List<_i5.Uid>? memberUidList,
    String? groupName,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewGroup,
          [
            memberUidList,
            groupName,
            info,
          ],
        ),
        returnValue: _i30.Future<_i5.Uid?>.value(),
      ) as _i30.Future<_i5.Uid?>);

  @override
  _i30.Future<_i5.Uid?> createNewChannel(
    String? channelId,
    List<_i5.Uid>? memberUidList,
    String? channelName,
    _i12.ChannelType? channelType,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewChannel,
          [
            channelId,
            memberUidList,
            channelName,
            channelType,
            info,
          ],
        ),
        returnValue: _i30.Future<_i5.Uid?>.value(),
      ) as _i30.Future<_i5.Uid?>);

  @override
  _i30.Future<_i5.Uid?> createNewBroadcast(
    List<_i5.Uid>? memberUidList,
    String? channelName,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewBroadcast,
          [
            memberUidList,
            channelName,
            info,
          ],
        ),
        returnValue: _i30.Future<_i5.Uid?>.value(),
      ) as _i30.Future<_i5.Uid?>);

  @override
  _i30.Future<bool> channelIdIsAvailable(String? id) => (super.noSuchMethod(
        Invocation.method(
          #channelIdIsAvailable,
          [id],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<List<_i73.Member>> fetchMucMembers(
    _i5.Uid? mucUid,
    int? len, {
    String? query = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMucMembers,
          [
            mucUid,
            len,
          ],
          {#query: query},
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i30.Future<String> getGroupJointToken({required _i5.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<void> deleteGroupJointToken({required _i5.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<String> getChannelJointToken({required _i5.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<void> deleteChannelJointToken({required _i5.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i77.Muc?> fetchMucInfo(
    _i5.Uid? mucUid, {
    bool? createNewRoom = false,
    bool? needToFetchMembers = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMucInfo,
          [mucUid],
          {
            #createNewRoom: createNewRoom,
            #needToFetchMembers: needToFetchMembers,
          },
        ),
        returnValue: _i30.Future<_i77.Muc?>.value(),
      ) as _i30.Future<_i77.Muc?>);

  @override
  _i30.Future<({bool isAdmin, bool isOwner})> getCurrentUserRoleIsAdminOrOwner(
          _i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserRoleIsAdminOrOwner,
          [mucUid],
        ),
        returnValue: _i30.Future<({bool isAdmin, bool isOwner})>.value(
            (isAdmin: false, isOwner: false)),
      ) as _i30.Future<({bool isAdmin, bool isOwner})>);

  @override
  _i30.Future<bool> currentUserIsMucOwner(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #currentUserIsMucOwner,
          [mucUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<List<_i73.Member>> searchMemberByNameOrId(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMemberByNameOrId,
          [mucUid],
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i30.Future<List<_i73.Member>> getAllMembers(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMembers,
          [mucUid],
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i30.Future<List<_i73.Member>> getAllMembersWithUserName(
    _i5.Uid? mucUid, {
    String? query = r'*',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMembersWithUserName,
          [mucUid],
          {#query: query},
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i30.Stream<List<_i73.Member>> watchAllMembers(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllMembers,
          [mucUid],
        ),
        returnValue: _i30.Stream<List<_i73.Member>>.empty(),
      ) as _i30.Stream<List<_i73.Member>>);

  @override
  _i30.Future<_i77.Muc?> getMuc(_i5.Uid? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #getMuc,
          [mucUid],
        ),
        returnValue: _i30.Future<_i77.Muc?>.value(),
      ) as _i30.Future<_i77.Muc?>);

  @override
  _i30.Stream<_i77.Muc?> watchMuc(_i5.Uid? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #watchMuc,
          [mucUid],
        ),
        returnValue: _i30.Stream<_i77.Muc?>.empty(),
      ) as _i30.Stream<_i77.Muc?>);

  @override
  _i30.Future<bool> removeGroup(_i5.Uid? groupUid) => (super.noSuchMethod(
        Invocation.method(
          #removeGroup,
          [groupUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> removeBroadcast(_i5.Uid? broadcastUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeBroadcast,
          [broadcastUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> removeChannel(_i5.Uid? channelUid) => (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channelUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<_i12.GetChannelRes?> getChannelInfo(_i5.Uid? channelUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelInfo,
          [channelUid],
        ),
        returnValue: _i30.Future<_i12.GetChannelRes?>.value(),
      ) as _i30.Future<_i12.GetChannelRes?>);

  @override
  _i30.Future<void> changeGroupMemberRole(_i73.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeGroupMemberRole,
          [groupMember],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> changeChannelMemberRole(_i73.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeChannelMemberRole,
          [channelMember],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveSmsBroadcastContact(
    _i78.BroadcastMember? broadcastMember,
    _i5.Uid? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSmsBroadcastContact,
          [
            broadcastMember,
            uid,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<bool> leaveGroup(_i5.Uid? groupUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveGroup,
          [groupUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> leaveChannel(_i5.Uid? channelUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveChannel,
          [channelUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> kickGroupMember(_i73.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickGroupMember,
          [groupMember],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> kickBroadcastMember(_i73.Member? broadcastMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickBroadcastMember,
          [broadcastMember],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> kickChannelMember(_i73.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickChannelMember,
          [channelMember],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> banGroupMember(_i73.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #banGroupMember,
          [groupMember],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> banChannelMember(_i73.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #banChannelMember,
          [channelMember],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> unBanGroupMember(_i73.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBanGroupMember,
          [groupMember],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> unBanChannelMember(_i73.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBanChannelMember,
          [channelMember],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i77.Muc?> joinGroup(
    _i5.Uid? groupUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinGroup,
          [
            groupUid,
            token,
          ],
        ),
        returnValue: _i30.Future<_i77.Muc?>.value(),
      ) as _i30.Future<_i77.Muc?>);

  @override
  _i30.Future<_i77.Muc?> joinChannel(
    _i5.Uid? channelUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannel,
          [
            channelUid,
            token,
          ],
        ),
        returnValue: _i30.Future<_i77.Muc?>.value(),
      ) as _i30.Future<_i77.Muc?>);

  @override
  _i30.Future<void> modifyGroup(
    _i5.Uid? mucId,
    String? name,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyGroup,
          [
            mucId,
            name,
            info,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> modifyChannel(
    _i5.Uid? mucUid,
    String? name,
    String? id,
    String? info,
    _i12.ChannelType? channelType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyChannel,
          [
            mucUid,
            name,
            id,
            info,
            channelType,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> modifyBroadcast(
    _i5.Uid? mucId,
    String? name,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyBroadcast,
          [
            mucId,
            name,
            info,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<int> addMucMember(
    _i5.Uid? mucUid,
    List<_i5.Uid>? memberUids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMucMember,
          [
            mucUid,
            memberUids,
          ],
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i11.Role getRole(_i79.MucRole? role) => (super.noSuchMethod(
        Invocation.method(
          #getRole,
          [role],
        ),
        returnValue: _FakeRole_14(
          this,
          Invocation.method(
            #getRole,
            [role],
          ),
        ),
      ) as _i11.Role);

  @override
  _i79.MucRole getLocalRole(_i11.Role? role) => (super.noSuchMethod(
        Invocation.method(
          #getLocalRole,
          [role],
        ),
        returnValue: _i79.MucRole.NONE,
      ) as _i79.MucRole);

  @override
  _i30.Future<List<_i73.Member>> getFilteredMember(
    _i5.Uid? roomUid, {
    String? query,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredMember,
          [roomUid],
          {#query: query},
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i80.MucType pbMucTypeToHiveMucType(_i12.ChannelType? channelType) =>
      (super.noSuchMethod(
        Invocation.method(
          #pbMucTypeToHiveMucType,
          [channelType],
        ),
        returnValue: _i80.MucType.Private,
      ) as _i80.MucType);

  @override
  _i12.ChannelType hiveMucTypeToPbMucType(_i80.MucType? mucType) =>
      (super.noSuchMethod(
        Invocation.method(
          #hiveMucTypeToPbMucType,
          [mucType],
        ),
        returnValue: _FakeChannelType_15(
          this,
          Invocation.method(
            #hiveMucTypeToPbMucType,
            [mucType],
          ),
        ),
      ) as _i12.ChannelType);
}

/// A class which mocks [BotRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockBotRepo extends _i1.Mock implements _i81.BotRepo {
  MockBotRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i13.BotInfo> fetchBotInfo(_i5.Uid? botUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBotInfo,
          [botUid],
        ),
        returnValue: _i30.Future<_i13.BotInfo>.value(_FakeBotInfo_16(
          this,
          Invocation.method(
            #fetchBotInfo,
            [botUid],
          ),
        )),
      ) as _i30.Future<_i13.BotInfo>);

  @override
  _i30.Future<_i82.CallbackQueryRes?> sendCallbackQuery({
    String? data = r'',
    int? id,
    required _i5.Uid? to,
    String? pinCode,
    String? packetId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCallbackQuery,
          [],
          {
            #data: data,
            #id: id,
            #to: to,
            #pinCode: pinCode,
            #packetId: packetId,
          },
        ),
        returnValue: _i30.Future<_i82.CallbackQueryRes?>.value(),
      ) as _i30.Future<_i82.CallbackQueryRes?>);

  @override
  _i30.Future<void> handleInlineMarkUpMessageCallBack(
    _i33.Message? message,
    _i83.InlineKeyboardButton? button,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleInlineMarkUpMessageCallBack,
          [
            message,
            button,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i13.BotInfo?> getBotInfo(_i5.Uid? botUid) => (super.noSuchMethod(
        Invocation.method(
          #getBotInfo,
          [botUid],
        ),
        returnValue: _i30.Future<_i13.BotInfo?>.value(),
      ) as _i30.Future<_i13.BotInfo?>);
}

/// A class which mocks [CustomNotificationDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomNotificationDao extends _i1.Mock
    implements _i84.CustomNotificationDao {
  MockCustomNotificationDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<bool> HaveCustomNotificationSound(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #HaveCustomNotificationSound,
          [uid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> setCustomNotificationSound(
    String? uid,
    String? fileName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCustomNotificationSound,
          [
            uid,
            fileName,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Stream<String> watchCustomNotificationSound(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchCustomNotificationSound,
          [uid],
        ),
        returnValue: _i30.Stream<String>.empty(),
      ) as _i30.Stream<String>);

  @override
  _i30.Future<String> getCustomNotificationSound(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomNotificationSound,
          [uid],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);
}

/// A class which mocks [MetaDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMetaDao extends _i1.Mock implements _i85.MetaDao {
  MockMetaDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<List<int>> getMetaDeletedIndex(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaDeletedIndex,
          [roomUid],
        ),
        returnValue: _i30.Future<List<int>>.value(<int>[]),
      ) as _i30.Future<List<int>>);

  @override
  _i30.Stream<List<int>> watchMetaDeletedIndex(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchMetaDeletedIndex,
          [roomUid],
        ),
        returnValue: _i30.Stream<List<int>>.empty(),
      ) as _i30.Stream<List<int>>);

  @override
  _i30.Future<void> saveMetaDeletedIndex(
    String? roomUid,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMetaDeletedIndex,
          [
            roomUid,
            index,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i86.Meta>> getMetaPage(
    String? roomUid,
    _i87.MetaType? type,
    int? page, {
    int? pageSize = 30,
    int? resultSize = 30,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaPage,
          [
            roomUid,
            type,
            page,
          ],
          {
            #pageSize: pageSize,
            #resultSize: resultSize,
            #offset: offset,
          },
        ),
        returnValue: _i30.Future<List<_i86.Meta>>.value(<_i86.Meta>[]),
      ) as _i30.Future<List<_i86.Meta>>);

  @override
  _i30.Future<void> saveMeta(_i86.Meta? meta) => (super.noSuchMethod(
        Invocation.method(
          #saveMeta,
          [meta],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<int?> getIndexOfMetaFromMessageId(
    String? roomUid,
    int? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIndexOfMetaFromMessageId,
          [
            roomUid,
            messageId,
          ],
        ),
        returnValue: _i30.Future<int?>.value(),
      ) as _i30.Future<int?>);

  @override
  _i30.Stream<int> getIndexOfMetaFromMessageIdAsStream(
    String? roomUid,
    int? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIndexOfMetaFromMessageIdAsStream,
          [
            roomUid,
            messageId,
          ],
        ),
        returnValue: _i30.Stream<int>.empty(),
      ) as _i30.Stream<int>);

  @override
  _i30.Future<bool> shouldFetchMetaDeletedIndex(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldFetchMetaDeletedIndex,
          [roomUid],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<int> MetaDeletedIndexCount(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #MetaDeletedIndexCount,
          [roomUid],
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i30.Future<void> setShouldFetchMetaDeletedIndex(
    String? roomUid, {
    bool? shouldFetchDeletedIndex = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setShouldFetchMetaDeletedIndex,
          [roomUid],
          {#shouldFetchDeletedIndex: shouldFetchDeletedIndex},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> deleteMeta(
    String? roomId,
    int? index,
    _i87.MetaType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMeta,
          [
            roomId,
            index,
            type,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<dynamic> clearAllMetas(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #clearAllMetas,
          [roomId],
        ),
        returnValue: _i30.Future<dynamic>.value(),
      ) as _i30.Future<dynamic>);
}

/// A class which mocks [MetaRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMetaRepo extends _i1.Mock implements _i88.MetaRepo {
  MockMetaRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i89.MetaCount?> fetchMetaCountFromServer(_i5.Uid? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMetaCountFromServer,
          [uid],
        ),
        returnValue: _i30.Future<_i89.MetaCount?>.value(),
      ) as _i30.Future<_i89.MetaCount?>);

  @override
  _i30.Future<void> fetchDeletedIndexFromServerIFNeeded(
    String? roomUid,
    int? deletedCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDeletedIndexFromServerIFNeeded,
          [
            roomUid,
            deletedCount,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveMetaDeletedIndex(
    List<_i90.Int64>? indexList,
    String? roomUid,
    _i87.MetaType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMetaDeletedIndex,
          [
            indexList,
            roomUid,
            type,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void saveMetaCount(_i89.MetaCount? metaCount) => super.noSuchMethod(
        Invocation.method(
          #saveMetaCount,
          [metaCount],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<List<_i86.Meta>?> getAudioAutoPlayListPageByMessageId({
    required int? messageId,
    required String? roomUid,
    _i87.MetaType? type = _i87.MetaType.AUDIO,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAudioAutoPlayListPageByMessageId,
          [],
          {
            #messageId: messageId,
            #roomUid: roomUid,
            #type: type,
          },
        ),
        returnValue: _i30.Future<List<_i86.Meta>?>.value(),
      ) as _i30.Future<List<_i86.Meta>?>);

  @override
  bool isMessageContainMeta(_i33.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #isMessageContainMeta,
          [message],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<int?> getMetaIndexFromMessageId({
    required int? messageId,
    required String? roomUid,
    required _i14.MetaGroup? metaGroup,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaIndexFromMessageId,
          [],
          {
            #messageId: messageId,
            #roomUid: roomUid,
            #metaGroup: metaGroup,
          },
        ),
        returnValue: _i30.Future<int?>.value(),
      ) as _i30.Future<int?>);

  @override
  _i30.Future<_i89.MetaCount?> getMetaCount(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaCount,
          [roomUid],
        ),
        returnValue: _i30.Future<_i89.MetaCount?>.value(),
      ) as _i30.Future<_i89.MetaCount?>);

  @override
  _i30.Stream<_i89.MetaCount?> getMetaCountFromDBAsStream(_i5.Uid? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaCountFromDBAsStream,
          [roomId],
        ),
        returnValue: _i30.Stream<_i89.MetaCount?>.empty(),
      ) as _i30.Stream<_i89.MetaCount?>);

  @override
  _i87.MetaType findFetchedMetaType(_i14.MetaGroup? metaGroup) =>
      (super.noSuchMethod(
        Invocation.method(
          #findFetchedMetaType,
          [metaGroup],
        ),
        returnValue: _i87.MetaType.MEDIA,
      ) as _i87.MetaType);

  @override
  _i14.MetaGroup convertMetaTypeToMetaGroup(_i87.MetaType? metaType) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertMetaTypeToMetaGroup,
          [metaType],
        ),
        returnValue: _FakeMetaGroup_17(
          this,
          Invocation.method(
            #convertMetaTypeToMetaGroup,
            [metaType],
          ),
        ),
      ) as _i14.MetaGroup);

  @override
  _i30.Future<_i86.Meta?> getAndCacheMetaPage(
    int? index,
    _i87.MetaType? metaType,
    String? roomUid,
    Map<int, _i86.Meta>? metaCache,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAndCacheMetaPage,
          [
            index,
            metaType,
            roomUid,
            metaCache,
          ],
        ),
        returnValue: _i30.Future<_i86.Meta?>.value(),
      ) as _i30.Future<_i86.Meta?>);

  @override
  _i30.Future<List<_i86.Meta>?> getMetaPage(
    String? roomUid,
    _i87.MetaType? type,
    int? page,
    int? index, {
    int? resultSize = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaPage,
          [
            roomUid,
            type,
            page,
            index,
          ],
          {#resultSize: resultSize},
        ),
        returnValue: _i30.Future<List<_i86.Meta>?>.value(),
      ) as _i30.Future<List<_i86.Meta>?>);

  @override
  _i30.Future<List<_i86.Meta>?> getMetasPageFromServer(
    String? roomUid,
    int? page,
    _i14.MetaGroup? metaGroup, {
    int? limit = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetasPageFromServer,
          [
            roomUid,
            page,
            metaGroup,
          ],
          {#limit: limit},
        ),
        returnValue: _i30.Future<List<_i86.Meta>?>.value(),
      ) as _i30.Future<List<_i86.Meta>?>);

  @override
  String findFetchedMetaJson(_i14.Meta? meta) => (super.noSuchMethod(
        Invocation.method(
          #findFetchedMetaJson,
          [meta],
        ),
        returnValue: '',
      ) as String);

  @override
  _i30.Future<void> updateMeta(_i33.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #updateMeta,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i87.MetaType findMetaTypeFromMessageData(_i33.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #findMetaTypeFromMessageData,
          [message],
        ),
        returnValue: _i87.MetaType.MEDIA,
      ) as _i87.MetaType);

  @override
  _i30.Future<void> addDeletedMetaIndexFromMessage(_i33.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDeletedMetaIndexFromMessage,
          [message],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [MetaCountDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMetaCountDao extends _i1.Mock implements _i91.MetaCountDao {
  MockMetaCountDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<void> save(_i89.MetaCount? metaCount) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [metaCount],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Stream<_i89.MetaCount?> get(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [roomUid],
        ),
        returnValue: _i30.Stream<_i89.MetaCount?>.empty(),
      ) as _i30.Stream<_i89.MetaCount?>);

  @override
  _i30.Future<_i89.MetaCount?> getAsFuture(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAsFuture,
          [roomUid],
        ),
        returnValue: _i30.Future<_i89.MetaCount?>.value(),
      ) as _i30.Future<_i89.MetaCount?>);

  @override
  _i30.Future<dynamic> clear(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [roomUid],
        ),
        returnValue: _i30.Future<dynamic>.value(),
      ) as _i30.Future<dynamic>);
}

/// A class which mocks [CallService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallService extends _i1.Mock implements _i18.CallService {
  MockCallService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<_i17.CallEvents> get callEvents => (super.noSuchMethod(
        Invocation.getter(#callEvents),
        returnValue: _FakeBehaviorSubject_0<_i17.CallEvents>(
          this,
          Invocation.getter(#callEvents),
        ),
      ) as _i2.BehaviorSubject<_i17.CallEvents>);

  @override
  bool get shouldRemoveData => (super.noSuchMethod(
        Invocation.getter(#shouldRemoveData),
        returnValue: false,
      ) as bool);

  @override
  set shouldRemoveData(bool? _shouldRemoveData) => super.noSuchMethod(
        Invocation.setter(
          #shouldRemoveData,
          _shouldRemoveData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<bool> get isCallStart => (super.noSuchMethod(
        Invocation.getter(#isCallStart),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#isCallStart),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  bool get isInitRenderer => (super.noSuchMethod(
        Invocation.getter(#isInitRenderer),
        returnValue: false,
      ) as bool);

  @override
  set isInitRenderer(bool? _isInitRenderer) => super.noSuchMethod(
        Invocation.setter(
          #isInitRenderer,
          _isInitRenderer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isHole => (super.noSuchMethod(
        Invocation.getter(#isHole),
        returnValue: false,
      ) as bool);

  @override
  set isHole(bool? _isHole) => super.noSuchMethod(
        Invocation.setter(
          #isHole,
          _isHole,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.UserCallState get getUserCallState => (super.noSuchMethod(
        Invocation.getter(#getUserCallState),
        returnValue: _i18.UserCallState.IN_GROUP_CALL,
      ) as _i18.UserCallState);

  @override
  _i5.Uid get getRoomUid => (super.noSuchMethod(
        Invocation.getter(#getRoomUid),
        returnValue: _FakeUid_3(
          this,
          Invocation.getter(#getRoomUid),
        ),
      ) as _i5.Uid);

  @override
  String get getCallId => (super.noSuchMethod(
        Invocation.getter(#getCallId),
        returnValue: '',
      ) as String);

  @override
  bool get isHangedUp => (super.noSuchMethod(
        Invocation.getter(#isHangedUp),
        returnValue: false,
      ) as bool);

  @override
  bool get isVideoCall => (super.noSuchMethod(
        Invocation.getter(#isVideoCall),
        returnValue: false,
      ) as bool);

  @override
  _i15.RTCVideoRenderer get getLocalRenderer => (super.noSuchMethod(
        Invocation.getter(#getLocalRenderer),
        returnValue: _FakeRTCVideoRenderer_18(
          this,
          Invocation.getter(#getLocalRenderer),
        ),
      ) as _i15.RTCVideoRenderer);

  @override
  _i15.RTCVideoRenderer get getRemoteRenderer => (super.noSuchMethod(
        Invocation.getter(#getRemoteRenderer),
        returnValue: _FakeRTCVideoRenderer_18(
          this,
          Invocation.getter(#getRemoteRenderer),
        ),
      ) as _i15.RTCVideoRenderer);

  @override
  set setUserCallState(_i18.UserCallState? cs) => super.noSuchMethod(
        Invocation.setter(
          #setUserCallState,
          cs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setRoomUid(_i5.Uid? ru) => super.noSuchMethod(
        Invocation.setter(
          #setRoomUid,
          ru,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setCallId(String? callId) => super.noSuchMethod(
        Invocation.setter(
          #setCallId,
          callId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setVideoCall(bool? isVideoCall) => super.noSuchMethod(
        Invocation.setter(
          #setVideoCall,
          isVideoCall,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setCallHangedUp(bool? isHangedUp) => super.noSuchMethod(
        Invocation.setter(
          #setCallHangedUp,
          isHangedUp,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCallStart({required bool? callStart}) => super.noSuchMethod(
        Invocation.method(
          #setCallStart,
          [],
          {#callStart: callStart},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addCallEvent(_i17.CallEvents? event) => super.noSuchMethod(
        Invocation.method(
          #addCallEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> saveCallOnDb(_i92.CurrentCallInfo? callInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCallOnDb,
          [callInfo],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveIsSelectedOrAccepted({
    bool? isAccepted = false,
    bool? isSelectNotification = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveIsSelectedOrAccepted,
          [],
          {
            #isAccepted: isAccepted,
            #isSelectNotification: isSelectNotification,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveCallOfferOnDb(
    String? offerBody,
    String? offerCandidate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCallOfferOnDb,
          [
            offerBody,
            offerCandidate,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Stream<_i92.CurrentCallInfo?> watchCurrentCall() => (super.noSuchMethod(
        Invocation.method(
          #watchCurrentCall,
          [],
        ),
        returnValue: _i30.Stream<_i92.CurrentCallInfo?>.empty(),
      ) as _i30.Stream<_i92.CurrentCallInfo?>);

  @override
  _i30.Future<void> removeCallFromDb() => (super.noSuchMethod(
        Invocation.method(
          #removeCallFromDb,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<_i92.CurrentCallInfo?> loadCurrentCall() => (super.noSuchMethod(
        Invocation.method(
          #loadCurrentCall,
          [],
        ),
        returnValue: _i30.Future<_i92.CurrentCallInfo?>.value(),
      ) as _i30.Future<_i92.CurrentCallInfo?>);

  @override
  _i30.Future<void> initRenderer() => (super.noSuchMethod(
        Invocation.method(
          #initRenderer,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i93.CallStatus findCallEventStatusProto(_i16.CallEventV2? callEventV2) =>
      (super.noSuchMethod(
        Invocation.method(
          #findCallEventStatusProto,
          [callEventV2],
        ),
        returnValue: _i93.CallStatus.CREATED,
      ) as _i93.CallStatus);

  @override
  _i94.CallType findCallEventType(_i16.CallEvent_CallType? eventCallType) =>
      (super.noSuchMethod(
        Invocation.method(
          #findCallEventType,
          [eventCallType],
        ),
        returnValue: _i94.CallType.AUDIO,
      ) as _i94.CallType);

  @override
  _i16.CallEvent_CallType findProtoCallEventType(
          _i94.CallType? eventCallType) =>
      (super.noSuchMethod(
        Invocation.method(
          #findProtoCallEventType,
          [eventCallType],
        ),
        returnValue: _FakeCallEvent_CallType_19(
          this,
          Invocation.method(
            #findProtoCallEventType,
            [eventCallType],
          ),
        ),
      ) as _i16.CallEvent_CallType);

  @override
  String writeCallEventsToJson(_i16.CallEventV2? callEventV2) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeCallEventsToJson,
          [callEventV2],
        ),
        returnValue: '',
      ) as String);

  @override
  _i17.CallEvents getCallEventsFromJson(String? callEvent) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCallEventsFromJson,
          [callEvent],
        ),
        returnValue: _FakeCallEvents_20(
          this,
          Invocation.method(
            #getCallEventsFromJson,
            [callEvent],
          ),
        ),
      ) as _i17.CallEvents);

  @override
  _i30.Future<void> clearCallData({
    bool? forceToClearData = false,
    bool? isSaveCallData = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCallData,
          [],
          {
            #forceToClearData: forceToClearData,
            #isSaveCallData: isSaveCallData,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveCallStatusData() => (super.noSuchMethod(
        Invocation.method(
          #saveCallStatusData,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> disposeCallData({bool? forceToClearData = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #disposeCallData,
          [],
          {#forceToClearData: forceToClearData},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  bool isHiddenCallBottomRow(_i95.CallStatus? callStatus) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHiddenCallBottomRow,
          [callStatus],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<bool?> checkIncomingCallIsRepeated(
    String? callId,
    String? roomUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIncomingCallIsRepeated,
          [
            callId,
            roomUid,
          ],
        ),
        returnValue: _i30.Future<bool?>.value(),
      ) as _i30.Future<bool?>);

  @override
  _i30.Future<void> saveLastCallStatus(_i96.LastCallStatus? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLastCallStatus,
          [data],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveCallDataUsage(
    int? byteSend,
    int? byteReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCallDataUsage,
          [
            byteSend,
            byteReceived,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<String> getCallDataUsage(String? callId) => (super.noSuchMethod(
        Invocation.method(
          #getCallDataUsage,
          [callId],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i18.VideoCallQualityDetails getVideoCallQualityDetails(
          _i19.VideoCallQuality? videoCallQuality) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVideoCallQualityDetails,
          [videoCallQuality],
        ),
        returnValue: _FakeVideoCallQualityDetails_21(
          this,
          Invocation.method(
            #getVideoCallQualityDetails,
            [videoCallQuality],
          ),
        ),
      ) as _i18.VideoCallQualityDetails);
}

/// A class which mocks [NotificationServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationServices extends _i1.Mock
    implements _i97.NotificationServices {
  MockNotificationServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void notifyOutgoingMessage(String? roomUid) => super.noSuchMethod(
        Invocation.method(
          #notifyOutgoingMessage,
          [roomUid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyIncomingMessage(
    _i57.Message? message,
    String? roomUid, {
    String? roomName,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyIncomingMessage,
          [
            message,
            roomUid,
          ],
          {#roomName: roomName},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> notifyIncomingCall(
    String? roomUid, {
    String? roomName,
    String? callEventJson,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyIncomingCall,
          [roomUid],
          {
            #roomName: roomName,
            #callEventJson: callEventJson,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void cancelRoomNotifications(String? roomUid) => super.noSuchMethod(
        Invocation.method(
          #cancelRoomNotifications,
          [roomUid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelNotificationById(
    int? id,
    String? roomUid,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #cancelNotificationById,
          [
            id,
            roomUid,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> editNotificationById(
    int? id,
    String? roomUid,
    _i57.Message? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editNotificationById,
          [
            id,
            roomUid,
            message,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void cancelAllNotifications() => super.noSuchMethod(
        Invocation.method(
          #cancelAllNotifications,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LastActivityDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockLastActivityDao extends _i1.Mock implements _i98.LastActivityDao {
  MockLastActivityDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i99.LastActivity?> get(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [uid],
        ),
        returnValue: _i30.Future<_i99.LastActivity?>.value(),
      ) as _i30.Future<_i99.LastActivity?>);

  @override
  _i30.Stream<_i99.LastActivity?> watch(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [uid],
        ),
        returnValue: _i30.Stream<_i99.LastActivity?>.empty(),
      ) as _i30.Stream<_i99.LastActivity?>);

  @override
  _i30.Future<void> save(_i99.LastActivity? lastActivity) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [lastActivity],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [MucDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMucDao extends _i1.Mock implements _i100.MucDao {
  MockMucDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<_i77.Muc?> get(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [uid],
        ),
        returnValue: _i30.Future<_i77.Muc?>.value(),
      ) as _i30.Future<_i77.Muc?>);

  @override
  _i30.Stream<_i77.Muc?> watch(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [uid],
        ),
        returnValue: _i30.Stream<_i77.Muc?>.empty(),
      ) as _i30.Stream<_i77.Muc?>);

  @override
  _i30.Future<void> delete(_i5.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> updateMuc({
    required _i5.Uid? uid,
    String? info,
    List<int>? pinMessagesIdList,
    int? lastCanceledPinMessageId,
    int? population,
    String? id,
    String? token,
    String? name,
    _i80.MucType? mucType,
    _i79.MucRole? currentUserRole,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMuc,
          [],
          {
            #uid: uid,
            #info: info,
            #pinMessagesIdList: pinMessagesIdList,
            #lastCanceledPinMessageId: lastCanceledPinMessageId,
            #population: population,
            #id: id,
            #token: token,
            #name: name,
            #mucType: mucType,
            #currentUserRole: currentUserRole,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<_i78.BroadcastMember?>> getAllBroadcastSmsMembers(
          _i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllBroadcastSmsMembers,
          [mucUid],
        ),
        returnValue: _i30.Future<List<_i78.BroadcastMember?>>.value(
            <_i78.BroadcastMember?>[]),
      ) as _i30.Future<List<_i78.BroadcastMember?>>);

  @override
  _i30.Future<List<_i73.Member>> getAllMembers(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMembers,
          [mucUid],
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i30.Future<List<_i73.Member>> getMembersFirstPage(
    _i5.Uid? mucUid,
    int? pageSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembersFirstPage,
          [
            mucUid,
            pageSize,
          ],
        ),
        returnValue: _i30.Future<List<_i73.Member>>.value(<_i73.Member>[]),
      ) as _i30.Future<List<_i73.Member>>);

  @override
  _i30.Future<int> getBroadCastAllMemberCount(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBroadCastAllMemberCount,
          [mucUid],
        ),
        returnValue: _i30.Future<int>.value(0),
      ) as _i30.Future<int>);

  @override
  _i30.Stream<List<_i73.Member>> watchAllMembers(_i5.Uid? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllMembers,
          [mucUid],
        ),
        returnValue: _i30.Stream<List<_i73.Member>>.empty(),
      ) as _i30.Stream<List<_i73.Member>>);

  @override
  _i30.Future<void> saveMember(_i73.Member? member) => (super.noSuchMethod(
        Invocation.method(
          #saveMember,
          [member],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveSmsBroadcastContact(
    _i78.BroadcastMember? broadcastMember,
    _i5.Uid? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSmsBroadcastContact,
          [
            broadcastMember,
            uid,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> deleteMember(_i73.Member? member) => (super.noSuchMethod(
        Invocation.method(
          #deleteMember,
          [member],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> deleteAllMembers(_i5.Uid? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #deleteAllMembers,
          [mucUid],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [Settings].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettings extends _i1.Mock implements _i101.Settings {
  MockSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.BatteryMonitor get batteryMonitor => (super.noSuchMethod(
        Invocation.getter(#batteryMonitor),
        returnValue: _FakeBatteryMonitor_22(
          this,
          Invocation.getter(#batteryMonitor),
        ),
      ) as _i19.BatteryMonitor);

  @override
  _i19.EnumPersistent<_i19.PerformanceMode> get performanceMode =>
      (super.noSuchMethod(
        Invocation.getter(#performanceMode),
        returnValue: _FakeEnumPersistent_23<_i19.PerformanceMode>(
          this,
          Invocation.getter(#performanceMode),
        ),
      ) as _i19.EnumPersistent<_i19.PerformanceMode>);

  @override
  _i19.IntPersistent get powerSaverBatteryLevel => (super.noSuchMethod(
        Invocation.getter(#powerSaverBatteryLevel),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#powerSaverBatteryLevel),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.StringPersistent get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.StringPersistent get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#refreshToken),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.StringPersistent get refreshTokenDao => (super.noSuchMethod(
        Invocation.getter(#refreshTokenDao),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#refreshTokenDao),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.IntPersistent get accessTokenGetTime => (super.noSuchMethod(
        Invocation.getter(#accessTokenGetTime),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#accessTokenGetTime),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get accessTokenExpireTime => (super.noSuchMethod(
        Invocation.getter(#accessTokenExpireTime),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#accessTokenExpireTime),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get refreshTokenGetTime => (super.noSuchMethod(
        Invocation.getter(#refreshTokenGetTime),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#refreshTokenGetTime),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get refreshTokenExpireTime => (super.noSuchMethod(
        Invocation.getter(#refreshTokenExpireTime),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#refreshTokenExpireTime),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.StringPersistent get localPassword => (super.noSuchMethod(
        Invocation.getter(#localPassword),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#localPassword),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.StringPersistent get applicationVersion => (super.noSuchMethod(
        Invocation.getter(#applicationVersion),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#applicationVersion),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.IntPersistent get dbHashCode => (super.noSuchMethod(
        Invocation.getter(#dbHashCode),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#dbHashCode),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get themeColorIndex => (super.noSuchMethod(
        Invocation.getter(#themeColorIndex),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#themeColorIndex),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get backgroundPatternIndex => (super.noSuchMethod(
        Invocation.getter(#backgroundPatternIndex),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#backgroundPatternIndex),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get lastRoomMetadataUpdateTime => (super.noSuchMethod(
        Invocation.getter(#lastRoomMetadataUpdateTime),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#lastRoomMetadataUpdateTime),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.DoublePersistent get textScale => (super.noSuchMethod(
        Invocation.getter(#textScale),
        returnValue: _FakeDoublePersistent_26(
          this,
          Invocation.getter(#textScale),
        ),
      ) as _i19.DoublePersistent);

  @override
  _i19.DoublePersistent get navigationPanelSize => (super.noSuchMethod(
        Invocation.getter(#navigationPanelSize),
        returnValue: _FakeDoublePersistent_26(
          this,
          Invocation.getter(#navigationPanelSize),
        ),
      ) as _i19.DoublePersistent);

  @override
  _i19.BooleanPersistent get sendByEnter => (super.noSuchMethod(
        Invocation.getter(#sendByEnter),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#sendByEnter),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get localNetworkMessenger => (super.noSuchMethod(
        Invocation.getter(#localNetworkMessenger),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#localNetworkMessenger),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get hasProfile => (super.noSuchMethod(
        Invocation.getter(#hasProfile),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#hasProfile),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get allRoomFetched => (super.noSuchMethod(
        Invocation.getter(#allRoomFetched),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#allRoomFetched),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get foregroundNotificationIsEnabled =>
      (super.noSuchMethod(
        Invocation.getter(#foregroundNotificationIsEnabled),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#foregroundNotificationIsEnabled),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get firebaseSettingIsSet => (super.noSuchMethod(
        Invocation.getter(#firebaseSettingIsSet),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#firebaseSettingIsSet),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.StringPersistent get firebaseToken => (super.noSuchMethod(
        Invocation.getter(#firebaseToken),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#firebaseToken),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.JsonMapPersistent<_i102.WindowFrame> get windowsFrame =>
      (super.noSuchMethod(
        Invocation.getter(#windowsFrame),
        returnValue: _FakeJsonMapPersistent_28<_i102.WindowFrame>(
          this,
          Invocation.getter(#windowsFrame),
        ),
      ) as _i19.JsonMapPersistent<_i102.WindowFrame>);

  @override
  _i19.JsonMapPersistent<_i75.Account> get account => (super.noSuchMethod(
        Invocation.getter(#account),
        returnValue: _FakeJsonMapPersistent_28<_i75.Account>(
          this,
          Invocation.getter(#account),
        ),
      ) as _i19.JsonMapPersistent<_i75.Account>);

  @override
  _i19.ProtoPersistent<_i57.MessageDeliveryAck> get lastMessageDeliveryAck =>
      (super.noSuchMethod(
        Invocation.getter(#lastMessageDeliveryAck),
        returnValue: _FakeProtoPersistent_29<_i57.MessageDeliveryAck>(
          this,
          Invocation.getter(#lastMessageDeliveryAck),
        ),
      ) as _i19.ProtoPersistent<_i57.MessageDeliveryAck>);

  @override
  _i19.BooleanPersistent get showTextsJustified => (super.noSuchMethod(
        Invocation.getter(#showTextsJustified),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#showTextsJustified),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get showColorfulMessages => (super.noSuchMethod(
        Invocation.getter(#showColorfulMessages),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#showColorfulMessages),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get showEvents => (super.noSuchMethod(
        Invocation.getter(#showEvents),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#showEvents),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get playInChatSounds => (super.noSuchMethod(
        Invocation.getter(#playInChatSounds),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#playInChatSounds),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get isAllNotificationDisabled => (super.noSuchMethod(
        Invocation.getter(#isAllNotificationDisabled),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#isAllNotificationDisabled),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get isNotificationAdvanceModeDisabled =>
      (super.noSuchMethod(
        Invocation.getter(#isNotificationAdvanceModeDisabled),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#isNotificationAdvanceModeDisabled),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get isAutoNightModeEnable => (super.noSuchMethod(
        Invocation.getter(#isAutoNightModeEnable),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#isAutoNightModeEnable),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get showDeveloperPage => (super.noSuchMethod(
        Invocation.getter(#showDeveloperPage),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#showDeveloperPage),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get themeIsDark => (super.noSuchMethod(
        Invocation.getter(#themeIsDark),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#themeIsDark),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get autoUpdateIsEnable => (super.noSuchMethod(
        Invocation.getter(#autoUpdateIsEnable),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#autoUpdateIsEnable),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get showDeveloperDetails => (super.noSuchMethod(
        Invocation.getter(#showDeveloperDetails),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#showDeveloperDetails),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.DoublePersistent get keyboardSizePortrait => (super.noSuchMethod(
        Invocation.getter(#keyboardSizePortrait),
        returnValue: _FakeDoublePersistent_26(
          this,
          Invocation.getter(#keyboardSizePortrait),
        ),
      ) as _i19.DoublePersistent);

  @override
  _i19.DoublePersistent get keyboardSizePortraitInMemory => (super.noSuchMethod(
        Invocation.getter(#keyboardSizePortraitInMemory),
        returnValue: _FakeDoublePersistent_26(
          this,
          Invocation.getter(#keyboardSizePortraitInMemory),
        ),
      ) as _i19.DoublePersistent);

  @override
  _i19.DoublePersistent get keyboardSizeLandscape => (super.noSuchMethod(
        Invocation.getter(#keyboardSizeLandscape),
        returnValue: _FakeDoublePersistent_26(
          this,
          Invocation.getter(#keyboardSizeLandscape),
        ),
      ) as _i19.DoublePersistent);

  @override
  _i19.DoublePersistent get keyboardSizeLandscapeInMemory =>
      (super.noSuchMethod(
        Invocation.getter(#keyboardSizeLandscapeInMemory),
        returnValue: _FakeDoublePersistent_26(
          this,
          Invocation.getter(#keyboardSizeLandscapeInMemory),
        ),
      ) as _i19.DoublePersistent);

  @override
  _i19.IntPersistent get iceCandidateNumbers => (super.noSuchMethod(
        Invocation.getter(#iceCandidateNumbers),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#iceCandidateNumbers),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get iceCandidateTimeLimit => (super.noSuchMethod(
        Invocation.getter(#iceCandidateTimeLimit),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#iceCandidateTimeLimit),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.IntPersistent get videoFrameRateLimitation => (super.noSuchMethod(
        Invocation.getter(#videoFrameRateLimitation),
        returnValue: _FakeIntPersistent_24(
          this,
          Invocation.getter(#videoFrameRateLimitation),
        ),
      ) as _i19.IntPersistent);

  @override
  _i19.EnumPersistent<_i67.Language> get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: _FakeEnumPersistent_23<_i67.Language>(
          this,
          Invocation.getter(#language),
        ),
      ) as _i19.EnumPersistent<_i67.Language>);

  @override
  _i19.EnumPersistent<_i31.Level> get logLevel => (super.noSuchMethod(
        Invocation.getter(#logLevel),
        returnValue: _FakeEnumPersistent_23<_i31.Level>(
          this,
          Invocation.getter(#logLevel),
        ),
      ) as _i19.EnumPersistent<_i31.Level>);

  @override
  _i19.EnumPersistent<_i19.VideoCallQuality> get videoCallQuality =>
      (super.noSuchMethod(
        Invocation.getter(#videoCallQuality),
        returnValue: _FakeEnumPersistent_23<_i19.VideoCallQuality>(
          this,
          Invocation.getter(#videoCallQuality),
        ),
      ) as _i19.EnumPersistent<_i19.VideoCallQuality>);

  @override
  _i19.BooleanPersistent get logInFileEnable => (super.noSuchMethod(
        Invocation.getter(#logInFileEnable),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#logInFileEnable),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.BooleanPersistent get useBadCertificateConnection => (super.noSuchMethod(
        Invocation.getter(#useBadCertificateConnection),
        returnValue: _FakeBooleanPersistent_27(
          this,
          Invocation.getter(#useBadCertificateConnection),
        ),
      ) as _i19.BooleanPersistent);

  @override
  _i19.StringPersistent get hostSetByUser => (super.noSuchMethod(
        Invocation.getter(#hostSetByUser),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#hostSetByUser),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.StringPersistent get servicesInfo => (super.noSuchMethod(
        Invocation.getter(#servicesInfo),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#servicesInfo),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.StringPersistent get webViewUrl => (super.noSuchMethod(
        Invocation.getter(#webViewUrl),
        returnValue: _FakeStringPersistent_25(
          this,
          Invocation.getter(#webViewUrl),
        ),
      ) as _i19.StringPersistent);

  @override
  _i19.OncePersistent get onceShowNewVersionInformation => (super.noSuchMethod(
        Invocation.getter(#onceShowNewVersionInformation),
        returnValue: _FakeOncePersistent_30(
          this,
          Invocation.getter(#onceShowNewVersionInformation),
        ),
      ) as _i19.OncePersistent);

  @override
  _i19.OncePersistent get onceShowContactDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowContactDialog),
        returnValue: _FakeOncePersistent_30(
          this,
          Invocation.getter(#onceShowContactDialog),
        ),
      ) as _i19.OncePersistent);

  @override
  _i19.OncePersistent get onceShowMicrophoneDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowMicrophoneDialog),
        returnValue: _FakeOncePersistent_30(
          this,
          Invocation.getter(#onceShowMicrophoneDialog),
        ),
      ) as _i19.OncePersistent);

  @override
  _i19.OncePersistent get onceShowCameraDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowCameraDialog),
        returnValue: _FakeOncePersistent_30(
          this,
          Invocation.getter(#onceShowCameraDialog),
        ),
      ) as _i19.OncePersistent);

  @override
  _i19.OncePersistent get onceShowMediaLibraryDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowMediaLibraryDialog),
        returnValue: _FakeOncePersistent_30(
          this,
          Invocation.getter(#onceShowMediaLibraryDialog),
        ),
      ) as _i19.OncePersistent);

  @override
  _i19.PerformanceBooleanPersistent get showLinkPreview => (super.noSuchMethod(
        Invocation.getter(#showLinkPreview),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showLinkPreview),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get repeatAnimatedEmoji =>
      (super.noSuchMethod(
        Invocation.getter(#repeatAnimatedEmoji),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#repeatAnimatedEmoji),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get repeatAnimatedStickers =>
      (super.noSuchMethod(
        Invocation.getter(#repeatAnimatedStickers),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#repeatAnimatedStickers),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showAnimatedEmoji =>
      (super.noSuchMethod(
        Invocation.getter(#showAnimatedEmoji),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showAnimatedEmoji),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showRoomBackground =>
      (super.noSuchMethod(
        Invocation.getter(#showRoomBackground),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showRoomBackground),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showBlurredComponents =>
      (super.noSuchMethod(
        Invocation.getter(#showBlurredComponents),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showBlurredComponents),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showMessageDetails =>
      (super.noSuchMethod(
        Invocation.getter(#showMessageDetails),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showMessageDetails),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showAnimations => (super.noSuchMethod(
        Invocation.getter(#showAnimations),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showAnimations),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showAnimatedAvatars =>
      (super.noSuchMethod(
        Invocation.getter(#showAnimatedAvatars),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showAnimatedAvatars),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showAvatarImages => (super.noSuchMethod(
        Invocation.getter(#showAvatarImages),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showAvatarImages),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showAvatars => (super.noSuchMethod(
        Invocation.getter(#showAvatars),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showAvatars),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get parseAndShowGoogleEmojis =>
      (super.noSuchMethod(
        Invocation.getter(#parseAndShowGoogleEmojis),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#parseAndShowGoogleEmojis),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showWsWithHighFrameRate =>
      (super.noSuchMethod(
        Invocation.getter(#showWsWithHighFrameRate),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showWsWithHighFrameRate),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get showCallBackGroundAnimation =>
      (super.noSuchMethod(
        Invocation.getter(#showCallBackGroundAnimation),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#showCallBackGroundAnimation),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get lowNetworkUsageVideoCall =>
      (super.noSuchMethod(
        Invocation.getter(#lowNetworkUsageVideoCall),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#lowNetworkUsageVideoCall),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get lowNetworkUsageVoiceCall =>
      (super.noSuchMethod(
        Invocation.getter(#lowNetworkUsageVoiceCall),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#lowNetworkUsageVoiceCall),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i19.PerformanceBooleanPersistent get highQualityCall => (super.noSuchMethod(
        Invocation.getter(#highQualityCall),
        returnValue: _FakePerformanceBooleanPersistent_31(
          this,
          Invocation.getter(#highQualityCall),
        ),
      ) as _i19.PerformanceBooleanPersistent);

  @override
  _i21.BuildContext get appContext => (super.noSuchMethod(
        Invocation.getter(#appContext),
        returnValue: _FakeBuildContext_32(
          this,
          Invocation.getter(#appContext),
        ),
      ) as _i21.BuildContext);

  @override
  _i10.Brightness get brightnessOpposite => (super.noSuchMethod(
        Invocation.getter(#brightnessOpposite),
        returnValue: _i10.Brightness.dark,
      ) as _i10.Brightness);

  @override
  _i22.ThemeScheme get themeScheme => (super.noSuchMethod(
        Invocation.getter(#themeScheme),
        returnValue: _FakeThemeScheme_33(
          this,
          Invocation.getter(#themeScheme),
        ),
      ) as _i22.ThemeScheme);

  @override
  _i21.ThemeData get introThemeData => (super.noSuchMethod(
        Invocation.getter(#introThemeData),
        returnValue: _FakeThemeData_34(
          this,
          Invocation.getter(#introThemeData),
        ),
      ) as _i21.ThemeData);

  @override
  _i21.ThemeData get themeData => (super.noSuchMethod(
        Invocation.getter(#themeData),
        returnValue: _FakeThemeData_34(
          this,
          Invocation.getter(#themeData),
        ),
      ) as _i21.ThemeData);

  @override
  _i24.ExtraThemeData get extraThemeData => (super.noSuchMethod(
        Invocation.getter(#extraThemeData),
        returnValue: _FakeExtraThemeData_35(
          this,
          Invocation.getter(#extraThemeData),
        ),
      ) as _i24.ExtraThemeData);

  @override
  _i25.CorePalette get corePalette => (super.noSuchMethod(
        Invocation.getter(#corePalette),
        returnValue: _FakeCorePalette_36(
          this,
          Invocation.getter(#corePalette),
        ),
      ) as _i25.CorePalette);

  @override
  void reInitialize() => super.noSuchMethod(
        Invocation.method(
          #reInitialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAppContext(_i21.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #updateAppContext,
          [context],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UrlHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlHandlerService extends _i1.Mock
    implements _i103.UrlHandlerService {
  MockUrlHandlerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.Future<void> onUrlTap(
    String? uri, {
    bool? openLinkImmediately = false,
    bool? sendDirectly = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onUrlTap,
          [uri],
          {
            #openLinkImmediately: openLinkImmediately,
            #sendDirectly: sendDirectly,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void handleApplicationUri(
    String? url, {
    bool? shareTextMessage = false,
    bool? sendDirectly = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleApplicationUri,
          [url],
          {
            #shareTextMessage: shareTextMessage,
            #sendDirectly: sendDirectly,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  String normalizeApplicationUrl(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #normalizeApplicationUrl,
          [uri],
        ),
        returnValue: '',
      ) as String);

  @override
  _i30.Future<void> handleIdLink(
    String? node,
    _i38.Categories? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleIdLink,
          [
            node,
            category,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> handleLogin(String? token) => (super.noSuchMethod(
        Invocation.method(
          #handleLogin,
          [token],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> handleAddContact({
    String? firstName,
    String? lastName,
    int? countryCode,
    int? nationalNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleAddContact,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #countryCode: countryCode,
            #nationalNumber: nationalNumber,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> handleSendMsgToBot(
    String? botId,
    String? text, {
    bool? sendDirectly = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSendMsgToBot,
          [
            botId,
            text,
          ],
          {#sendDirectly: sendDirectly},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> handleSendPrivateDateAcceptance(
    String? pdType,
    String? botId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSendPrivateDateAcceptance,
          [
            pdType,
            botId,
            token,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> handleJoin(
    _i5.Uid? roomUid,
    String? token, {
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleJoin,
          [
            roomUid,
            token,
          ],
          {#name: name},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void handleNormalLink(
    String? uri, {
    bool? openLinkImmediately = false,
    bool? sendDirectly = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleNormalLink,
          [uri],
          {
            #openLinkImmediately: openLinkImmediately,
            #sendDirectly: sendDirectly,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RoutingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoutingService extends _i1.Mock implements _i104.RoutingService {
  MockRoutingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.GlobalKey<_i21.NavigatorState> get mainNavigatorState =>
      (super.noSuchMethod(
        Invocation.getter(#mainNavigatorState),
        returnValue: _FakeGlobalKey_37<_i21.NavigatorState>(
          this,
          Invocation.getter(#mainNavigatorState),
        ),
      ) as _i21.GlobalKey<_i21.NavigatorState>);

  @override
  _i2.BehaviorSubject<bool> get shouldScrollToLastMessageInRoom =>
      (super.noSuchMethod(
        Invocation.getter(#shouldScrollToLastMessageInRoom),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#shouldScrollToLastMessageInRoom),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  set shouldScrollToLastMessageInRoom(
          _i2.BehaviorSubject<bool>? _shouldScrollToLastMessageInRoom) =>
      super.noSuchMethod(
        Invocation.setter(
          #shouldScrollToLastMessageInRoom,
          _shouldScrollToLastMessageInRoom,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Stream<_i104.RouteEvent> get currentRouteStream => (super.noSuchMethod(
        Invocation.getter(#currentRouteStream),
        returnValue: _i30.Stream<_i104.RouteEvent>.empty(),
      ) as _i30.Stream<_i104.RouteEvent>);

  @override
  void openSettings({bool? popAllBeforePush = false}) => super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openLanguageSettings({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openLanguageSettings,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openPowerSaverSettings({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openPowerSaverSettings,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openThemeSettings({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openThemeSettings,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openSecuritySettings({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openSecuritySettings,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openDeveloperPage({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openDeveloperPage,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openDevices({bool? popAllBeforePush = false}) => super.noSuchMethod(
        Invocation.method(
          #openDevices,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openAutoDownload({bool? popAllBeforePush = false}) => super.noSuchMethod(
        Invocation.method(
          #openAutoDownload,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openCallSetting({bool? popAllBeforePush = false}) => super.noSuchMethod(
        Invocation.method(
          #openCallSetting,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openAboutSoftwarePage({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openAboutSoftwarePage,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openContacts({bool? popAllBeforePush = false}) => super.noSuchMethod(
        Invocation.method(
          #openContacts,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openNewContact() => super.noSuchMethod(
        Invocation.method(
          #openNewContact,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openScanQrCode() => super.noSuchMethod(
        Invocation.method(
          #openScanQrCode,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openShowcase() => super.noSuchMethod(
        Invocation.method(
          #openShowcase,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openAnnouncementPage() => super.noSuchMethod(
        Invocation.method(
          #openAnnouncementPage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openConnectionSettingPage({bool? popAllBeforePush = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openConnectionSettingPage,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getCurrentRoomId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentRoomId,
          [],
        ),
        returnValue: '',
      ) as String);

  @override
  void resetCurrentRoom() => super.noSuchMethod(
        Invocation.method(
          #resetCurrentRoom,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openRoom(
    String? roomId, {
    int? initialIndex,
    List<_i33.Message>? forwardedMessages = const [],
    List<_i86.Meta>? forwardedMeta = const [],
    bool? popAllBeforePush = false,
    _i57.ShareUid? shareUid,
    bool? forceToOpenRoom = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openRoom,
          [roomId],
          {
            #initialIndex: initialIndex,
            #forwardedMessages: forwardedMessages,
            #forwardedMeta: forwardedMeta,
            #popAllBeforePush: popAllBeforePush,
            #shareUid: shareUid,
            #forceToOpenRoom: forceToOpenRoom,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openCameraBox({
    dynamic Function(String)? onAvatarSelected,
    required bool? selectAsAvatar,
    _i5.Uid? roomUid,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openCameraBox,
          [],
          {
            #onAvatarSelected: onAvatarSelected,
            #selectAsAvatar: selectAsAvatar,
            #roomUid: roomUid,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openVideoViewerPage({
    required _i28.File? file,
    required dynamic Function(String)? onSend,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openVideoViewerPage,
          [],
          {
            #file: file,
            #onSend: onSend,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openViewImagePage({
    required String? imagePath,
    String? caption = r'',
    required dynamic Function(String)? onEditEnd,
    dynamic Function(String)? onSend,
    dynamic Function(String)? onTap,
    bool? sendSingleImage = false,
    List<String>? selectedImage,
    bool? forceToShowCaptionTextField = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openViewImagePage,
          [],
          {
            #imagePath: imagePath,
            #caption: caption,
            #onEditEnd: onEditEnd,
            #onSend: onSend,
            #onTap: onTap,
            #sendSingleImage: sendSingleImage,
            #selectedImage: selectedImage,
            #forceToShowCaptionTextField: forceToShowCaptionTextField,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openCallScreen(
    _i5.Uid? roomUid, {
    bool? isIncomingCall = false,
    bool? isCallInitialized = false,
    bool? isCallAccepted = false,
    bool? isVideoCall = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openCallScreen,
          [roomUid],
          {
            #isIncomingCall: isIncomingCall,
            #isCallInitialized: isCallInitialized,
            #isCallAccepted: isCallAccepted,
            #isVideoCall: isVideoCall,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openLocation(
    _i51.Location? location,
    _i5.Uid? from,
    _i33.Message? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #openLocation,
          [
            location,
            from,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openProfile(String? roomId) => super.noSuchMethod(
        Invocation.method(
          #openProfile,
          [roomId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<dynamic>? openManageMuc(
    String? roomId, {
    _i80.MucType? mucType = _i80.MucType.Public,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #openManageMuc,
        [roomId],
        {#mucType: mucType},
      )) as _i30.Future<dynamic>?);

  @override
  void openShowAllAvatars({
    required _i5.Uid? uid,
    required bool? hasPermissionToDeleteAvatar,
    required String? heroTag,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShowAllAvatars,
          [],
          {
            #uid: uid,
            #hasPermissionToDeleteAvatar: hasPermissionToDeleteAvatar,
            #heroTag: heroTag,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openShowAllVideos({
    required _i5.Uid? roomUid,
    required int? messageId,
    int? initIndex,
    _i33.Message? message,
    String? filePath,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShowAllVideos,
          [],
          {
            #roomUid: roomUid,
            #messageId: messageId,
            #initIndex: initIndex,
            #message: message,
            #filePath: filePath,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openShowAllImage({
    required _i5.Uid? uid,
    required int? messageId,
    int? initIndex,
    int? mediaCount,
    _i33.Message? message,
    String? filePath,
    dynamic Function()? onEdit,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShowAllImage,
          [],
          {
            #uid: uid,
            #messageId: messageId,
            #initIndex: initIndex,
            #mediaCount: mediaCount,
            #message: message,
            #filePath: filePath,
            #onEdit: onEdit,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openCustomNotificationSoundSelection(String? roomId) =>
      super.noSuchMethod(
        Invocation.method(
          #openCustomNotificationSoundSelection,
          [roomId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openAccountSettings({bool? forceToSetName = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openAccountSettings,
          [],
          {#forceToSetName: forceToSetName},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openMemberSelection({
    required _i105.MucCategories? categories,
    _i5.Uid? mucUid,
    bool? useSmsBroadcastList = false,
    bool? openMucInfoDeterminationPage = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openMemberSelection,
          [],
          {
            #categories: categories,
            #mucUid: mucUid,
            #useSmsBroadcastList: useSmsBroadcastList,
            #openMucInfoDeterminationPage: openMucInfoDeterminationPage,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openBroadcastStatsPage(_i5.Uid? roomUid) => super.noSuchMethod(
        Invocation.method(
          #openBroadcastStatsPage,
          [roomUid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openSelectForwardMessage({
    List<_i33.Message>? forwardedMessages,
    List<_i86.Meta>? metas,
    _i57.ShareUid? sharedUid,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openSelectForwardMessage,
          [],
          {
            #forwardedMessages: forwardedMessages,
            #metas: metas,
            #sharedUid: sharedUid,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openAllGroupedRoomsGridPage(
          {required _i106.GroupedRooms? groupedRooms}) =>
      super.noSuchMethod(
        Invocation.method(
          #openAllGroupedRoomsGridPage,
          [],
          {#groupedRooms: groupedRooms},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openMucInfoDeterminationPage(
          {required _i105.MucCategories? categories}) =>
      super.noSuchMethod(
        Invocation.method(
          #openMucInfoDeterminationPage,
          [],
          {#categories: categories},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openShareInput({
    List<String>? paths = const [],
    String? text = r'',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShareInput,
          [],
          {
            #paths: paths,
            #text: text,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isEmpty() => (super.noSuchMethod(
        Invocation.method(
          #isEmpty,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isInRoom(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #isInRoom,
          [roomId],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isInCallRoom() => (super.noSuchMethod(
        Invocation.method(
          #isInCallRoom,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void popAll() => super.noSuchMethod(
        Invocation.method(
          #popAll,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i21.PageRouteBuilder<dynamic> customPageRoute(
    _i21.RouteSettings? setting,
    _i21.RoutePageBuilder? builder,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #customPageRoute,
          [
            setting,
            builder,
          ],
        ),
        returnValue: _FakePageRouteBuilder_38<dynamic>(
          this,
          Invocation.method(
            #customPageRoute,
            [
              setting,
              builder,
            ],
          ),
        ),
      ) as _i21.PageRouteBuilder<dynamic>);

  @override
  void registerPreMaybePopScope(
    String? name,
    _i30.Future<bool> Function()? callback,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerPreMaybePopScope,
          [
            name,
            callback,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterPreMaybePopScope(String? name) => super.noSuchMethod(
        Invocation.method(
          #unregisterPreMaybePopScope,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pop() => super.noSuchMethod(
        Invocation.method(
          #pop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<bool> preMaybePopScopeValue() => (super.noSuchMethod(
        Invocation.method(
          #preMaybePopScopeValue,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> maybePop() => (super.noSuchMethod(
        Invocation.method(
          #maybePop,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  bool canPop() => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i21.Widget outlet(_i21.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #outlet,
          [context],
        ),
        returnValue: _FakeWidget_39(
          this,
          Invocation.method(
            #outlet,
            [context],
          ),
        ),
      ) as _i21.Widget);

  @override
  _i30.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i21.Widget backButtonLeading({
    _i10.Color? color,
    _i10.VoidCallback? onBackButtonLeadingClick,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #backButtonLeading,
          [],
          {
            #color: color,
            #onBackButtonLeadingClick: onBackButtonLeadingClick,
          },
        ),
        returnValue: _FakeWidget_39(
          this,
          Invocation.method(
            #backButtonLeading,
            [],
            {
              #color: color,
              #onBackButtonLeadingClick: onBackButtonLeadingClick,
            },
          ),
        ),
      ) as _i21.Widget);
}

/// A class which mocks [CallRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallRepo extends _i1.Mock implements _i95.CallRepo {
  MockCallRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onLocalStream(dynamic Function(_i15.MediaStream)? _onLocalStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #onLocalStream,
          _onLocalStream,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onAddRemoteStream(
          dynamic Function(_i15.MediaStream)? _onAddRemoteStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #onAddRemoteStream,
          _onAddRemoteStream,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onRemoveRemoteStream(
          dynamic Function(_i15.MediaStream)? _onRemoveRemoteStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #onRemoveRemoteStream,
          _onRemoveRemoteStream,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timerDeclined(_i30.Timer? _timerDeclined) => super.noSuchMethod(
        Invocation.setter(
          #timerDeclined,
          _timerDeclined,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timerResendEvent(_i30.Timer? _timerResendEvent) => super.noSuchMethod(
        Invocation.setter(
          #timerResendEvent,
          _timerResendEvent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timerConnectionFailed(_i30.Timer? _timerConnectionFailed) =>
      super.noSuchMethod(
        Invocation.setter(
          #timerConnectionFailed,
          _timerConnectionFailed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timerDisconnected(_i30.Timer? _timerDisconnected) => super.noSuchMethod(
        Invocation.setter(
          #timerDisconnected,
          _timerDisconnected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timerEndCallDispose(_i30.Timer? _timerEndCallDispose) =>
      super.noSuchMethod(
        Invocation.setter(
          #timerEndCallDispose,
          _timerEndCallDispose,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set videoMotivation(_i30.Timer? _videoMotivation) => super.noSuchMethod(
        Invocation.setter(
          #videoMotivation,
          _videoMotivation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i107.CountTimer> get callTimer => (super.noSuchMethod(
        Invocation.getter(#callTimer),
        returnValue: _FakeBehaviorSubject_0<_i107.CountTimer>(
          this,
          Invocation.getter(#callTimer),
        ),
      ) as _i2.BehaviorSubject<_i107.CountTimer>);

  @override
  set callTimer(_i2.BehaviorSubject<_i107.CountTimer>? _callTimer) =>
      super.noSuchMethod(
        Invocation.setter(
          #callTimer,
          _callTimer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timer(_i30.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i95.CallStatus> get callingStatus => (super.noSuchMethod(
        Invocation.getter(#callingStatus),
        returnValue: _FakeBehaviorSubject_0<_i95.CallStatus>(
          this,
          Invocation.getter(#callingStatus),
        ),
      ) as _i2.BehaviorSubject<_i95.CallStatus>);

  @override
  _i2.BehaviorSubject<bool> get switching => (super.noSuchMethod(
        Invocation.getter(#switching),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#switching),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get sharing => (super.noSuchMethod(
        Invocation.getter(#sharing),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#sharing),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get incomingSharing => (super.noSuchMethod(
        Invocation.getter(#incomingSharing),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#incomingSharing),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get videoing => (super.noSuchMethod(
        Invocation.getter(#videoing),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#videoing),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get incomingVideo => (super.noSuchMethod(
        Invocation.getter(#incomingVideo),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#incomingVideo),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get incomingVideoSwitch => (super.noSuchMethod(
        Invocation.getter(#incomingVideoSwitch),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#incomingVideoSwitch),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get incomingAudioMuted => (super.noSuchMethod(
        Invocation.getter(#incomingAudioMuted),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#incomingAudioMuted),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get desktopDualVideo => (super.noSuchMethod(
        Invocation.getter(#desktopDualVideo),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#desktopDualVideo),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get isSpeaker => (super.noSuchMethod(
        Invocation.getter(#isSpeaker),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#isSpeaker),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get incomingCallOnHold => (super.noSuchMethod(
        Invocation.getter(#incomingCallOnHold),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#incomingCallOnHold),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<bool> get isConnectedSubject => (super.noSuchMethod(
        Invocation.getter(#isConnectedSubject),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#isConnectedSubject),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  _i2.BehaviorSubject<double> get speakingAmplitude => (super.noSuchMethod(
        Invocation.getter(#speakingAmplitude),
        returnValue: _FakeBehaviorSubject_0<double>(
          this,
          Invocation.getter(#speakingAmplitude),
        ),
      ) as _i2.BehaviorSubject<double>);

  @override
  _i2.BehaviorSubject<double> get incomingSpeakingAmplitude =>
      (super.noSuchMethod(
        Invocation.getter(#incomingSpeakingAmplitude),
        returnValue: _FakeBehaviorSubject_0<double>(
          this,
          Invocation.getter(#incomingSpeakingAmplitude),
        ),
      ) as _i2.BehaviorSubject<double>);

  @override
  bool get isMicMuted => (super.noSuchMethod(
        Invocation.getter(#isMicMuted),
        returnValue: false,
      ) as bool);

  @override
  bool get isCaller => (super.noSuchMethod(
        Invocation.getter(#isCaller),
        returnValue: false,
      ) as bool);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  bool get isSharing => (super.noSuchMethod(
        Invocation.getter(#isSharing),
        returnValue: false,
      ) as bool);

  @override
  bool get isVideo => (super.noSuchMethod(
        Invocation.getter(#isVideo),
        returnValue: false,
      ) as bool);

  @override
  bool get isInitRenderer => (super.noSuchMethod(
        Invocation.getter(#isInitRenderer),
        returnValue: false,
      ) as bool);

  @override
  set setRenderer(bool? isInit) => super.noSuchMethod(
        Invocation.setter(
          #setRenderer,
          isInit,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.StatsReport get selectedCandidate => (super.noSuchMethod(
        Invocation.getter(#selectedCandidate),
        returnValue: _FakeStatsReport_40(
          this,
          Invocation.getter(#selectedCandidate),
        ),
      ) as _i15.StatsReport);

  @override
  Map<int, String> get callEvents => (super.noSuchMethod(
        Invocation.getter(#callEvents),
        returnValue: <int, String>{},
      ) as Map<int, String>);

  @override
  List<_i15.MediaStreamTrack> get audioTracks => (super.noSuchMethod(
        Invocation.getter(#audioTracks),
        returnValue: <_i15.MediaStreamTrack>[],
      ) as List<_i15.MediaStreamTrack>);

  @override
  set selectAudioTrackById(String? trackId) => super.noSuchMethod(
        Invocation.setter(
          #selectAudioTrackById,
          trackId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isAccepted => (super.noSuchMethod(
        Invocation.getter(#isAccepted),
        returnValue: false,
      ) as bool);

  @override
  void listenBackgroundCall() => super.noSuchMethod(
        Invocation.method(
          #listenBackgroundCall,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool checkCallExpireTimeFailed(_i17.CallEvents? event) => (super.noSuchMethod(
        Invocation.method(
          #checkCallExpireTimeFailed,
          [event],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool checkSession(_i17.CallEvents? event) => (super.noSuchMethod(
        Invocation.method(
          #checkSession,
          [event],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<void> initCall({bool? isOffer = false}) => (super.noSuchMethod(
        Invocation.method(
          #initCall,
          [],
          {#isOffer: isOffer},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<bool> requestPhoneStatePermission() => (super.noSuchMethod(
        Invocation.method(
          #requestPhoneStatePermission,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  void startListenToPhoneCallState() => super.noSuchMethod(
        Invocation.method(
          #startListenToPhoneCallState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> setConnectionQualityAndLimitationParamsForAudio() =>
      (super.noSuchMethod(
        Invocation.method(
          #setConnectionQualityAndLimitationParamsForAudio,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> setConnectionQualityAndLimitationParamsForVideo() =>
      (super.noSuchMethod(
        Invocation.method(
          #setConnectionQualityAndLimitationParamsForVideo,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void onRTCPeerConnectionDisconnected() => super.noSuchMethod(
        Invocation.method(
          #onRTCPeerConnectionDisconnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> onRTCPeerConnectionConnected() => (super.noSuchMethod(
        Invocation.method(
          #onRTCPeerConnectionConnected,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void onRTCPeerConnectionStateFailed() => super.noSuchMethod(
        Invocation.method(
          #onRTCPeerConnectionStateFailed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> shareScreen({_i15.DesktopCapturerSource? source}) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareScreen,
          [],
          {#source: source},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  bool muteMicrophone() => (super.noSuchMethod(
        Invocation.method(
          #muteMicrophone,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool enableMicrophone() => (super.noSuchMethod(
        Invocation.method(
          #enableMicrophone,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool enableSpeakerVoice() => (super.noSuchMethod(
        Invocation.method(
          #enableSpeakerVoice,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<bool> switchCamera() => (super.noSuchMethod(
        Invocation.method(
          #switchCamera,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  bool toggleDesktopDualVideo() => (super.noSuchMethod(
        Invocation.method(
          #toggleDesktopDualVideo,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool muteCamera() => (super.noSuchMethod(
        Invocation.method(
          #muteCamera,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i30.Future<void> startCall(
    _i5.Uid? roomId, {
    bool? isVideo = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startCall,
          [roomId],
          {#isVideo: isVideo},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> acceptCall(_i5.Uid? roomId) => (super.noSuchMethod(
        Invocation.method(
          #acceptCall,
          [roomId],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> declineCall() => (super.noSuchMethod(
        Invocation.method(
          #declineCall,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> receivedBusyCall() => (super.noSuchMethod(
        Invocation.method(
          #receivedBusyCall,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> receivedDeclinedCall() => (super.noSuchMethod(
        Invocation.method(
          #receivedDeclinedCall,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> receivedEndCall() => (super.noSuchMethod(
        Invocation.method(
          #receivedEndCall,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> cancelCallNotification() => (super.noSuchMethod(
        Invocation.method(
          #cancelCallNotification,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void endCall() => super.noSuchMethod(
        Invocation.method(
          #endCall,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int calculateCallEndTime() => (super.noSuchMethod(
        Invocation.method(
          #calculateCallEndTime,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i30.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void startCallTimer() => super.noSuchMethod(
        Invocation.method(
          #startCallTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openCallScreen(
    _i21.BuildContext? context,
    _i5.Uid? room, {
    bool? isVideoCall = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openCallScreen,
          [
            context,
            room,
          ],
          {#isVideoCall: isVideoCall},
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool inComingAnswerForAnotherSessionCall(_i17.CallEvents? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #inComingAnswerForAnotherSessionCall,
          [event],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isCallIdEqualToCurrentCallId(_i17.CallEvents? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #isCallIdEqualToCurrentCallId,
          [event],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isEndingEvent(_i16.CallEventV2? callEventV2) => (super.noSuchMethod(
        Invocation.method(
          #isEndingEvent,
          [callEventV2],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [AppLifecycleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppLifecycleService extends _i1.Mock
    implements _i108.AppLifecycleService {
  MockAppLifecycleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);

  @override
  _i30.Stream<_i108.AppLifecycle> get lifecycleStream => (super.noSuchMethod(
        Invocation.getter(#lifecycleStream),
        returnValue: _i30.Stream<_i108.AppLifecycle>.empty(),
      ) as _i30.Stream<_i108.AppLifecycle>);

  @override
  void updateAppStateToPause() => super.noSuchMethod(
        Invocation.method(
          #updateAppStateToPause,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startLifeCycListener() => super.noSuchMethod(
        Invocation.method(
          #startLifeCycListener,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AnalyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsService extends _i1.Mock implements _i109.AnalyticsService {
  MockAnalyticsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_41(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i26.Logger);

  @override
  _i30.Future<void> sendLogEvent(
    String? name, {
    Map<String, Object?>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendLogEvent,
          [name],
          {#parameters: parameters},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [AudioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioService extends _i1.Mock implements _i110.AudioService {
  MockAudioService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueStream<_i110.AudioPlayerState> get playerState =>
      (super.noSuchMethod(
        Invocation.getter(#playerState),
        returnValue: _FakeValueStream_9<_i110.AudioPlayerState>(
          this,
          Invocation.getter(#playerState),
        ),
      ) as _i2.ValueStream<_i110.AudioPlayerState>);

  @override
  _i30.Stream<_i110.AudioPlayerState> get temporaryPlayerState =>
      (super.noSuchMethod(
        Invocation.getter(#temporaryPlayerState),
        returnValue: _i30.Stream<_i110.AudioPlayerState>.empty(),
      ) as _i30.Stream<_i110.AudioPlayerState>);

  @override
  _i2.ValueStream<Duration> get playerPosition => (super.noSuchMethod(
        Invocation.getter(#playerPosition),
        returnValue: _FakeValueStream_9<Duration>(
          this,
          Invocation.getter(#playerPosition),
        ),
      ) as _i2.ValueStream<Duration>);

  @override
  _i2.ValueStream<Duration> get temporaryPlayerPosition => (super.noSuchMethod(
        Invocation.getter(#temporaryPlayerPosition),
        returnValue: _FakeValueStream_9<Duration>(
          this,
          Invocation.getter(#temporaryPlayerPosition),
        ),
      ) as _i2.ValueStream<Duration>);

  @override
  _i30.Future<Duration?> get temporaryPlayerDuration => (super.noSuchMethod(
        Invocation.getter(#temporaryPlayerDuration),
        returnValue: _i30.Future<Duration?>.value(),
      ) as _i30.Future<Duration?>);

  @override
  _i2.ValueStream<_i110.AudioTrack?> get track => (super.noSuchMethod(
        Invocation.getter(#track),
        returnValue: _FakeValueStream_9<_i110.AudioTrack?>(
          this,
          Invocation.getter(#track),
        ),
      ) as _i2.ValueStream<_i110.AudioTrack?>);

  @override
  _i2.ValueStream<bool> get recorderIsRecording => (super.noSuchMethod(
        Invocation.getter(#recorderIsRecording),
        returnValue: _FakeValueStream_9<bool>(
          this,
          Invocation.getter(#recorderIsRecording),
        ),
      ) as _i2.ValueStream<bool>);

  @override
  _i2.ValueStream<bool> get recorderIsLocked => (super.noSuchMethod(
        Invocation.getter(#recorderIsLocked),
        returnValue: _FakeValueStream_9<bool>(
          this,
          Invocation.getter(#recorderIsLocked),
        ),
      ) as _i2.ValueStream<bool>);

  @override
  _i2.ValueStream<bool> get recorderIsPaused => (super.noSuchMethod(
        Invocation.getter(#recorderIsPaused),
        returnValue: _FakeValueStream_9<bool>(
          this,
          Invocation.getter(#recorderIsPaused),
        ),
      ) as _i2.ValueStream<bool>);

  @override
  String get recordingRoom => (super.noSuchMethod(
        Invocation.getter(#recordingRoom),
        returnValue: '',
      ) as String);

  @override
  _i2.ValueStream<Duration> get recordingDuration => (super.noSuchMethod(
        Invocation.getter(#recordingDuration),
        returnValue: _FakeValueStream_9<Duration>(
          this,
          Invocation.getter(#recordingDuration),
        ),
      ) as _i2.ValueStream<Duration>);

  @override
  _i2.ValueStream<double> get recordingAmplitude => (super.noSuchMethod(
        Invocation.getter(#recordingAmplitude),
        returnValue: _FakeValueStream_9<double>(
          this,
          Invocation.getter(#recordingAmplitude),
        ),
      ) as _i2.ValueStream<double>);

  @override
  void playAudioMessage(
    String? path,
    String? uuid,
    String? name,
    double? duration,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #playAudioMessage,
          [
            path,
            uuid,
            name,
            duration,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void seekTime(Duration? duration) => super.noSuchMethod(
        Invocation.method(
          #seekTime,
          [duration],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pauseAudio() => super.noSuchMethod(
        Invocation.method(
          #pauseAudio,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resumeAudio() => super.noSuchMethod(
        Invocation.method(
          #resumeAudio,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAudio() => super.noSuchMethod(
        Invocation.method(
          #stopAudio,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void changeAudioPlaybackRate(double? rate) => super.noSuchMethod(
        Invocation.method(
          #changeAudioPlaybackRate,
          [rate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double getAudioPlaybackRate() => (super.noSuchMethod(
        Invocation.method(
          #getAudioPlaybackRate,
          [],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  void playTemporaryAudio(
    _i110.AudioSourcePath? path, {
    String? prefix,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #playTemporaryAudio,
          [path],
          {#prefix: prefix},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopTemporaryAudio() => super.noSuchMethod(
        Invocation.method(
          #stopTemporaryAudio,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playSoundOut() => super.noSuchMethod(
        Invocation.method(
          #playSoundOut,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playSoundIn() => super.noSuchMethod(
        Invocation.method(
          #playSoundIn,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playIncomingCallSound() => super.noSuchMethod(
        Invocation.method(
          #playIncomingCallSound,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playBeepSound() => super.noSuchMethod(
        Invocation.method(
          #playBeepSound,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void turnDownTheCallVolume() => super.noSuchMethod(
        Invocation.method(
          #turnDownTheCallVolume,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void turnUpTheCallVolume() => super.noSuchMethod(
        Invocation.method(
          #turnUpTheCallVolume,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playBusySound() => super.noSuchMethod(
        Invocation.method(
          #playBusySound,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopCallAudioPlayer() => super.noSuchMethod(
        Invocation.method(
          #stopCallAudioPlayer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playEndCallSound() => super.noSuchMethod(
        Invocation.method(
          #playEndCallSound,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<void> startRecording({
    _i111.RecordOnCompleteCallback? onComplete,
    _i111.RecordOnCancelCallback? onCancel,
    required String? roomUid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startRecording,
          [],
          {
            #onComplete: onComplete,
            #onCancel: onCancel,
            #roomUid: roomUid,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  void toggleRecorderPause() => super.noSuchMethod(
        Invocation.method(
          #toggleRecorderPause,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<bool> endRecording() => (super.noSuchMethod(
        Invocation.method(
          #endRecording,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  void cancelRecording() => super.noSuchMethod(
        Invocation.method(
          #cancelRecording,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool recorderIsAvailable() => (super.noSuchMethod(
        Invocation.method(
          #recorderIsAvailable,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void lockRecorder() => super.noSuchMethod(
        Invocation.method(
          #lockRecorder,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<List<double>> getAudioWave(String? audioPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAudioWave,
          [audioPath],
        ),
        returnValue: _i30.Future<List<double>>.value(<double>[]),
      ) as _i30.Future<List<double>>);
}

/// A class which mocks [FileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileService extends _i1.Mock implements _i47.FileService {
  MockFileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get canceledUploadUuids => (super.noSuchMethod(
        Invocation.getter(#canceledUploadUuids),
        returnValue: <String>[],
      ) as List<String>);

  @override
  _i2.BehaviorSubject<Map<String, double>> get filesProgressBarStatus =>
      (super.noSuchMethod(
        Invocation.getter(#filesProgressBarStatus),
        returnValue: _FakeBehaviorSubject_0<Map<String, double>>(
          this,
          Invocation.getter(#filesProgressBarStatus),
        ),
      ) as _i2.BehaviorSubject<Map<String, double>>);

  @override
  set filesProgressBarStatus(
          _i2.BehaviorSubject<Map<String, double>>? _filesProgressBarStatus) =>
      super.noSuchMethod(
        Invocation.setter(
          #filesProgressBarStatus,
          _filesProgressBarStatus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Stream<Map<String, _i47.FileStatus>> watchFileStatus() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchFileStatus,
          [],
        ),
        returnValue: _i30.Stream<Map<String, _i47.FileStatus>>.empty(),
      ) as _i30.Stream<Map<String, _i47.FileStatus>>);

  @override
  _i47.FileStatus getFileStatus(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #getFileStatus,
          [uuid],
        ),
        returnValue: _i47.FileStatus.NONE,
      ) as _i47.FileStatus);

  @override
  void updateFileStatus(
    String? uuid,
    _i47.FileStatus? status,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFileStatus,
          [
            uuid,
            status,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelUploadOrDownloadFile(String? uuid) => super.noSuchMethod(
        Invocation.method(
          #cancelUploadOrDownloadFile,
          [uuid],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<String> localFilePath(
    String? fileUuid,
    String? fileType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #localFilePath,
          [
            fileUuid,
            fileType,
          ],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<String> localThumbnailFilePath(
    String? fileUuid,
    String? fileType,
    _i47.ThumbnailSize? size,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #localThumbnailFilePath,
          [
            fileUuid,
            fileType,
            size,
          ],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<_i27.File> localFile(
    String? fileUuid,
    String? fileType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #localFile,
          [
            fileUuid,
            fileType,
          ],
        ),
        returnValue: _i30.Future<_i27.File>.value(_FakeFile_42(
          this,
          Invocation.method(
            #localFile,
            [
              fileUuid,
              fileType,
            ],
          ),
        )),
      ) as _i30.Future<_i27.File>);

  @override
  _i30.Future<_i27.File> localThumbnailFile(
    String? fileUuid,
    String? fileType,
    _i47.ThumbnailSize? size,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #localThumbnailFile,
          [
            fileUuid,
            fileType,
            size,
          ],
        ),
        returnValue: _i30.Future<_i27.File>.value(_FakeFile_42(
          this,
          Invocation.method(
            #localThumbnailFile,
            [
              fileUuid,
              fileType,
              size,
            ],
          ),
        )),
      ) as _i30.Future<_i27.File>);

  @override
  _i30.Future<String?> getFile(
    String? uuid,
    String? filename, {
    String? directUrl,
    _i47.ThumbnailSize? size,
    bool? initProgressbar = true,
    bool? showAlertOnError = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [
            uuid,
            filename,
          ],
          {
            #directUrl: directUrl,
            #size: size,
            #initProgressbar: initProgressbar,
            #showAlertOnError: showAlertOnError,
          },
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<String?> saveFile(
    String? uuid,
    String? filename,
    List<int>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFile,
          [
            uuid,
            filename,
            data,
          ],
        ),
        returnValue: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);

  @override
  _i30.Future<String> saveFileInAppDirectory(
    _i27.File? file,
    String? name,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFileInAppDirectory,
          [
            file,
            name,
            type,
          ],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  void saveDownloadedFile(
    String? url,
    String? filename,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveDownloadedFile,
          [
            url,
            filename,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<_i27.File?> getApplicationIcon() => (super.noSuchMethod(
        Invocation.method(
          #getApplicationIcon,
          [],
        ),
        returnValue: _i30.Future<_i27.File?>.value(),
      ) as _i30.Future<_i27.File?>);

  @override
  _i30.Future<void> saveFileInMobileDownloadFolder(
    String? path,
    String? name,
    String? directory,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFileInMobileDownloadFolder,
          [
            path,
            name,
            directory,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveFileInDesktopDownloadFolder(
    String? name,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFileInDesktopDownloadFolder,
          [
            name,
            filePath,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveFileToSpecifiedAddress(
    String? path,
    String? address, {
    bool? convertToJpg = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFileToSpecifiedAddress,
          [
            path,
            address,
          ],
          {#convertToJpg: convertToJpg},
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<void> saveCaptureFile(
    _i48.Uint8List? res,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCaptureFile,
          [
            res,
            path,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);

  @override
  _i30.Future<List<int>> convertImageToJpg(_i27.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertImageToJpg,
          [file],
        ),
        returnValue: _i30.Future<List<int>>.value(<int>[]),
      ) as _i30.Future<List<int>>);

  @override
  _i30.Future<String> compressImageInWindows(_i27.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #compressImageInWindows,
          [file],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<String> compressImageInMacOrLinux(
    _i27.File? file, {
    int? quality = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #compressImageInMacOrLinux,
          [file],
          {#quality: quality},
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<String> compressImageInMobile(_i27.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #compressImageInMobile,
          [file],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<String> compressImageInWeb(_i28.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #compressImageInWeb,
          [file],
        ),
        returnValue: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);

  @override
  _i30.Future<_i112.Response<dynamic>?> uploadFile(
    String? filePath,
    String? filename, {
    String? uploadKey,
    bool? isVoice = false,
    void Function(int)? sendActivity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            filePath,
            filename,
          ],
          {
            #uploadKey: uploadKey,
            #isVoice: isVoice,
            #sendActivity: sendActivity,
          },
        ),
        returnValue: _i30.Future<_i112.Response<dynamic>?>.value(),
      ) as _i30.Future<_i112.Response<dynamic>?>);

  @override
  void updateFileProgressbar(
    double? r,
    String? uuid,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFileProgressbar,
          [
            r,
            uuid,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i30.Future<_i28.File> compressFile(_i28.File? file) => (super.noSuchMethod(
        Invocation.method(
          #compressFile,
          [file],
        ),
        returnValue: _i30.Future<_i28.File>.value(_FakeFile_43(
          this,
          Invocation.method(
            #compressFile,
            [file],
          ),
        )),
      ) as _i30.Future<_i28.File>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock
    implements _i113.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i30.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);

  @override
  _i30.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}
