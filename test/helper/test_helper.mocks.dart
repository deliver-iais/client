// Mocks generated by Mockito 5.3.2 from annotations
// in deliver/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i25;
import 'dart:io' as _i39;
import 'dart:ui' as _i10;

import 'package:deliver/box/account.dart' as _i67;
import 'package:deliver/box/avatar.dart' as _i55;
import 'package:deliver/box/bot_info.dart' as _i13;
import 'package:deliver/box/call_status.dart' as _i86;
import 'package:deliver/box/call_type.dart' as _i87;
import 'package:deliver/box/contact.dart' as _i64;
import 'package:deliver/box/current_call_info.dart' as _i85;
import 'package:deliver/box/dao/block_dao.dart' as _i56;
import 'package:deliver/box/dao/custom_notification_dao.dart' as _i75;
import 'package:deliver/box/dao/last_activity_dao.dart' as _i91;
import 'package:deliver/box/dao/media_dao.dart' as _i76;
import 'package:deliver/box/dao/media_meta_data_dao.dart' as _i82;
import 'package:deliver/box/dao/message_dao.dart' as _i27;
import 'package:deliver/box/dao/muc_dao.dart' as _i93;
import 'package:deliver/box/dao/mute_dao.dart' as _i59;
import 'package:deliver/box/dao/room_dao.dart' as _i30;
import 'package:deliver/box/dao/seen_dao.dart' as _i45;
import 'package:deliver/box/dao/shared_dao.dart' as _i52;
import 'package:deliver/box/dao/uid_id_name_dao.dart' as _i60;
import 'package:deliver/box/last_activity.dart' as _i92;
import 'package:deliver/box/livelocation.dart' as _i43;
import 'package:deliver/box/media.dart' as _i77;
import 'package:deliver/box/media_meta_data.dart' as _i80;
import 'package:deliver/box/media_type.dart' as _i78;
import 'package:deliver/box/member.dart' as _i65;
import 'package:deliver/box/message.dart' as _i28;
import 'package:deliver/box/muc.dart' as _i69;
import 'package:deliver/box/muc_type.dart' as _i71;
import 'package:deliver/box/pending_message.dart' as _i29;
import 'package:deliver/box/role.dart' as _i70;
import 'package:deliver/box/room.dart' as _i31;
import 'package:deliver/box/seen.dart' as _i2;
import 'package:deliver/box/uid_id_name.dart' as _i61;
import 'package:deliver/localization/i18n.dart' as _i57;
import 'package:deliver/models/call_data.dart' as _i89;
import 'package:deliver/models/call_event_type.dart' as _i84;
import 'package:deliver/models/call_timer.dart' as _i101;
import 'package:deliver/models/file.dart' as _i99;
import 'package:deliver/models/window_frame.dart' as _i95;
import 'package:deliver/repository/accountRepo.dart' as _i66;
import 'package:deliver/repository/analytics_repo.dart' as _i24;
import 'package:deliver/repository/authRepo.dart' as _i34;
import 'package:deliver/repository/avatarRepo.dart' as _i54;
import 'package:deliver/repository/botRepo.dart' as _i72;
import 'package:deliver/repository/callRepo.dart' as _i88;
import 'package:deliver/repository/contactRepo.dart' as _i62;
import 'package:deliver/repository/fileRepo.dart' as _i38;
import 'package:deliver/repository/liveLocationRepo.dart' as _i42;
import 'package:deliver/repository/mediaRepo.dart' as _i79;
import 'package:deliver/repository/mucRepo.dart' as _i68;
import 'package:deliver/repository/roomRepo.dart' as _i32;
import 'package:deliver/services/app_lifecycle_service.dart' as _i102;
import 'package:deliver/services/call_service.dart' as _i83;
import 'package:deliver/services/core_services.dart' as _i51;
import 'package:deliver/services/data_stream_services.dart' as _i47;
import 'package:deliver/services/file_service.dart' as _i41;
import 'package:deliver/services/firebase_services.dart' as _i37;
import 'package:deliver/services/muc_services.dart' as _i46;
import 'package:deliver/services/notification_services.dart' as _i90;
import 'package:deliver/services/routing_service.dart' as _i98;
import 'package:deliver/services/settings.dart' as _i94;
import 'package:deliver/services/url_handler_service.dart' as _i96;
import 'package:deliver/shared/constants.dart' as _i53;
import 'package:deliver/shared/language.dart' as _i58;
import 'package:deliver/shared/persistent_variable.dart' as _i17;
import 'package:deliver/theme/extra_theme.dart' as _i22;
import 'package:deliver/theme/theme.dart' as _i20;
import 'package:deliver_public_protocol/pub/v1/bot.pbgrpc.dart' as _i73;
import 'package:deliver_public_protocol/pub/v1/channel.pbgrpc.dart' as _i12;
import 'package:deliver_public_protocol/pub/v1/core.pbgrpc.dart' as _i50;
import 'package:deliver_public_protocol/pub/v1/group.pbgrpc.dart' as _i7;
import 'package:deliver_public_protocol/pub/v1/live_location.pbgrpc.dart'
    as _i6;
import 'package:deliver_public_protocol/pub/v1/models/activity.pb.dart' as _i33;
import 'package:deliver_public_protocol/pub/v1/models/call.pb.dart' as _i16;
import 'package:deliver_public_protocol/pub/v1/models/categories.pb.dart'
    as _i97;
import 'package:deliver_public_protocol/pub/v1/models/contact.pb.dart' as _i63;
import 'package:deliver_public_protocol/pub/v1/models/file.pb.dart' as _i40;
import 'package:deliver_public_protocol/pub/v1/models/location.pb.dart' as _i44;
import 'package:deliver_public_protocol/pub/v1/models/markup.pb.dart' as _i74;
import 'package:deliver_public_protocol/pub/v1/models/media.pb.dart' as _i81;
import 'package:deliver_public_protocol/pub/v1/models/message.pb.dart' as _i48;
import 'package:deliver_public_protocol/pub/v1/models/muc.pb.dart' as _i11;
import 'package:deliver_public_protocol/pub/v1/models/phone.pb.dart' as _i35;
import 'package:deliver_public_protocol/pub/v1/models/seen.pb.dart' as _i49;
import 'package:deliver_public_protocol/pub/v1/models/session.pb.dart' as _i36;
import 'package:deliver_public_protocol/pub/v1/models/showcase.pb.dart'
    as _i100;
import 'package:deliver_public_protocol/pub/v1/models/uid.pb.dart' as _i3;
import 'package:deliver_public_protocol/pub/v1/profile.pbgrpc.dart' as _i5;
import 'package:deliver_public_protocol/pub/v1/query.pbgrpc.dart' as _i14;
import 'package:flutter/foundation.dart' as _i21;
import 'package:flutter/material.dart' as _i19;
import 'package:flutter_webrtc/flutter_webrtc.dart' as _i15;
import 'package:grpc/grpc.dart' as _i9;
import 'package:grpc/service_api.dart' as _i8;
import 'package:logger/logger.dart' as _i26;
import 'package:material_color_utilities/material_color_utilities.dart' as _i23;
import 'package:mockito/mockito.dart' as _i1;
import 'package:protobuf/protobuf.dart' as _i18;
import 'package:rxdart/rxdart.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSeen_0 extends _i1.SmartFake implements _i2.Seen {
  _FakeSeen_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUid_1 extends _i1.SmartFake implements _i3.Uid {
  _FakeUid_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBehaviorSubject_2<T> extends _i1.SmartFake
    implements _i4.BehaviorSubject<T> {
  _FakeBehaviorSubject_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessTokenRes_3 extends _i1.SmartFake
    implements _i5.AccessTokenRes {
  _FakeAccessTokenRes_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateLiveLocationRes_4 extends _i1.SmartFake
    implements _i6.CreateLiveLocationRes {
  _FakeCreateLiveLocationRes_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMembersRes_5 extends _i1.SmartFake implements _i7.GetMembersRes {
  _FakeGetMembersRes_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseFuture_6<R> extends _i1.SmartFake
    implements _i8.ResponseFuture<R> {
  _FakeResponseFuture_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientCall_7<Q, R> extends _i1.SmartFake
    implements _i9.ClientCall<Q, R> {
  _FakeClientCall_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseStream_8<R> extends _i1.SmartFake
    implements _i8.ResponseStream<R> {
  _FakeResponseStream_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_9 extends _i1.SmartFake implements _i10.Locale {
  _FakeLocale_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRole_10 extends _i1.SmartFake implements _i11.Role {
  _FakeRole_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelType_11 extends _i1.SmartFake implements _i12.ChannelType {
  _FakeChannelType_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBotInfo_12 extends _i1.SmartFake implements _i13.BotInfo {
  _FakeBotInfo_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFetchMediasReq_MediaType_13 extends _i1.SmartFake
    implements _i14.FetchMediasReq_MediaType {
  _FakeFetchMediasReq_MediaType_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRTCVideoRenderer_14 extends _i1.SmartFake
    implements _i15.RTCVideoRenderer {
  _FakeRTCVideoRenderer_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallEvent_CallType_15 extends _i1.SmartFake
    implements _i16.CallEvent_CallType {
  _FakeCallEvent_CallType_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallEvent_CallStatus_16 extends _i1.SmartFake
    implements _i16.CallEvent_CallStatus {
  _FakeCallEvent_CallStatus_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBatteryMonitor_17 extends _i1.SmartFake
    implements _i17.BatteryMonitor {
  _FakeBatteryMonitor_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEnumPersistent_18<T extends Enum> extends _i1.SmartFake
    implements _i17.EnumPersistent<T> {
  _FakeEnumPersistent_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIntPersistent_19 extends _i1.SmartFake
    implements _i17.IntPersistent {
  _FakeIntPersistent_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStringPersistent_20 extends _i1.SmartFake
    implements _i17.StringPersistent {
  _FakeStringPersistent_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDoublePersistent_21 extends _i1.SmartFake
    implements _i17.DoublePersistent {
  _FakeDoublePersistent_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBooleanPersistent_22 extends _i1.SmartFake
    implements _i17.BooleanPersistent {
  _FakeBooleanPersistent_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJsonMapPersistent_23<T> extends _i1.SmartFake
    implements _i17.JsonMapPersistent<T> {
  _FakeJsonMapPersistent_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtoPersistent_24<T extends _i18.GeneratedMessage>
    extends _i1.SmartFake implements _i17.ProtoPersistent<T> {
  _FakeProtoPersistent_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOncePersistent_25 extends _i1.SmartFake
    implements _i17.OncePersistent {
  _FakeOncePersistent_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePerformanceBooleanPersistent_26 extends _i1.SmartFake
    implements _i17.PerformanceBooleanPersistent {
  _FakePerformanceBooleanPersistent_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBuildContext_27 extends _i1.SmartFake implements _i19.BuildContext {
  _FakeBuildContext_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeScheme_28 extends _i1.SmartFake implements _i20.ThemeScheme {
  _FakeThemeScheme_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_29 extends _i1.SmartFake implements _i19.ThemeData {
  _FakeThemeData_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i21.DiagnosticLevel? minLevel = _i21.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeExtraThemeData_30 extends _i1.SmartFake
    implements _i22.ExtraThemeData {
  _FakeExtraThemeData_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCorePalette_31 extends _i1.SmartFake implements _i23.CorePalette {
  _FakeCorePalette_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_32<T extends _i19.State<_i19.StatefulWidget>>
    extends _i1.SmartFake implements _i19.GlobalKey<T> {
  _FakeGlobalKey_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePageRouteBuilder_33<T> extends _i1.SmartFake
    implements _i19.PageRouteBuilder<T> {
  _FakePageRouteBuilder_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_34 extends _i1.SmartFake implements _i19.Widget {
  _FakeWidget_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i21.DiagnosticLevel? minLevel = _i21.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStatsReport_35 extends _i1.SmartFake implements _i15.StatsReport {
  _FakeStatsReport_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AnalyticsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsRepo extends _i1.Mock implements _i24.AnalyticsRepo {
  MockAnalyticsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, int> get requestsFrequency => (super.noSuchMethod(
        Invocation.getter(#requestsFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);
  @override
  Map<String, int> get pageViewFrequency => (super.noSuchMethod(
        Invocation.getter(#pageViewFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);
  @override
  Map<String, int> get daoFrequency => (super.noSuchMethod(
        Invocation.getter(#daoFrequency),
        returnValue: <String, int>{},
      ) as Map<String, int>);
  @override
  _i25.Stream<void> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _i25.Stream<void>.empty(),
      ) as _i25.Stream<void>);
  @override
  _i25.Stream<void> get daoEvents => (super.noSuchMethod(
        Invocation.getter(#daoEvents),
        returnValue: _i25.Stream<void>.empty(),
      ) as _i25.Stream<void>);
  @override
  void incRF(String? key) => super.noSuchMethod(
        Invocation.method(
          #incRF,
          [key],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void incPVF(String? key) => super.noSuchMethod(
        Invocation.method(
          #incPVF,
          [key],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void incDao(String? key) => super.noSuchMethod(
        Invocation.method(
          #incDao,
          [key],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Logger].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogger extends _i1.Mock implements _i26.Logger {
  MockLogger() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void v(
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #v,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void d(
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #d,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void i(
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #i,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void w(
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #w,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void e(
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #e,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void wtf(
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #wtf,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void log(
    _i26.Level? level,
    dynamic message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            level,
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MessageDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageDao extends _i1.Mock implements _i27.MessageDao {
  MockMessageDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<void> saveMessage(_i28.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #saveMessage,
          [message],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> deleteMessage(_i28.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [message],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i28.Message?> getMessage(
    String? roomUid,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessage,
          [
            roomUid,
            id,
          ],
        ),
        returnValue: _i25.Future<_i28.Message?>.value(),
      ) as _i25.Future<_i28.Message?>);
  @override
  _i25.Future<List<_i28.Message>> getMessagePage(
    String? roomUid,
    int? page, {
    int? pageSize = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessagePage,
          [
            roomUid,
            page,
          ],
          {#pageSize: pageSize},
        ),
        returnValue: _i25.Future<List<_i28.Message>>.value(<_i28.Message>[]),
      ) as _i25.Future<List<_i28.Message>>);
  @override
  _i25.Future<List<_i29.PendingMessage>> getPendingMessages(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingMessages,
          [roomUid],
        ),
        returnValue: _i25.Future<List<_i29.PendingMessage>>.value(
            <_i29.PendingMessage>[]),
      ) as _i25.Future<List<_i29.PendingMessage>>);
  @override
  _i25.Stream<List<_i29.PendingMessage>> watchPendingMessages(
          String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchPendingMessages,
          [roomUid],
        ),
        returnValue: _i25.Stream<List<_i29.PendingMessage>>.empty(),
      ) as _i25.Stream<List<_i29.PendingMessage>>);
  @override
  _i25.Future<_i29.PendingMessage?> getPendingMessage(String? packetId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingMessage,
          [packetId],
        ),
        returnValue: _i25.Future<_i29.PendingMessage?>.value(),
      ) as _i25.Future<_i29.PendingMessage?>);
  @override
  _i25.Stream<_i29.PendingMessage?> watchPendingMessage(String? packetId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchPendingMessage,
          [packetId],
        ),
        returnValue: _i25.Stream<_i29.PendingMessage?>.empty(),
      ) as _i25.Stream<_i29.PendingMessage?>);
  @override
  _i25.Future<List<_i29.PendingMessage>> getAllPendingMessages() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPendingMessages,
          [],
        ),
        returnValue: _i25.Future<List<_i29.PendingMessage>>.value(
            <_i29.PendingMessage>[]),
      ) as _i25.Future<List<_i29.PendingMessage>>);
  @override
  _i25.Future<void> deletePendingMessage(String? packetId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePendingMessage,
          [packetId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> savePendingMessage(_i29.PendingMessage? pm) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePendingMessage,
          [pm],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i29.PendingMessage?> getPendingEditedMessage(
    String? roomUid,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingEditedMessage,
          [
            roomUid,
            index,
          ],
        ),
        returnValue: _i25.Future<_i29.PendingMessage?>.value(),
      ) as _i25.Future<_i29.PendingMessage?>);
  @override
  _i25.Future<List<_i29.PendingMessage>> getAllPendingEditedMessages() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPendingEditedMessages,
          [],
        ),
        returnValue: _i25.Future<List<_i29.PendingMessage>>.value(
            <_i29.PendingMessage>[]),
      ) as _i25.Future<List<_i29.PendingMessage>>);
  @override
  _i25.Future<void> deletePendingEditedMessage(
    String? roomUid,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePendingEditedMessage,
          [
            roomUid,
            index,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> savePendingEditedMessage(_i29.PendingMessage? pm) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePendingEditedMessage,
          [pm],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Stream<List<_i29.PendingMessage>> watchPendingEditedMessages(
          String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchPendingEditedMessages,
          [roomUid],
        ),
        returnValue: _i25.Stream<List<_i29.PendingMessage>>.empty(),
      ) as _i25.Stream<List<_i29.PendingMessage>>);
  @override
  _i25.Stream<_i29.PendingMessage?> watchPendingEditedMessage(
    String? roomUid,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchPendingEditedMessage,
          [
            roomUid,
            index,
          ],
        ),
        returnValue: _i25.Stream<_i29.PendingMessage?>.empty(),
      ) as _i25.Stream<_i29.PendingMessage?>);
}

/// A class which mocks [RoomDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoomDao extends _i1.Mock implements _i30.RoomDao {
  MockRoomDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<void> updateRoom({
    required String? uid,
    _i28.Message? lastMessage,
    int? lastMessageId,
    bool? deleted,
    String? draft,
    int? lastUpdateTime,
    int? firstMessageId,
    bool? pinned,
    int? pinId,
    int? hiddenMessageCount,
    bool? synced,
    int? lastCurrentUserSentMessageId,
    bool? seenSynced,
    String? replyKeyboardMarkup,
    bool? forceToUpdateReplyKeyboardMarkup = false,
    List<int>? mentionsId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRoom,
          [],
          {
            #uid: uid,
            #lastMessage: lastMessage,
            #lastMessageId: lastMessageId,
            #deleted: deleted,
            #draft: draft,
            #lastUpdateTime: lastUpdateTime,
            #firstMessageId: firstMessageId,
            #pinned: pinned,
            #pinId: pinId,
            #hiddenMessageCount: hiddenMessageCount,
            #synced: synced,
            #lastCurrentUserSentMessageId: lastCurrentUserSentMessageId,
            #seenSynced: seenSynced,
            #replyKeyboardMarkup: replyKeyboardMarkup,
            #forceToUpdateReplyKeyboardMarkup: forceToUpdateReplyKeyboardMarkup,
            #mentionsId: mentionsId,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i31.Room>> getAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #getAllRooms,
          [],
        ),
        returnValue: _i25.Future<List<_i31.Room>>.value(<_i31.Room>[]),
      ) as _i25.Future<List<_i31.Room>>);
  @override
  _i25.Stream<List<_i31.Room>> watchAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #watchAllRooms,
          [],
        ),
        returnValue: _i25.Stream<List<_i31.Room>>.empty(),
      ) as _i25.Stream<List<_i31.Room>>);
  @override
  _i25.Future<_i31.Room?> getRoom(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getRoom,
          [roomUid],
        ),
        returnValue: _i25.Future<_i31.Room?>.value(),
      ) as _i25.Future<_i31.Room?>);
  @override
  _i25.Stream<_i31.Room> watchRoom(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #watchRoom,
          [roomUid],
        ),
        returnValue: _i25.Stream<_i31.Room>.empty(),
      ) as _i25.Stream<_i31.Room>);
  @override
  _i25.Future<List<_i31.Room>> getAllGroups() => (super.noSuchMethod(
        Invocation.method(
          #getAllGroups,
          [],
        ),
        returnValue: _i25.Future<List<_i31.Room>>.value(<_i31.Room>[]),
      ) as _i25.Future<List<_i31.Room>>);
}

/// A class which mocks [RoomRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoomRepo extends _i1.Mock implements _i32.RoomRepo {
  MockRoomRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, _i4.BehaviorSubject<_i33.Activity>> get activityObject =>
      (super.noSuchMethod(
        Invocation.getter(#activityObject),
        returnValue: <String, _i4.BehaviorSubject<_i33.Activity>>{},
      ) as Map<String, _i4.BehaviorSubject<_i33.Activity>>);
  @override
  _i25.Future<String> getSlangName(
    _i3.Uid? uid, {
    String? unknownName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSlangName,
          [uid],
          {#unknownName: unknownName},
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  bool fastForwardIsVerified(_i3.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #fastForwardIsVerified,
          [uid],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<bool> isVerified(_i3.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #isVerified,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  String? fastForwardName(_i3.Uid? uid) =>
      (super.noSuchMethod(Invocation.method(
        #fastForwardName,
        [uid],
      )) as String?);
  @override
  _i25.Future<String> getName(
    _i3.Uid? uid, {
    String? unknownName,
    bool? forceToReturnSavedMessage = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getName,
          [uid],
          {
            #unknownName: unknownName,
            #forceToReturnSavedMessage: forceToReturnSavedMessage,
          },
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Stream<String?> watchId(_i3.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchId,
          [uid],
        ),
        returnValue: _i25.Stream<String?>.empty(),
      ) as _i25.Stream<String?>);
  @override
  _i25.Future<bool> deleteRoom(_i3.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoom,
          [roomUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<String?> getIdByUid(_i3.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #getIdByUid,
          [uid],
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Future<void> updateUserInfo(
    _i3.Uid? uid, {
    bool? foreToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserInfo,
          [uid],
          {#foreToUpdate: foreToUpdate},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void updateActivity(_i33.Activity? activity) => super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [activity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initActivity(String? roomId) => super.noSuchMethod(
        Invocation.method(
          #initActivity,
          [roomId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateRoomName(
    _i3.Uid? uid,
    String? name,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateRoomName,
          [
            uid,
            name,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<bool> isRoomHaveACustomNotification(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #isRoomHaveACustomNotification,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> setRoomCustomNotification(
    String? uid,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRoomCustomNotification,
          [
            uid,
            path,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String> getRoomCustomNotification(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoomCustomNotification,
          [uid],
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Stream<String> watchRoomCustomNotification(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchRoomCustomNotification,
          [uid],
        ),
        returnValue: _i25.Stream<String>.empty(),
      ) as _i25.Stream<String>);
  @override
  _i25.Future<bool> isRoomMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isRoomMuted,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Stream<bool> watchIsRoomMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsRoomMuted,
          [uid],
        ),
        returnValue: _i25.Stream<bool>.empty(),
      ) as _i25.Stream<bool>);
  @override
  void mute(String? uid) => super.noSuchMethod(
        Invocation.method(
          #mute,
          [uid],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void unMute(String? uid) => super.noSuchMethod(
        Invocation.method(
          #unMute,
          [uid],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<bool> isRoomBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isRoomBlocked,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Stream<bool?> watchIsRoomBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsRoomBlocked,
          [uid],
        ),
        returnValue: _i25.Stream<bool?>.empty(),
      ) as _i25.Stream<bool?>);
  @override
  _i25.Stream<List<_i31.Room>> watchAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #watchAllRooms,
          [],
        ),
        returnValue: _i25.Stream<List<_i31.Room>>.empty(),
      ) as _i25.Stream<List<_i31.Room>>);
  @override
  _i25.Stream<_i31.Room> watchRoom(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #watchRoom,
          [roomUid],
        ),
        returnValue: _i25.Stream<_i31.Room>.empty(),
      ) as _i25.Stream<_i31.Room>);
  @override
  _i25.Future<_i31.Room?> getRoom(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getRoom,
          [roomUid],
        ),
        returnValue: _i25.Future<_i31.Room?>.value(),
      ) as _i25.Future<_i31.Room?>);
  @override
  _i25.Future<int> getRoomLastMessageId(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getRoomLastMessageId,
          [roomUid],
        ),
        returnValue: _i25.Future<int>.value(0),
      ) as _i25.Future<int>);
  @override
  _i25.Future<void> updateMentionIds(
    String? roomUid,
    List<int>? mentionsId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMentionIds,
          [
            roomUid,
            mentionsId,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> processMentionIds(
    String? roomUid,
    List<int>? mentionsId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #processMentionIds,
          [
            roomUid,
            mentionsId,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> createRoomIfNotExist(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRoomIfNotExist,
          [roomUid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Stream<_i2.Seen> watchMySeen(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #watchMySeen,
          [roomUid],
        ),
        returnValue: _i25.Stream<_i2.Seen>.empty(),
      ) as _i25.Stream<_i2.Seen>);
  @override
  _i25.Future<_i2.Seen> getMySeen(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getMySeen,
          [roomUid],
        ),
        returnValue: _i25.Future<_i2.Seen>.value(_FakeSeen_0(
          this,
          Invocation.method(
            #getMySeen,
            [roomUid],
          ),
        )),
      ) as _i25.Future<_i2.Seen>);
  @override
  _i25.Future<_i2.Seen?> getOthersSeen(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #getOthersSeen,
          [roomUid],
        ),
        returnValue: _i25.Future<_i2.Seen?>.value(),
      ) as _i25.Future<_i2.Seen?>);
  @override
  _i25.Future<void> updateMySeen({
    required String? uid,
    int? messageId,
    int? hiddenMessageCount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMySeen,
          [],
          {
            #uid: uid,
            #messageId: messageId,
            #hiddenMessageCount: hiddenMessageCount,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> updateReplyKeyboard(
    String? replyKeyboardMarkup,
    String? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReplyKeyboard,
          [
            replyKeyboardMarkup,
            uid,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> block(
    String? uid, {
    bool? block,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #block,
          [uid],
          {#block: block},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> fetchBlockedRoom() => (super.noSuchMethod(
        Invocation.method(
          #fetchBlockedRoom,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i3.Uid>> getAllRooms() => (super.noSuchMethod(
        Invocation.method(
          #getAllRooms,
          [],
        ),
        returnValue: _i25.Future<List<_i3.Uid>>.value(<_i3.Uid>[]),
      ) as _i25.Future<List<_i3.Uid>>);
  @override
  _i25.Future<List<_i3.Uid>> searchInRooms(String? text) => (super.noSuchMethod(
        Invocation.method(
          #searchInRooms,
          [text],
        ),
        returnValue: _i25.Future<List<_i3.Uid>>.value(<_i3.Uid>[]),
      ) as _i25.Future<List<_i3.Uid>>);
  @override
  _i25.Future<String> getUidById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUidById,
          [id],
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Future<_i3.Uid> fetchUidById(String? username) => (super.noSuchMethod(
        Invocation.method(
          #fetchUidById,
          [username],
        ),
        returnValue: _i25.Future<_i3.Uid>.value(_FakeUid_1(
          this,
          Invocation.method(
            #fetchUidById,
            [username],
          ),
        )),
      ) as _i25.Future<_i3.Uid>);
  @override
  _i25.Future<void> reportRoom(_i3.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #reportRoom,
          [roomUid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i31.Room>> getAllGroups() => (super.noSuchMethod(
        Invocation.method(
          #getAllGroups,
          [],
        ),
        returnValue: _i25.Future<List<_i31.Room>>.value(<_i31.Room>[]),
      ) as _i25.Future<List<_i31.Room>>);
  @override
  void updateRoomDraft(
    String? roomUid,
    String? draft,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateRoomDraft,
          [
            roomUid,
            draft,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<bool> isDeletedRoom(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #isDeletedRoom,
          [roomUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  String getCustomNotificationShowingName(String? customNotificationSound) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomNotificationShowingName,
          [customNotificationSound],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [AuthRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepo extends _i1.Mock implements _i34.AuthRepo {
  MockAuthRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.BehaviorSubject<bool> get outOfDateObject => (super.noSuchMethod(
        Invocation.getter(#outOfDateObject),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#outOfDateObject),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  _i4.BehaviorSubject<_i5.NewerVersionInformation?> get newVersionInformation =>
      (super.noSuchMethod(
        Invocation.getter(#newVersionInformation),
        returnValue: _FakeBehaviorSubject_2<_i5.NewerVersionInformation?>(
          this,
          Invocation.getter(#newVersionInformation),
        ),
      ) as _i4.BehaviorSubject<_i5.NewerVersionInformation?>);
  @override
  set newVersionInformation(
          _i4.BehaviorSubject<_i5.NewerVersionInformation?>?
              _newVersionInformation) =>
      super.noSuchMethod(
        Invocation.setter(
          #newVersionInformation,
          _newVersionInformation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Uid get currentUserUid => (super.noSuchMethod(
        Invocation.getter(#currentUserUid),
        returnValue: _FakeUid_1(
          this,
          Invocation.getter(#currentUserUid),
        ),
      ) as _i3.Uid);
  @override
  set currentUserUid(_i3.Uid? _currentUserUid) => super.noSuchMethod(
        Invocation.setter(
          #currentUserUid,
          _currentUserUid,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: '',
      ) as String);
  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: '',
      ) as String);
  @override
  _i25.Stream<bool> get isLocalLockEnabledStream => (super.noSuchMethod(
        Invocation.getter(#isLocalLockEnabledStream),
        returnValue: _i25.Stream<bool>.empty(),
      ) as _i25.Stream<bool>);
  @override
  _i25.Future<void> init({bool? retry = false}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#retry: retry},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> getVerificationCode(_i35.PhoneNumber? p) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVerificationCode,
          [p],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i5.AccessTokenRes> sendVerificationCode(
    String? code, {
    String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCode,
          [code],
          {#password: password},
        ),
        returnValue:
            _i25.Future<_i5.AccessTokenRes>.value(_FakeAccessTokenRes_3(
          this,
          Invocation.method(
            #sendVerificationCode,
            [code],
            {#password: password},
          ),
        )),
      ) as _i25.Future<_i5.AccessTokenRes>);
  @override
  _i25.Future<_i5.AccessTokenRes> checkQrCodeToken(
    String? token, {
    String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkQrCodeToken,
          [token],
          {#password: password},
        ),
        returnValue:
            _i25.Future<_i5.AccessTokenRes>.value(_FakeAccessTokenRes_3(
          this,
          Invocation.method(
            #checkQrCodeToken,
            [token],
            {#password: password},
          ),
        )),
      ) as _i25.Future<_i5.AccessTokenRes>);
  @override
  _i25.Future<String> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  bool isLocalLockEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isLocalLockEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool localPasswordIsCorrect(String? pass) => (super.noSuchMethod(
        Invocation.method(
          #localPasswordIsCorrect,
          [pass],
        ),
        returnValue: false,
      ) as bool);
  @override
  void setLocalPassword(String? pass) => super.noSuchMethod(
        Invocation.method(
          #setLocalPassword,
          [pass],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isRefreshTokenEmpty() => (super.noSuchMethod(
        Invocation.method(
          #isRefreshTokenEmpty,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isRefreshTokenExpired() => (super.noSuchMethod(
        Invocation.method(
          #isRefreshTokenExpired,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isCurrentUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentUser,
          [uid],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isCurrentUserUid(_i3.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentUserUid,
          [uid],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isCurrentUserSender(_i28.Message? msg) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentUserSender,
          [msg],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isCurrentSession(_i36.Session? session) => (super.noSuchMethod(
        Invocation.method(
          #isCurrentSession,
          [session],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> sendForgetPasswordEmail(_i35.PhoneNumber? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendForgetPasswordEmail,
          [phoneNumber],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [FireBaseServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockFireBaseServices extends _i1.Mock implements _i37.FireBaseServices {
  MockFireBaseServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<void> sendFireBaseToken() => (super.noSuchMethod(
        Invocation.method(
          #sendFireBaseToken,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> updateFirebaseToken() => (super.noSuchMethod(
        Invocation.method(
          #updateFirebaseToken,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void deleteToken() => super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> sendGlitchReportForFirebaseNotification(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendGlitchReportForFirebaseNotification,
          [roomUid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [FileRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileRepo extends _i1.Mock implements _i38.FileRepo {
  MockFileRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get localUploadedFilePath => (super.noSuchMethod(
        Invocation.getter(#localUploadedFilePath),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  set localUploadedFilePath(Map<String, String>? _localUploadedFilePath) =>
      super.noSuchMethod(
        Invocation.setter(
          #localUploadedFilePath,
          _localUploadedFilePath,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> saveInFileInfo(
    _i39.File? file,
    String? uploadKey,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveInFileInfo,
          [
            file,
            uploadKey,
            name,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i40.File?> uploadClonedFile(
    String? uploadKey,
    String? name, {
    required List<String>? packetIds,
    void Function(int)? sendActivity,
    bool? isVoice = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadClonedFile,
          [
            uploadKey,
            name,
          ],
          {
            #packetIds: packetIds,
            #sendActivity: sendActivity,
            #isVoice: isVoice,
          },
        ),
        returnValue: _i25.Future<_i40.File?>.value(),
      ) as _i25.Future<_i40.File?>);
  @override
  _i25.Future<bool> isExist(
    String? uuid,
    String? filename, {
    _i41.ThumbnailSize? thumbnailSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isExist,
          [
            uuid,
            filename,
          ],
          {#thumbnailSize: thumbnailSize},
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  void saveDownloadedFile(
    String? url,
    String? filename,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveDownloadedFile,
          [
            url,
            filename,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool fileExitInCache(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #fileExitInCache,
          [uuid],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<String?> getFileIfExist(
    String? uuid,
    String? filename, {
    _i41.ThumbnailSize? thumbnailSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileIfExist,
          [
            uuid,
            filename,
          ],
          {#thumbnailSize: thumbnailSize},
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Future<String?> getFile(
    String? uuid,
    String? filename, {
    _i41.ThumbnailSize? thumbnailSize,
    bool? intiProgressbar = true,
    bool? showAlertOnError = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [
            uuid,
            filename,
          ],
          {
            #thumbnailSize: thumbnailSize,
            #intiProgressbar: intiProgressbar,
            #showAlertOnError: showAlertOnError,
          },
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  void saveDownloadedFileInWeb(
    String? uuid,
    String? name,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveDownloadedFileInWeb,
          [
            uuid,
            name,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void saveFileInDownloadDir(
    String? uuid,
    String? name,
    String? dir,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #saveFileInDownloadDir,
          [
            uuid,
            name,
            dir,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void cancelUploadFile(String? uuid) => super.noSuchMethod(
        Invocation.method(
          #cancelUploadFile,
          [uuid],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void saveFileToSpecifiedAddress(
    String? uuid,
    String? name,
    String? address, {
    bool? convertToJpg = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #saveFileToSpecifiedAddress,
          [
            uuid,
            name,
            address,
          ],
          {#convertToJpg: convertToJpg},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void copyFileToPasteboard(String? path) => super.noSuchMethod(
        Invocation.method(
          #copyFileToPasteboard,
          [path],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LiveLocationRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockLiveLocationRepo extends _i1.Mock implements _i42.LiveLocationRepo {
  MockLiveLocationRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveLiveLocation(_i43.LiveLocation? liveLocation) => super.noSuchMethod(
        Invocation.method(
          #saveLiveLocation,
          [liveLocation],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<_i43.LiveLocation?> getLiveLocation(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLiveLocation,
          [uuid],
        ),
        returnValue: _i25.Future<_i43.LiveLocation?>.value(),
      ) as _i25.Future<_i43.LiveLocation?>);
  @override
  _i25.Stream<_i43.LiveLocation?> watchLiveLocation(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchLiveLocation,
          [uuid],
        ),
        returnValue: _i25.Stream<_i43.LiveLocation?>.empty(),
      ) as _i25.Stream<_i43.LiveLocation?>);
  @override
  void updateLiveLocation(_i44.LiveLocation? liveLocation) =>
      super.noSuchMethod(
        Invocation.method(
          #updateLiveLocation,
          [liveLocation],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<_i6.CreateLiveLocationRes> createLiveLocation(
    _i3.Uid? roomUid,
    int? duration,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLiveLocation,
          [
            roomUid,
            duration,
          ],
        ),
        returnValue: _i25.Future<_i6.CreateLiveLocationRes>.value(
            _FakeCreateLiveLocationRes_4(
          this,
          Invocation.method(
            #createLiveLocation,
            [
              roomUid,
              duration,
            ],
          ),
        )),
      ) as _i25.Future<_i6.CreateLiveLocationRes>);
  @override
  void sendLiveLocationAsStream(
    String? uuid,
    int? duration,
    _i44.Location? location,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendLiveLocationAsStream,
          [
            uuid,
            duration,
            location,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SeenDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeenDao extends _i1.Mock implements _i45.SeenDao {
  MockSeenDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<String?> getRoomSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getRoomSeen,
          [uid],
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Future<void> addRoomSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #addRoomSeen,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Stream<List<String?>> watchAllRoomSeen() => (super.noSuchMethod(
        Invocation.method(
          #watchAllRoomSeen,
          [],
        ),
        returnValue: _i25.Stream<List<String?>>.empty(),
      ) as _i25.Stream<List<String?>>);
  @override
  _i25.Future<void> deleteRoomSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoomSeen,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i2.Seen?> getOthersSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getOthersSeen,
          [uid],
        ),
        returnValue: _i25.Future<_i2.Seen?>.value(),
      ) as _i25.Future<_i2.Seen?>);
  @override
  _i25.Stream<_i2.Seen?> watchOthersSeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchOthersSeen,
          [uid],
        ),
        returnValue: _i25.Stream<_i2.Seen?>.empty(),
      ) as _i25.Stream<_i2.Seen?>);
  @override
  _i25.Future<_i2.Seen> getMySeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getMySeen,
          [uid],
        ),
        returnValue: _i25.Future<_i2.Seen>.value(_FakeSeen_0(
          this,
          Invocation.method(
            #getMySeen,
            [uid],
          ),
        )),
      ) as _i25.Future<_i2.Seen>);
  @override
  _i25.Stream<_i2.Seen> watchMySeen(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchMySeen,
          [uid],
        ),
        returnValue: _i25.Stream<_i2.Seen>.empty(),
      ) as _i25.Stream<_i2.Seen>);
  @override
  _i25.Future<void> saveOthersSeen(_i2.Seen? seen) => (super.noSuchMethod(
        Invocation.method(
          #saveOthersSeen,
          [seen],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> updateMySeen({
    required String? uid,
    int? messageId,
    int? hiddenMessageCount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMySeen,
          [],
          {
            #uid: uid,
            #messageId: messageId,
            #hiddenMessageCount: hiddenMessageCount,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [MucServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockMucServices extends _i1.Mock implements _i46.MucServices {
  MockMucServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i3.Uid?> createNewGroup(
    String? groupName,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewGroup,
          [
            groupName,
            info,
          ],
        ),
        returnValue: _i25.Future<_i3.Uid?>.value(),
      ) as _i25.Future<_i3.Uid?>);
  @override
  _i25.Future<int> addGroupMembers(
    List<_i11.Member>? members,
    _i3.Uid? groupUid, {
    bool? retry = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGroupMembers,
          [
            members,
            groupUid,
          ],
          {#retry: retry},
        ),
        returnValue: _i25.Future<int>.value(0),
      ) as _i25.Future<int>);
  @override
  _i25.Future<_i7.GetGroupRes?> getGroup(_i3.Uid? groupUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroup,
          [groupUid],
        ),
        returnValue: _i25.Future<_i7.GetGroupRes?>.value(),
      ) as _i25.Future<_i7.GetGroupRes?>);
  @override
  _i25.Future<bool> removeGroup(_i3.Uid? groupUid) => (super.noSuchMethod(
        Invocation.method(
          #removeGroup,
          [groupUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> changeGroupRole(
    _i11.Member? member,
    _i3.Uid? group,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeGroupRole,
          [
            member,
            group,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<_i7.GetMembersRes> getGroupMembers(
    _i3.Uid? groupUid,
    int? limit,
    int? pointer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMembers,
          [
            groupUid,
            limit,
            pointer,
          ],
        ),
        returnValue: _i25.Future<_i7.GetMembersRes>.value(_FakeGetMembersRes_5(
          this,
          Invocation.method(
            #getGroupMembers,
            [
              groupUid,
              limit,
              pointer,
            ],
          ),
        )),
      ) as _i25.Future<_i7.GetMembersRes>);
  @override
  _i25.Future<bool> leaveGroup(_i3.Uid? groupUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveGroup,
          [groupUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> kickGroupMembers(
    List<_i11.Member>? members,
    _i3.Uid? groupUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickGroupMembers,
          [
            members,
            groupUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> banGroupMember(
    _i11.Member? member,
    _i3.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #banGroupMember,
          [
            member,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> unbanGroupMember(
    _i11.Member? member,
    _i3.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unbanGroupMember,
          [
            member,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> joinGroup(
    _i3.Uid? groupUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinGroup,
          [
            groupUid,
            token,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> modifyGroup(
    _i7.GroupInfo? group,
    _i3.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyGroup,
          [
            group,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<_i3.Uid?> createNewChannel(
    String? channelName,
    _i12.ChannelType? type,
    String? channelId,
    String? info, {
    bool? retry = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewChannel,
          [
            channelName,
            type,
            channelId,
            info,
          ],
          {#retry: retry},
        ),
        returnValue: _i25.Future<_i3.Uid?>.value(),
      ) as _i25.Future<_i3.Uid?>);
  @override
  _i25.Future<int> addChannelMembers(
    List<_i11.Member>? members,
    _i3.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addChannelMembers,
          [
            members,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<int>.value(0),
      ) as _i25.Future<int>);
  @override
  _i25.Future<_i12.GetChannelRes?> getChannel(_i3.Uid? channelUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannel,
          [channelUid],
        ),
        returnValue: _i25.Future<_i12.GetChannelRes?>.value(),
      ) as _i25.Future<_i12.GetChannelRes?>);
  @override
  _i25.Future<bool> removeChannel(_i3.Uid? channelUid) => (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channelUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> changeCahnnelRole(
    _i11.Member? member,
    _i3.Uid? channel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeCahnnelRole,
          [
            member,
            channel,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<_i12.GetMembersRes?> getChannelMembers(
    _i3.Uid? channelUid,
    int? limit,
    int? pointer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelMembers,
          [
            channelUid,
            limit,
            pointer,
          ],
        ),
        returnValue: _i25.Future<_i12.GetMembersRes?>.value(),
      ) as _i25.Future<_i12.GetMembersRes?>);
  @override
  _i25.Future<bool> leaveChannel(_i3.Uid? channelUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveChannel,
          [channelUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> kickChannelMembers(
    List<_i11.Member>? members,
    _i3.Uid? channelUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickChannelMembers,
          [
            members,
            channelUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> banChannelMember(
    _i11.Member? member,
    _i3.Uid? channelUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #banChannelMember,
          [
            member,
            channelUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> unbanChannelMember(
    _i11.Member? member,
    _i3.Uid? channelUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unbanChannelMember,
          [
            member,
            channelUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> joinChannel(
    _i3.Uid? channelUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannel,
          [
            channelUid,
            token,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> modifyChannel(
    _i12.ChannelInfo? channelInfo,
    _i3.Uid? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyChannel,
          [
            channelInfo,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> pinMessage(_i28.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #pinMessage,
          [message],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String> getGroupJointToken({required _i3.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Future<void> deleteGroupJointToken({required _i3.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String> getChannelJointToken({required _i3.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Future<void> deleteChannelJointToken({required _i3.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> unpinMessage(_i28.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #unpinMessage,
          [message],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [DataStreamServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataStreamServices extends _i1.Mock
    implements _i47.DataStreamServices {
  MockDataStreamServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i28.Message?> handleIncomingMessage(
    _i48.Message? message, {
    String? roomName,
    required bool? isOnlineMessage,
    bool? saveInDatabase = true,
    bool? isFirebaseMessage = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleIncomingMessage,
          [message],
          {
            #roomName: roomName,
            #isOnlineMessage: isOnlineMessage,
            #saveInDatabase: saveInDatabase,
            #isFirebaseMessage: isFirebaseMessage,
          },
        ),
        returnValue: _i25.Future<_i28.Message?>.value(),
      ) as _i25.Future<_i28.Message?>);
  @override
  _i25.Future<void> handleSeen(_i49.Seen? seen) => (super.noSuchMethod(
        Invocation.method(
          #handleSeen,
          [seen],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void handleActivity(_i33.Activity? activity) => super.noSuchMethod(
        Invocation.method(
          #handleActivity,
          [activity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> handleAckMessage(
          _i48.MessageDeliveryAck? messageDeliveryAck) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleAckMessage,
          [messageDeliveryAck],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void handleRoomPresenceTypeChange(
          _i50.RoomPresenceTypeChanged? roomPresenceTypeChanged) =>
      super.noSuchMethod(
        Invocation.method(
          #handleRoomPresenceTypeChange,
          [roomPresenceTypeChanged],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleCallOffer(_i16.CallOffer? callOffer) => super.noSuchMethod(
        Invocation.method(
          #handleCallOffer,
          [callOffer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleCallAnswer(_i16.CallAnswer? callAnswer) => super.noSuchMethod(
        Invocation.method(
          #handleCallAnswer,
          [callAnswer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<bool> shouldNotifyForThisMessage(_i48.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldNotifyForThisMessage,
          [message],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<_i28.Message?> saveMessageInMessagesDB(_i48.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageInMessagesDB,
          [message],
        ),
        returnValue: _i25.Future<_i28.Message?>.value(),
      ) as _i25.Future<_i28.Message?>);
  @override
  _i25.Future<_i28.Message?> fetchLastNotHiddenMessage(
    _i3.Uid? roomUid,
    int? lastMessageId,
    int? firstMessageId, {
    bool? appRunInForeground = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchLastNotHiddenMessage,
          [
            roomUid,
            lastMessageId,
            firstMessageId,
          ],
          {#appRunInForeground: appRunInForeground},
        ),
        returnValue: _i25.Future<_i28.Message?>.value(),
      ) as _i25.Future<_i28.Message?>);
  @override
  _i25.Future<void> getAndProcessLastIncomingCallsFromServer(
    _i3.Uid? roomUid,
    int? lastMessageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAndProcessLastIncomingCallsFromServer,
          [
            roomUid,
            lastMessageId,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> handleFetchMessagesActions(
    String? roomId,
    List<_i48.Message>? messages,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleFetchMessagesActions,
          [
            roomId,
            messages,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i28.Message>> saveFetchMessages(
    List<_i48.Message>? messages, {
    bool? appRunInForeground = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFetchMessages,
          [messages],
          {#appRunInForeground: appRunInForeground},
        ),
        returnValue: _i25.Future<List<_i28.Message>>.value(<_i28.Message>[]),
      ) as _i25.Future<List<_i28.Message>>);
}

/// A class which mocks [CoreServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoreServices extends _i1.Mock implements _i51.CoreServices {
  MockCoreServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get responseChecked => (super.noSuchMethod(
        Invocation.getter(#responseChecked),
        returnValue: false,
      ) as bool);
  @override
  set responseChecked(bool? _responseChecked) => super.noSuchMethod(
        Invocation.setter(
          #responseChecked,
          _responseChecked,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get backoffTime => (super.noSuchMethod(
        Invocation.getter(#backoffTime),
        returnValue: 0,
      ) as int);
  @override
  set backoffTime(int? _backoffTime) => super.noSuchMethod(
        Invocation.setter(
          #backoffTime,
          _backoffTime,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<_i51.ConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _FakeBehaviorSubject_2<_i51.ConnectionStatus>(
          this,
          Invocation.getter(#connectionStatus),
        ),
      ) as _i4.BehaviorSubject<_i51.ConnectionStatus>);
  @override
  set connectionStatus(
          _i4.BehaviorSubject<_i51.ConnectionStatus>? _connectionStatus) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionStatus,
          _connectionStatus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  void retryConnection({bool? forced = false}) => super.noSuchMethod(
        Invocation.method(
          #retryConnection,
          [],
          {#forced: forced},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void fasterRetryConnection() => super.noSuchMethod(
        Invocation.method(
          #fasterRetryConnection,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> initStreamConnection() => (super.noSuchMethod(
        Invocation.method(
          #initStreamConnection,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void closeConnection() => super.noSuchMethod(
        Invocation.method(
          #closeConnection,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void startCheckerTimer() => super.noSuchMethod(
        Invocation.method(
          #startCheckerTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void checkConnectionTimer() => super.noSuchMethod(
        Invocation.method(
          #checkConnectionTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void gotResponse() => super.noSuchMethod(
        Invocation.method(
          #gotResponse,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void startStream() => super.noSuchMethod(
        Invocation.method(
          #startStream,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> sendMessage(_i48.MessageByClient? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void sendPing() => super.noSuchMethod(
        Invocation.method(
          #sendPing,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> sendSeen(_i49.SeenByClient? seen) => (super.noSuchMethod(
        Invocation.method(
          #sendSeen,
          [seen],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void sendCallAnswer(_i16.CallAnswerByClient? callAnswerByClient) =>
      super.noSuchMethod(
        Invocation.method(
          #sendCallAnswer,
          [callAnswerByClient],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void sendCallOffer(_i16.CallOfferByClient? callOfferByClient) =>
      super.noSuchMethod(
        Invocation.method(
          #sendCallOffer,
          [callOfferByClient],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void sendActivity(
    _i33.ActivityByClient? activity,
    String? id,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendActivity,
          [
            activity,
            id,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [QueryServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueryServiceClient extends _i1.Mock
    implements _i14.QueryServiceClient {
  MockQueryServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.ResponseFuture<_i14.GetTimeRes> getTime(
    _i14.GetTimeReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTime,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetTimeRes>(
          this,
          Invocation.method(
            #getTime,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetTimeRes>);
  @override
  _i8.ResponseFuture<_i14.IdIsAvailableRes> idIsAvailable(
    _i14.IdIsAvailableReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idIsAvailable,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.IdIsAvailableRes>(
          this,
          Invocation.method(
            #idIsAvailable,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.IdIsAvailableRes>);
  @override
  _i8.ResponseFuture<_i14.SetIdRes> setId(
    _i14.SetIdReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setId,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.SetIdRes>(
          this,
          Invocation.method(
            #setId,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.SetIdRes>);
  @override
  _i8.ResponseFuture<_i14.BlockUidRes> blockUid(
    _i14.BlockUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #blockUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.BlockUidRes>(
          this,
          Invocation.method(
            #blockUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.BlockUidRes>);
  @override
  _i8.ResponseFuture<_i14.UnblockUidRes> unblockUid(
    _i14.UnblockUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unblockUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.UnblockUidRes>(
          this,
          Invocation.method(
            #unblockUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.UnblockUidRes>);
  @override
  _i8.ResponseFuture<_i14.ReportRes> report(
    _i14.ReportReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #report,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.ReportRes>(
          this,
          Invocation.method(
            #report,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.ReportRes>);
  @override
  _i8.ResponseFuture<_i14.GetBlockedListRes> getBlockedList(
    _i14.GetBlockedListReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBlockedList,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetBlockedListRes>(
          this,
          Invocation.method(
            #getBlockedList,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetBlockedListRes>);
  @override
  _i8.ResponseFuture<_i14.GetIdByUidRes> getIdByUid(
    _i14.GetIdByUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdByUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetIdByUidRes>(
          this,
          Invocation.method(
            #getIdByUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetIdByUidRes>);
  @override
  _i8.ResponseFuture<_i14.GetUidByIdRes> getUidById(
    _i14.GetUidByIdReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUidById,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetUidByIdRes>(
          this,
          Invocation.method(
            #getUidById,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetUidByIdRes>);
  @override
  _i8.ResponseFuture<_i14.SearchUidRes> searchUid(
    _i14.SearchUidReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUid,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.SearchUidRes>(
          this,
          Invocation.method(
            #searchUid,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.SearchUidRes>);
  @override
  _i8.ResponseFuture<_i14.GetLastActivityRes> getLastActivity(
    _i14.GetLastActivityReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastActivity,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetLastActivityRes>(
          this,
          Invocation.method(
            #getLastActivity,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetLastActivityRes>);
  @override
  _i8.ResponseFuture<_i14.FetchMessagesRes> fetchMessages(
    _i14.FetchMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchMessagesRes>(
          this,
          Invocation.method(
            #fetchMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchMessagesRes>);
  @override
  _i8.ResponseFuture<_i14.CountIsHiddenMessagesRes> countIsHiddenMessages(
    _i14.CountIsHiddenMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #countIsHiddenMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.CountIsHiddenMessagesRes>(
          this,
          Invocation.method(
            #countIsHiddenMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.CountIsHiddenMessagesRes>);
  @override
  _i8.ResponseFuture<_i14.GetAllUserRoomMetaRes> getAllUserRoomMeta(
    _i14.GetAllUserRoomMetaReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUserRoomMeta,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetAllUserRoomMetaRes>(
          this,
          Invocation.method(
            #getAllUserRoomMeta,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetAllUserRoomMetaRes>);
  @override
  _i8.ResponseFuture<_i14.GetUserRoomMetaRes> getUserRoomMeta(
    _i14.GetUserRoomMetaReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRoomMeta,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetUserRoomMetaRes>(
          this,
          Invocation.method(
            #getUserRoomMeta,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetUserRoomMetaRes>);
  @override
  _i8.ResponseFuture<_i14.GetUserLastDeliveryAckRes> getUserLastDeliveryAck(
    _i14.GetUserLastDeliveryAckReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLastDeliveryAck,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetUserLastDeliveryAckRes>(
          this,
          Invocation.method(
            #getUserLastDeliveryAck,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetUserLastDeliveryAckRes>);
  @override
  _i8.ResponseFuture<_i14.GetMediaMetadataRes> getMediaMetadata(
    _i14.GetMediaMetadataReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaMetadata,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetMediaMetadataRes>(
          this,
          Invocation.method(
            #getMediaMetadata,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetMediaMetadataRes>);
  @override
  _i8.ResponseFuture<_i14.FetchMediasRes> fetchMedias(
    _i14.FetchMediasReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMedias,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchMediasRes>(
          this,
          Invocation.method(
            #fetchMedias,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchMediasRes>);
  @override
  _i8.ResponseFuture<_i14.GetMetaCountsRes> getMetaCounts(
    _i14.GetMetaCountsReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetaCounts,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetMetaCountsRes>(
          this,
          Invocation.method(
            #getMetaCounts,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetMetaCountsRes>);
  @override
  _i8.ResponseFuture<_i14.FetchMetaListRes> fetchMetaList(
    _i14.FetchMetaListReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMetaList,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchMetaListRes>(
          this,
          Invocation.method(
            #fetchMetaList,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchMetaListRes>);
  @override
  _i8.ResponseFuture<_i14.FetchMessageMetaIndexRes> fetchMessageMetaIndex(
    _i14.FetchMessageMetaIndexReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMessageMetaIndex,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchMessageMetaIndexRes>(
          this,
          Invocation.method(
            #fetchMessageMetaIndex,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchMessageMetaIndexRes>);
  @override
  _i8.ResponseFuture<_i14.FetchMetaDeletedIndexesRes> fetchMetaDeletedIndexes(
    _i14.FetchMetaDeletedIndexesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMetaDeletedIndexes,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchMetaDeletedIndexesRes>(
          this,
          Invocation.method(
            #fetchMetaDeletedIndexes,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchMetaDeletedIndexesRes>);
  @override
  _i8.ResponseFuture<_i14.FetchMentionListRes> fetchMentionList(
    _i14.FetchMentionListReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMentionList,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchMentionListRes>(
          this,
          Invocation.method(
            #fetchMentionList,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchMentionListRes>);
  @override
  _i8.ResponseFuture<_i14.FetchCurrentUserSeenDataRes> fetchCurrentUserSeenData(
    _i14.FetchCurrentUserSeenDataReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCurrentUserSeenData,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchCurrentUserSeenDataRes>(
          this,
          Invocation.method(
            #fetchCurrentUserSeenData,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchCurrentUserSeenDataRes>);
  @override
  _i8.ResponseFuture<_i14.FetchLastOtherUserSeenDataRes>
      fetchLastOtherUserSeenData(
    _i14.FetchLastOtherUserSeenDataReq? request, {
    _i8.CallOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchLastOtherUserSeenData,
              [request],
              {#options: options},
            ),
            returnValue:
                _FakeResponseFuture_6<_i14.FetchLastOtherUserSeenDataRes>(
              this,
              Invocation.method(
                #fetchLastOtherUserSeenData,
                [request],
                {#options: options},
              ),
            ),
          ) as _i8.ResponseFuture<_i14.FetchLastOtherUserSeenDataRes>);
  @override
  _i8.ResponseFuture<_i14.FetchSeenCountOfChannelMessageRes>
      fetchSeenCountOfChannelMessage(
    _i14.FetchSeenCountOfChannelMessageReq? request, {
    _i8.CallOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchSeenCountOfChannelMessage,
              [request],
              {#options: options},
            ),
            returnValue:
                _FakeResponseFuture_6<_i14.FetchSeenCountOfChannelMessageRes>(
              this,
              Invocation.method(
                #fetchSeenCountOfChannelMessage,
                [request],
                {#options: options},
              ),
            ),
          ) as _i8.ResponseFuture<_i14.FetchSeenCountOfChannelMessageRes>);
  @override
  _i8.ResponseFuture<_i14.FetchUserCallsRes> fetchUserCalls(
    _i14.FetchUserCallsReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserCalls,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.FetchUserCallsRes>(
          this,
          Invocation.method(
            #fetchUserCalls,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.FetchUserCallsRes>);
  @override
  _i8.ResponseFuture<_i14.UpdateMessageRes> updateMessage(
    _i14.UpdateMessageReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessage,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.UpdateMessageRes>(
          this,
          Invocation.method(
            #updateMessage,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.UpdateMessageRes>);
  @override
  _i8.ResponseFuture<_i14.DeleteMessageRes> deleteMessage(
    _i14.DeleteMessageReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.DeleteMessageRes>(
          this,
          Invocation.method(
            #deleteMessage,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.DeleteMessageRes>);
  @override
  _i8.ResponseFuture<_i14.ForwardMessagesRes> forwardMessages(
    _i14.ForwardMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #forwardMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.ForwardMessagesRes>(
          this,
          Invocation.method(
            #forwardMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.ForwardMessagesRes>);
  @override
  _i8.ResponseFuture<_i14.AddAvatarRes> addAvatar(
    _i14.AddAvatarReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAvatar,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.AddAvatarRes>(
          this,
          Invocation.method(
            #addAvatar,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.AddAvatarRes>);
  @override
  _i8.ResponseFuture<_i14.RemoveAvatarRes> removeAvatar(
    _i14.RemoveAvatarReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAvatar,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.RemoveAvatarRes>(
          this,
          Invocation.method(
            #removeAvatar,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.RemoveAvatarRes>);
  @override
  _i8.ResponseFuture<_i14.RemovePrivateRoomRes> removePrivateRoom(
    _i14.RemovePrivateRoomReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePrivateRoom,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.RemovePrivateRoomRes>(
          this,
          Invocation.method(
            #removePrivateRoom,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.RemovePrivateRoomRes>);
  @override
  _i8.ResponseFuture<_i14.SearchInMessagesRes> searchInMessages(
    _i14.SearchInMessagesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInMessages,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.SearchInMessagesRes>(
          this,
          Invocation.method(
            #searchInMessages,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.SearchInMessagesRes>);
  @override
  _i8.ResponseFuture<_i14.SendGlitchRes> sendGlitch(
    _i14.SendGlitchReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendGlitch,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.SendGlitchRes>(
          this,
          Invocation.method(
            #sendGlitch,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.SendGlitchRes>);
  @override
  _i8.ResponseFuture<_i14.CreateGroupCallRes> createGroupCall(
    _i14.CreateGroupCallReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGroupCall,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.CreateGroupCallRes>(
          this,
          Invocation.method(
            #createGroupCall,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.CreateGroupCallRes>);
  @override
  _i8.ResponseFuture<_i14.EndGroupCallRes> endGroupCall(
    _i14.EndGroupCallReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #endGroupCall,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.EndGroupCallRes>(
          this,
          Invocation.method(
            #endGroupCall,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.EndGroupCallRes>);
  @override
  _i8.ResponseFuture<_i14.GetShowcasesRes> getShowcases(
    _i14.GetShowcasesReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShowcases,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i14.GetShowcasesRes>(
          this,
          Invocation.method(
            #getShowcases,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i14.GetShowcasesRes>);
  @override
  _i9.ClientCall<Q, R> $createCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i25.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_7<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i9.ClientCall<Q, R>);
  @override
  _i8.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    Q? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<R>);
  @override
  _i8.ResponseStream<R> $createStreamingCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i25.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_8<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseStream<R>);
}

/// A class which mocks [AuthServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthServiceClient extends _i1.Mock implements _i5.AuthServiceClient {
  MockAuthServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.ResponseFuture<_i5.GetVerificationCodeRes> getVerificationCode(
    _i5.GetVerificationCodeReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVerificationCode,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.GetVerificationCodeRes>(
          this,
          Invocation.method(
            #getVerificationCode,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.GetVerificationCodeRes>);
  @override
  _i8.ResponseFuture<_i5.AccessTokenRes> verifyAndGetToken(
    _i5.VerifyCodeReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyAndGetToken,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.AccessTokenRes>(
          this,
          Invocation.method(
            #verifyAndGetToken,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.AccessTokenRes>);
  @override
  _i8.ResponseFuture<_i5.AccessTokenRes> checkQrCodeIsVerifiedAndLogin(
    _i5.CheckQrCodeIsVerifiedAndLoginReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkQrCodeIsVerifiedAndLogin,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.AccessTokenRes>(
          this,
          Invocation.method(
            #checkQrCodeIsVerifiedAndLogin,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.AccessTokenRes>);
  @override
  _i8.ResponseFuture<_i5.RenewAccessTokenRes> renewAccessToken(
    _i5.RenewAccessTokenReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #renewAccessToken,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.RenewAccessTokenRes>(
          this,
          Invocation.method(
            #renewAccessToken,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.RenewAccessTokenRes>);
  @override
  _i8.ResponseFuture<_i5.VerifyEmailAddressRes> verifyEmailAddress(
    _i5.VerifyEmailAddressReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyEmailAddress,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.VerifyEmailAddressRes>(
          this,
          Invocation.method(
            #verifyEmailAddress,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.VerifyEmailAddressRes>);
  @override
  _i8.ResponseFuture<_i5.SendErasePasswordEmailRes> sendErasePasswordEmail(
    _i5.SendErasePasswordEmailReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendErasePasswordEmail,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.SendErasePasswordEmailRes>(
          this,
          Invocation.method(
            #sendErasePasswordEmail,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.SendErasePasswordEmailRes>);
  @override
  _i8.ResponseFuture<_i5.ErasePasswordRes> erasePassword(
    _i5.ErasePasswordReq? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #erasePassword,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<_i5.ErasePasswordRes>(
          this,
          Invocation.method(
            #erasePassword,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i5.ErasePasswordRes>);
  @override
  _i9.ClientCall<Q, R> $createCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i25.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_7<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i9.ClientCall<Q, R>);
  @override
  _i8.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    Q? request, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_6<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<R>);
  @override
  _i8.ResponseStream<R> $createStreamingCall<Q, R>(
    _i8.ClientMethod<Q, R>? method,
    _i25.Stream<Q>? requests, {
    _i8.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_8<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseStream<R>);
}

/// A class which mocks [SharedDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedDao extends _i1.Mock implements _i52.SharedDao {
  MockSharedDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<String?> get(_i53.SharedKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Future<void> put(
    _i53.SharedKeys? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [AvatarRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAvatarRepo extends _i1.Mock implements _i54.AvatarRepo {
  MockAvatarRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<void> fetchAvatar(
    _i3.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAvatar,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Stream<List<_i55.Avatar?>> getAvatar(
    _i3.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvatar,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i25.Stream<List<_i55.Avatar?>>.empty(),
      ) as _i25.Stream<List<_i55.Avatar?>>);
  @override
  _i25.Future<_i55.Avatar?> getLastAvatar(
    _i3.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastAvatar,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i25.Future<_i55.Avatar?>.value(),
      ) as _i25.Future<_i55.Avatar?>);
  @override
  _i25.Future<void> setMucAvatar(
    _i3.Uid? uid,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMucAvatar,
          [
            uid,
            path,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  String? fastForwardAvatarFilePath(_i3.Uid? userUid) =>
      (super.noSuchMethod(Invocation.method(
        #fastForwardAvatarFilePath,
        [userUid],
      )) as String?);
  @override
  _i25.Stream<String> getLastAvatarFilePathStream(
    _i3.Uid? userUid, {
    bool? forceToUpdate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastAvatarFilePathStream,
          [userUid],
          {#forceToUpdate: forceToUpdate},
        ),
        returnValue: _i25.Stream<String>.empty(),
      ) as _i25.Stream<String>);
  @override
  _i25.Future<void> uploadAvatar(
    String? path,
    _i3.Uid? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAvatar,
          [
            path,
            uid,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> deleteAvatar(_i55.Avatar? avatar) => (super.noSuchMethod(
        Invocation.method(
          #deleteAvatar,
          [avatar],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [BlockDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockBlockDao extends _i1.Mock implements _i56.BlockDao {
  MockBlockDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<bool> isBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isBlocked,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Stream<bool?> watchIsBlocked(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsBlocked,
          [uid],
        ),
        returnValue: _i25.Stream<bool?>.empty(),
      ) as _i25.Stream<bool?>);
  @override
  _i25.Future<void> block(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #block,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> unblock(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #unblock,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [I18N].
///
/// See the documentation for Mockito's code generation for more information.
class MockI18N extends _i1.Mock implements _i57.I18N {
  MockI18N() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isRtl => (super.noSuchMethod(
        Invocation.getter(#isRtl),
        returnValue: false,
      ) as bool);
  @override
  List<String> get changelogs => (super.noSuchMethod(
        Invocation.getter(#changelogs),
        returnValue: <String>[],
      ) as List<String>);
  @override
  bool get isPersian => (super.noSuchMethod(
        Invocation.getter(#isPersian),
        returnValue: false,
      ) as bool);
  @override
  _i10.TextDirection get defaultTextDirection => (super.noSuchMethod(
        Invocation.getter(#defaultTextDirection),
        returnValue: _i10.TextDirection.rtl,
      ) as _i10.TextDirection);
  @override
  _i25.Stream<dynamic> get localeStream => (super.noSuchMethod(
        Invocation.getter(#localeStream),
        returnValue: _i25.Stream<dynamic>.empty(),
      ) as _i25.Stream<dynamic>);
  @override
  _i10.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_9(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i10.Locale);
  @override
  _i58.Language get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: _i58.Language.FARSI,
      ) as _i58.Language);
  @override
  String get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValue: '',
      ) as String);
  @override
  String operator [](String? key) => (super.noSuchMethod(
        Invocation.method(
          #[],
          [key],
        ),
        returnValue: '',
      ) as String);
  @override
  String verb(
    String? key, {
    bool? isFirstPerson = false,
    bool? needParticleSuffixed = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verb,
          [key],
          {
            #isFirstPerson: isFirstPerson,
            #needParticleSuffixed: needParticleSuffixed,
          },
        ),
        returnValue: '',
      ) as String);
  @override
  void changeLanguage(_i58.Language? language) => super.noSuchMethod(
        Invocation.method(
          #changeLanguage,
          [language],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.TextDirection getDirection(String? v) => (super.noSuchMethod(
        Invocation.method(
          #getDirection,
          [v],
        ),
        returnValue: _i10.TextDirection.rtl,
      ) as _i10.TextDirection);
}

/// A class which mocks [MuteDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMuteDao extends _i1.Mock implements _i59.MuteDao {
  MockMuteDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<bool> isMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #isMuted,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Stream<bool> watchIsMuted(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIsMuted,
          [uid],
        ),
        returnValue: _i25.Stream<bool>.empty(),
      ) as _i25.Stream<bool>);
  @override
  _i25.Future<void> mute(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #mute,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> unMute(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #unMute,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [UidIdNameDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUidIdNameDao extends _i1.Mock implements _i60.UidIdNameDao {
  MockUidIdNameDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i61.UidIdName?> getByUid(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getByUid,
          [uid],
        ),
        returnValue: _i25.Future<_i61.UidIdName?>.value(),
      ) as _i25.Future<_i61.UidIdName?>);
  @override
  _i25.Stream<String?> watchIdByUid(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchIdByUid,
          [uid],
        ),
        returnValue: _i25.Stream<String?>.empty(),
      ) as _i25.Stream<String?>);
  @override
  _i25.Future<String?> getUidById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUidById,
          [id],
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Future<void> update(
    String? uid, {
    String? id,
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [uid],
          {
            #id: id,
            #name: name,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i61.UidIdName>> search(String? term) => (super.noSuchMethod(
        Invocation.method(
          #search,
          [term],
        ),
        returnValue:
            _i25.Future<List<_i61.UidIdName>>.value(<_i61.UidIdName>[]),
      ) as _i25.Future<List<_i61.UidIdName>>);
}

/// A class which mocks [ContactRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactRepo extends _i1.Mock implements _i62.ContactRepo {
  MockContactRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.BehaviorSubject<bool> get isSyncingContacts => (super.noSuchMethod(
        Invocation.getter(#isSyncingContacts),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#isSyncingContacts),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  _i4.BehaviorSubject<double> get sendContactProgress => (super.noSuchMethod(
        Invocation.getter(#sendContactProgress),
        returnValue: _FakeBehaviorSubject_2<double>(
          this,
          Invocation.getter(#sendContactProgress),
        ),
      ) as _i4.BehaviorSubject<double>);
  @override
  bool get hasContactPermission => (super.noSuchMethod(
        Invocation.getter(#hasContactPermission),
        returnValue: false,
      ) as bool);
  @override
  set hasContactPermission(bool? _hasContactPermission) => super.noSuchMethod(
        Invocation.setter(
          #hasContactPermission,
          _hasContactPermission,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> syncContacts(_i19.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncContacts,
          [context],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> sendNotSyncedContactInStartTime() => (super.noSuchMethod(
        Invocation.method(
          #sendNotSyncedContactInStartTime,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> sendContacts(
    List<_i63.Contact>? contacts, {
    bool? initProgressbar = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendContacts,
          [contacts],
          {#initProgressbar: initProgressbar},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String?> sendNewContact(_i63.Contact? contact) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendNewContact,
          [contact],
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Stream<List<_i64.Contact>> watchAllMessengerContacts() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllMessengerContacts,
          [],
        ),
        returnValue: _i25.Stream<List<_i64.Contact>>.empty(),
      ) as _i25.Stream<List<_i64.Contact>>);
  @override
  _i25.Future<List<_i64.Contact>> getAllUserAsContact() => (super.noSuchMethod(
        Invocation.method(
          #getAllUserAsContact,
          [],
        ),
        returnValue: _i25.Future<List<_i64.Contact>>.value(<_i64.Contact>[]),
      ) as _i25.Future<List<_i64.Contact>>);
  @override
  _i25.Stream<List<_i64.Contact>> watchNotMessengerContact() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNotMessengerContact,
          [],
        ),
        returnValue: _i25.Stream<List<_i64.Contact>>.empty(),
      ) as _i25.Stream<List<_i64.Contact>>);
  @override
  _i25.Stream<List<_i64.Contact>> watchAll() => (super.noSuchMethod(
        Invocation.method(
          #watchAll,
          [],
        ),
        returnValue: _i25.Stream<List<_i64.Contact>>.empty(),
      ) as _i25.Stream<List<_i64.Contact>>);
  @override
  _i25.Future<void> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> getUserIdByUid(_i3.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserIdByUid,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> fetchMemberId(_i65.Member? member) => (super.noSuchMethod(
        Invocation.method(
          #fetchMemberId,
          [member],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i3.Uid>> searchUser(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchUser,
          [query],
        ),
        returnValue: _i25.Future<List<_i3.Uid>>.value(<_i3.Uid>[]),
      ) as _i25.Future<List<_i3.Uid>>);
  @override
  _i25.Future<List<_i3.Uid>> searchInContacts(String? text) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInContacts,
          [text],
        ),
        returnValue: _i25.Future<List<_i3.Uid>>.value(<_i3.Uid>[]),
      ) as _i25.Future<List<_i3.Uid>>);
  @override
  _i25.Future<_i64.Contact?> getContact(_i3.Uid? userUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContact,
          [userUid],
        ),
        returnValue: _i25.Future<_i64.Contact?>.value(),
      ) as _i25.Future<_i64.Contact?>);
  @override
  _i25.Future<String?> getContactFromServer(
    _i3.Uid? contactUid, {
    bool? ignoreInsertingOrUpdatingContactDao = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContactFromServer,
          [contactUid],
          {
            #ignoreInsertingOrUpdatingContactDao:
                ignoreInsertingOrUpdatingContactDao
          },
        ),
        returnValue: _i25.Future<String?>.value(),
      ) as _i25.Future<String?>);
  @override
  _i25.Future<bool> contactIsExist(
    int? countryCode,
    int? nationalNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #contactIsExist,
          [
            countryCode,
            nationalNumber,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> importContactsFormVcard() => (super.noSuchMethod(
        Invocation.method(
          #importContactsFormVcard,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [AccountRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepo extends _i1.Mock implements _i66.AccountRepo {
  MockAccountRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<bool> hasProfile({bool? retry = false}) => (super.noSuchMethod(
        Invocation.method(
          #hasProfile,
          [],
          {#retry: retry},
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> getUserProfileFromServer() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfileFromServer,
          [],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> fetchCurrentUserId({bool? retry = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCurrentUserId,
          [],
          {#retry: retry},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i67.Account?> getAccount() => (super.noSuchMethod(
        Invocation.method(
          #getAccount,
          [],
        ),
        returnValue: _i25.Future<_i67.Account?>.value(),
      ) as _i25.Future<_i67.Account?>);
  @override
  _i25.Stream<_i67.Account?> getAccountAsStream() => (super.noSuchMethod(
        Invocation.method(
          #getAccountAsStream,
          [],
        ),
        returnValue: _i25.Stream<_i67.Account?>.empty(),
      ) as _i25.Stream<_i67.Account?>);
  @override
  _i25.Future<bool> idIsAvailable(String? username) => (super.noSuchMethod(
        Invocation.method(
          #idIsAvailable,
          [username],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> updateEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [email],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> setAccountDetails({
    String? username,
    String? firstname,
    String? lastname,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAccountDetails,
          [],
          {
            #username: username,
            #firstname: firstname,
            #lastname: lastname,
            #description: description,
          },
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> updatePassword({
    String? currentPassword,
    required String? newPassword,
    String? passwordHint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #currentPassword: currentPassword,
            #newPassword: newPassword,
            #passwordHint: passwordHint,
          },
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> disableTwoStepVerification(String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableTwoStepVerification,
          [password],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<List<_i36.Session>> getSessions() => (super.noSuchMethod(
        Invocation.method(
          #getSessions,
          [],
        ),
        returnValue: _i25.Future<List<_i36.Session>>.value(<_i36.Session>[]),
      ) as _i25.Future<List<_i36.Session>>);
  @override
  _i25.Future<void> checkUpdatePlatformSessionInformation() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkUpdatePlatformSessionInformation,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> updatePlatformVersion() => (super.noSuchMethod(
        Invocation.method(
          #updatePlatformVersion,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  bool shouldUpdateSessionPlatformInformation(String? previousVersion) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldUpdateSessionPlatformInformation,
          [previousVersion],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool shouldShowNewFeaturesDialog(String? previousVersion) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldShowNewFeaturesDialog,
          [previousVersion],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<bool> verifyQrCodeToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #verifyQrCodeToken,
          [token],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> revokeSession(String? session) => (super.noSuchMethod(
        Invocation.method(
          #revokeSession,
          [session],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> revokeAllOtherSession() => (super.noSuchMethod(
        Invocation.method(
          #revokeAllOtherSession,
          [],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String> getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  bool shouldShowNewFeatureDialog() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowNewFeatureDialog,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<bool> isTwoStepVerificationEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isTwoStepVerificationEnabled,
          [],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> changeTwoStepVerificationPassword({
    required String? currentPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeTwoStepVerificationPassword,
          [],
          {
            #currentPassword: currentPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
}

/// A class which mocks [MucRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMucRepo extends _i1.Mock implements _i68.MucRepo {
  MockMucRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i3.Uid?> createNewGroup(
    List<_i3.Uid>? memberUids,
    String? groupName,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewGroup,
          [
            memberUids,
            groupName,
            info,
          ],
        ),
        returnValue: _i25.Future<_i3.Uid?>.value(),
      ) as _i25.Future<_i3.Uid?>);
  @override
  _i25.Future<_i3.Uid?> createNewChannel(
    String? channelId,
    List<_i3.Uid>? memberUidList,
    String? channelName,
    _i12.ChannelType? channelType,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewChannel,
          [
            channelId,
            memberUidList,
            channelName,
            channelType,
            info,
          ],
        ),
        returnValue: _i25.Future<_i3.Uid?>.value(),
      ) as _i25.Future<_i3.Uid?>);
  @override
  _i25.Future<bool> channelIdIsAvailable(String? id) => (super.noSuchMethod(
        Invocation.method(
          #channelIdIsAvailable,
          [id],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> fetchGroupMembers(
    _i3.Uid? groupUid,
    int? len,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroupMembers,
          [
            groupUid,
            len,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String> getGroupJointToken({required _i3.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Future<void> deleteGroupJointToken({required _i3.Uid? groupUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroupJointToken,
          [],
          {#groupUid: groupUid},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<String> getChannelJointToken({required _i3.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
  @override
  _i25.Future<void> deleteChannelJointToken({required _i3.Uid? channelUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteChannelJointToken,
          [],
          {#channelUid: channelUid},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> fetchChannelMembers(
    _i3.Uid? channelUid,
    int? len,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchChannelMembers,
          [
            channelUid,
            len,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i69.Muc?> fetchMucInfo(
    _i3.Uid? mucUid, {
    bool? createNewRoom = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMucInfo,
          [mucUid],
          {#createNewRoom: createNewRoom},
        ),
        returnValue: _i25.Future<_i69.Muc?>.value(),
      ) as _i25.Future<_i69.Muc?>);
  @override
  _i25.Future<bool> isMucAdminOrOwner(
    String? memberUid,
    String? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isMucAdminOrOwner,
          [
            memberUid,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> isMucOwner(
    String? userUid,
    String? mucUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isMucOwner,
          [
            userUid,
            mucUid,
          ],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<List<_i65.Member>> searchMemberByNameOrId(String? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMemberByNameOrId,
          [mucUid],
        ),
        returnValue: _i25.Future<List<_i65.Member>>.value(<_i65.Member>[]),
      ) as _i25.Future<List<_i65.Member>>);
  @override
  _i25.Future<List<_i65.Member?>> getAllMembers(String? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMembers,
          [mucUid],
        ),
        returnValue: _i25.Future<List<_i65.Member?>>.value(<_i65.Member?>[]),
      ) as _i25.Future<List<_i65.Member?>>);
  @override
  _i25.Stream<List<_i65.Member?>> watchAllMembers(String? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllMembers,
          [mucUid],
        ),
        returnValue: _i25.Stream<List<_i65.Member?>>.empty(),
      ) as _i25.Stream<List<_i65.Member?>>);
  @override
  _i25.Future<_i69.Muc?> getMuc(String? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #getMuc,
          [mucUid],
        ),
        returnValue: _i25.Future<_i69.Muc?>.value(),
      ) as _i25.Future<_i69.Muc?>);
  @override
  _i25.Stream<_i69.Muc?> watchMuc(String? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #watchMuc,
          [mucUid],
        ),
        returnValue: _i25.Stream<_i69.Muc?>.empty(),
      ) as _i25.Stream<_i69.Muc?>);
  @override
  _i25.Future<bool> removeMuc(_i3.Uid? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #removeMuc,
          [mucUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<_i12.GetChannelRes?> getChannelInfo(_i3.Uid? channelUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelInfo,
          [channelUid],
        ),
        returnValue: _i25.Future<_i12.GetChannelRes?>.value(),
      ) as _i25.Future<_i12.GetChannelRes?>);
  @override
  _i25.Future<void> changeGroupMemberRole(_i65.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeGroupMemberRole,
          [groupMember],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> changeChannelMemberRole(_i65.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeChannelMemberRole,
          [channelMember],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<bool> leaveMuc(_i3.Uid? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #leaveMuc,
          [mucUid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> kickGroupMembers(List<_i65.Member>? groupMembers) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickGroupMembers,
          [groupMembers],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<bool> kickChannelMembers(List<_i65.Member>? channelMembers) =>
      (super.noSuchMethod(
        Invocation.method(
          #kickChannelMembers,
          [channelMembers],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> banGroupMember(_i65.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #banGroupMember,
          [groupMember],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> banChannelMember(_i65.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #banChannelMember,
          [channelMember],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> unBanGroupMember(_i65.Member? groupMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBanGroupMember,
          [groupMember],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> unBanChannelMember(_i65.Member? channelMember) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBanChannelMember,
          [channelMember],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i69.Muc?> joinGroup(
    _i3.Uid? groupUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinGroup,
          [
            groupUid,
            token,
          ],
        ),
        returnValue: _i25.Future<_i69.Muc?>.value(),
      ) as _i25.Future<_i69.Muc?>);
  @override
  _i25.Future<_i69.Muc?> joinChannel(
    _i3.Uid? channelUid,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChannel,
          [
            channelUid,
            token,
          ],
        ),
        returnValue: _i25.Future<_i69.Muc?>.value(),
      ) as _i25.Future<_i69.Muc?>);
  @override
  _i25.Future<void> modifyGroup(
    String? mucId,
    String? name,
    String? info,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyGroup,
          [
            mucId,
            name,
            info,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> modifyChannel(
    String? mucUid,
    String? name,
    String? id,
    String? info,
    _i12.ChannelType? channelType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyChannel,
          [
            mucUid,
            name,
            id,
            info,
            channelType,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<int> sendMembers(
    _i3.Uid? mucUid,
    List<_i3.Uid>? memberUids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMembers,
          [
            mucUid,
            memberUids,
          ],
        ),
        returnValue: _i25.Future<int>.value(0),
      ) as _i25.Future<int>);
  @override
  _i25.Future<void> updateMemberListOfMUC(
    _i3.Uid? mucUid,
    List<_i65.Member>? members,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemberListOfMUC,
          [
            mucUid,
            members,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i11.Role getRole(_i70.MucRole? role) => (super.noSuchMethod(
        Invocation.method(
          #getRole,
          [role],
        ),
        returnValue: _FakeRole_10(
          this,
          Invocation.method(
            #getRole,
            [role],
          ),
        ),
      ) as _i11.Role);
  @override
  _i70.MucRole getLocalRole(_i11.Role? role) => (super.noSuchMethod(
        Invocation.method(
          #getLocalRole,
          [role],
        ),
        returnValue: _i70.MucRole.NONE,
      ) as _i70.MucRole);
  @override
  _i25.Future<List<_i61.UidIdName?>> getFilteredMember(
    String? roomUid, {
    String? query,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredMember,
          [roomUid],
          {#query: query},
        ),
        returnValue:
            _i25.Future<List<_i61.UidIdName?>>.value(<_i61.UidIdName?>[]),
      ) as _i25.Future<List<_i61.UidIdName?>>);
  @override
  _i71.MucType pbMucTypeToHiveMucType(_i12.ChannelType? channelType) =>
      (super.noSuchMethod(
        Invocation.method(
          #pbMucTypeToHiveMucType,
          [channelType],
        ),
        returnValue: _i71.MucType.Private,
      ) as _i71.MucType);
  @override
  _i12.ChannelType hiveMucTypeToPbMucType(_i71.MucType? mucType) =>
      (super.noSuchMethod(
        Invocation.method(
          #hiveMucTypeToPbMucType,
          [mucType],
        ),
        returnValue: _FakeChannelType_11(
          this,
          Invocation.method(
            #hiveMucTypeToPbMucType,
            [mucType],
          ),
        ),
      ) as _i12.ChannelType);
}

/// A class which mocks [BotRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockBotRepo extends _i1.Mock implements _i72.BotRepo {
  MockBotRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i13.BotInfo> fetchBotInfo(_i3.Uid? botUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBotInfo,
          [botUid],
        ),
        returnValue: _i25.Future<_i13.BotInfo>.value(_FakeBotInfo_12(
          this,
          Invocation.method(
            #fetchBotInfo,
            [botUid],
          ),
        )),
      ) as _i25.Future<_i13.BotInfo>);
  @override
  _i25.Future<_i73.CallbackQueryRes?> sendCallbackQuery({
    String? data = r'',
    int? id,
    required _i3.Uid? to,
    String? pinCode,
    String? packetId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCallbackQuery,
          [],
          {
            #data: data,
            #id: id,
            #to: to,
            #pinCode: pinCode,
            #packetId: packetId,
          },
        ),
        returnValue: _i25.Future<_i73.CallbackQueryRes?>.value(),
      ) as _i25.Future<_i73.CallbackQueryRes?>);
  @override
  _i25.Future<void> handleInlineMarkUpMessageCallBack(
    _i28.Message? message,
    _i74.InlineKeyboardButton? button,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleInlineMarkUpMessageCallBack,
          [
            message,
            button,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i13.BotInfo?> getBotInfo(_i3.Uid? botUid) => (super.noSuchMethod(
        Invocation.method(
          #getBotInfo,
          [botUid],
        ),
        returnValue: _i25.Future<_i13.BotInfo?>.value(),
      ) as _i25.Future<_i13.BotInfo?>);
}

/// A class which mocks [CustomNotificationDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomNotificationDao extends _i1.Mock
    implements _i75.CustomNotificationDao {
  MockCustomNotificationDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<bool> HaveCustomNotificationSound(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #HaveCustomNotificationSound,
          [uid],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  _i25.Future<void> setCustomNotificationSound(
    String? uid,
    String? fileName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCustomNotificationSound,
          [
            uid,
            fileName,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Stream<String> watchCustomNotificationSound(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchCustomNotificationSound,
          [uid],
        ),
        returnValue: _i25.Stream<String>.empty(),
      ) as _i25.Stream<String>);
  @override
  _i25.Future<String> getCustomNotificationSound(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomNotificationSound,
          [uid],
        ),
        returnValue: _i25.Future<String>.value(''),
      ) as _i25.Future<String>);
}

/// A class which mocks [MediaDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaDao extends _i1.Mock implements _i76.MediaDao {
  MockMediaDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<List<_i77.Media>> get(
    String? roomId,
    _i78.MediaType? type,
    int? limit,
    int? offset,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            roomId,
            type,
            limit,
            offset,
          ],
        ),
        returnValue: _i25.Future<List<_i77.Media>>.value(<_i77.Media>[]),
      ) as _i25.Future<List<_i77.Media>>);
  @override
  _i25.Future<List<_i77.Media>> getByRoomIdAndType(
    String? roomUid,
    _i78.MediaType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByRoomIdAndType,
          [
            roomUid,
            type,
          ],
        ),
        returnValue: _i25.Future<List<_i77.Media>>.value(<_i77.Media>[]),
      ) as _i25.Future<List<_i77.Media>>);
  @override
  _i25.Future<dynamic> save(_i77.Media? media) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [media],
        ),
        returnValue: _i25.Future<dynamic>.value(),
      ) as _i25.Future<dynamic>);
  @override
  _i25.Future<int?> getIndexOfMedia(
    String? roomUid,
    int? messageId,
    _i78.MediaType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIndexOfMedia,
          [
            roomUid,
            messageId,
            type,
          ],
        ),
        returnValue: _i25.Future<int?>.value(),
      ) as _i25.Future<int?>);
  @override
  _i25.Stream<int> getIndexOfMediaAsStream(
    String? roomUid,
    int? messageId,
    _i78.MediaType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIndexOfMediaAsStream,
          [
            roomUid,
            messageId,
            type,
          ],
        ),
        returnValue: _i25.Stream<int>.empty(),
      ) as _i25.Stream<int>);
  @override
  _i25.Future<void> deleteMedia(
    String? roomId,
    int? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMedia,
          [
            roomId,
            messageId,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<dynamic> clear(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [roomId],
        ),
        returnValue: _i25.Future<dynamic>.value(),
      ) as _i25.Future<dynamic>);
}

/// A class which mocks [MediaRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaRepo extends _i1.Mock implements _i79.MediaRepo {
  MockMediaRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<void> fetchMediaMetaData(
    _i3.Uid? uid, {
    bool? updateAllMedia = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMediaMetaData,
          [uid],
          {#updateAllMedia: updateAllMedia},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void saveMediaMetaData(_i80.MediaMetaData? metaData) => super.noSuchMethod(
        Invocation.method(
          #saveMediaMetaData,
          [metaData],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<List<_i77.Media>?> getMediaAutoPlayListPageByMessageId({
    required int? messageId,
    required String? roomUid,
    required int? messageTime,
    _i78.MediaType? type = _i78.MediaType.MUSIC,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaAutoPlayListPageByMessageId,
          [],
          {
            #messageId: messageId,
            #roomUid: roomUid,
            #messageTime: messageTime,
            #type: type,
          },
        ),
        returnValue: _i25.Future<List<_i77.Media>?>.value(),
      ) as _i25.Future<List<_i77.Media>?>);
  @override
  _i25.Future<List<_i77.Media>?> getMediaAutoPlayListPageByIndex({
    required String? roomUid,
    required int? mediaIndex,
    _i78.MediaType? type = _i78.MediaType.MUSIC,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaAutoPlayListPageByIndex,
          [],
          {
            #roomUid: roomUid,
            #mediaIndex: mediaIndex,
            #type: type,
          },
        ),
        returnValue: _i25.Future<List<_i77.Media>?>.value(),
      ) as _i25.Future<List<_i77.Media>?>);
  @override
  _i25.Future<_i80.MediaMetaData?> getMediaMetaData(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaMetaData,
          [roomUid],
        ),
        returnValue: _i25.Future<_i80.MediaMetaData?>.value(),
      ) as _i25.Future<_i80.MediaMetaData?>);
  @override
  _i25.Future<void> updateMediaMetaData(
    _i3.Uid? roomUid,
    _i14.GetMediaMetadataRes? mediaResponse,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMediaMetaData,
          [
            roomUid,
            mediaResponse,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void checkNeedFetchMedia(
    String? roomUid,
    _i80.MediaMetaData? oldMediaMetaData,
    _i14.GetMediaMetadataRes? getMediaMetadataRes,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #checkNeedFetchMedia,
          [
            roomUid,
            oldMediaMetaData,
            getMediaMetadataRes,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<dynamic> fetchLastMedia(
    String? roomUid,
    int? imagesCount,
    _i14.FetchMediasReq_MediaType? mediaType,
    int? allImageCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchLastMedia,
          [
            roomUid,
            imagesCount,
            mediaType,
            allImageCount,
          ],
        ),
        returnValue: _i25.Future<dynamic>.value(),
      ) as _i25.Future<dynamic>);
  @override
  _i25.Stream<_i80.MediaMetaData?> getMediasMetaDataCountFromDB(
          _i3.Uid? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediasMetaDataCountFromDB,
          [roomId],
        ),
        returnValue: _i25.Stream<_i80.MediaMetaData?>.empty(),
      ) as _i25.Stream<_i80.MediaMetaData?>);
  @override
  _i25.Future<List<_i77.Media>> getLastMediasList(
    _i3.Uid? roomId,
    _i14.FetchMediasReq_MediaType? mediaType,
    int? pointer,
    _i14.FetchMediasReq_FetchingDirectionType? directionType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastMediasList,
          [
            roomId,
            mediaType,
            pointer,
            directionType,
          ],
        ),
        returnValue: _i25.Future<List<_i77.Media>>.value(<_i77.Media>[]),
      ) as _i25.Future<List<_i77.Media>>);
  @override
  _i78.MediaType findFetchedMediaType(
          _i14.FetchMediasReq_MediaType? mediaType) =>
      (super.noSuchMethod(
        Invocation.method(
          #findFetchedMediaType,
          [mediaType],
        ),
        returnValue: _i78.MediaType.IMAGE,
      ) as _i78.MediaType);
  @override
  _i14.FetchMediasReq_MediaType convertType(_i78.MediaType? mediaType) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertType,
          [mediaType],
        ),
        returnValue: _FakeFetchMediasReq_MediaType_13(
          this,
          Invocation.method(
            #convertType,
            [mediaType],
          ),
        ),
      ) as _i14.FetchMediasReq_MediaType);
  @override
  _i25.Future<List<_i77.Media>?> getMediaPage(
    String? roomUid,
    _i78.MediaType? type,
    int? page,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaPage,
          [
            roomUid,
            type,
            page,
            index,
          ],
        ),
        returnValue: _i25.Future<List<_i77.Media>?>.value(),
      ) as _i25.Future<List<_i77.Media>?>);
  @override
  _i25.Future<List<_i77.Media>?> fetchMoreMedia(
    String? roomUid,
    _i14.FetchMediasReq_MediaType? mediaType,
    int? pointer, {
    _i14.FetchMediasReq_FetchingDirectionType? fetchingDirectionType =
        _i14.FetchMediasReq_FetchingDirectionType.BACKWARD_FETCH,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoreMedia,
          [
            roomUid,
            mediaType,
            pointer,
          ],
          {#fetchingDirectionType: fetchingDirectionType},
        ),
        returnValue: _i25.Future<List<_i77.Media>?>.value(),
      ) as _i25.Future<List<_i77.Media>?>);
  @override
  String findFetchedMediaJson(_i81.Media? media) => (super.noSuchMethod(
        Invocation.method(
          #findFetchedMediaJson,
          [media],
        ),
        returnValue: '',
      ) as String);
  @override
  _i25.Future<void> updateMediaFile(_i28.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMediaFile,
          [message],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i78.MediaType loadTypeFromString(String? type) => (super.noSuchMethod(
        Invocation.method(
          #loadTypeFromString,
          [type],
        ),
        returnValue: _i78.MediaType.IMAGE,
      ) as _i78.MediaType);
}

/// A class which mocks [MediaMetaDataDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaMetaDataDao extends _i1.Mock implements _i82.MediaMetaDataDao {
  MockMediaMetaDataDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<dynamic> save(_i80.MediaMetaData? mediaMetaData) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [mediaMetaData],
        ),
        returnValue: _i25.Future<dynamic>.value(),
      ) as _i25.Future<dynamic>);
  @override
  _i25.Stream<_i80.MediaMetaData?> get(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [roomUid],
        ),
        returnValue: _i25.Stream<_i80.MediaMetaData?>.empty(),
      ) as _i25.Stream<_i80.MediaMetaData?>);
  @override
  _i25.Future<_i80.MediaMetaData?> getAsFuture(String? roomUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAsFuture,
          [roomUid],
        ),
        returnValue: _i25.Future<_i80.MediaMetaData?>.value(),
      ) as _i25.Future<_i80.MediaMetaData?>);
  @override
  _i25.Future<dynamic> clear(String? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [roomUid],
        ),
        returnValue: _i25.Future<dynamic>.value(),
      ) as _i25.Future<dynamic>);
}

/// A class which mocks [CallService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallService extends _i1.Mock implements _i83.CallService {
  MockCallService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.BehaviorSubject<_i84.CallEvents> get callEvents => (super.noSuchMethod(
        Invocation.getter(#callEvents),
        returnValue: _FakeBehaviorSubject_2<_i84.CallEvents>(
          this,
          Invocation.getter(#callEvents),
        ),
      ) as _i4.BehaviorSubject<_i84.CallEvents>);
  @override
  bool get shouldRemoveData => (super.noSuchMethod(
        Invocation.getter(#shouldRemoveData),
        returnValue: false,
      ) as bool);
  @override
  set shouldRemoveData(bool? _shouldRemoveData) => super.noSuchMethod(
        Invocation.setter(
          #shouldRemoveData,
          _shouldRemoveData,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get isCallStart => (super.noSuchMethod(
        Invocation.getter(#isCallStart),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#isCallStart),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  bool get isInitRenderer => (super.noSuchMethod(
        Invocation.getter(#isInitRenderer),
        returnValue: false,
      ) as bool);
  @override
  set isInitRenderer(bool? _isInitRenderer) => super.noSuchMethod(
        Invocation.setter(
          #isInitRenderer,
          _isInitRenderer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isHole => (super.noSuchMethod(
        Invocation.getter(#isHole),
        returnValue: false,
      ) as bool);
  @override
  set isHole(bool? _isHole) => super.noSuchMethod(
        Invocation.setter(
          #isHole,
          _isHole,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i83.UserCallState get getUserCallState => (super.noSuchMethod(
        Invocation.getter(#getUserCallState),
        returnValue: _i83.UserCallState.IN_GROUP_CALL,
      ) as _i83.UserCallState);
  @override
  _i3.Uid get getRoomUid => (super.noSuchMethod(
        Invocation.getter(#getRoomUid),
        returnValue: _FakeUid_1(
          this,
          Invocation.getter(#getRoomUid),
        ),
      ) as _i3.Uid);
  @override
  String get getCallId => (super.noSuchMethod(
        Invocation.getter(#getCallId),
        returnValue: '',
      ) as String);
  @override
  bool get isHangedUp => (super.noSuchMethod(
        Invocation.getter(#isHangedUp),
        returnValue: false,
      ) as bool);
  @override
  _i15.RTCVideoRenderer get getLocalRenderer => (super.noSuchMethod(
        Invocation.getter(#getLocalRenderer),
        returnValue: _FakeRTCVideoRenderer_14(
          this,
          Invocation.getter(#getLocalRenderer),
        ),
      ) as _i15.RTCVideoRenderer);
  @override
  _i15.RTCVideoRenderer get getRemoteRenderer => (super.noSuchMethod(
        Invocation.getter(#getRemoteRenderer),
        returnValue: _FakeRTCVideoRenderer_14(
          this,
          Invocation.getter(#getRemoteRenderer),
        ),
      ) as _i15.RTCVideoRenderer);
  @override
  set setUserCallState(_i83.UserCallState? cs) => super.noSuchMethod(
        Invocation.setter(
          #setUserCallState,
          cs,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set setRoomUid(_i3.Uid? ru) => super.noSuchMethod(
        Invocation.setter(
          #setRoomUid,
          ru,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set setCallId(String? callId) => super.noSuchMethod(
        Invocation.setter(
          #setCallId,
          callId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set setCallHangedUp(bool? isHangedUp) => super.noSuchMethod(
        Invocation.setter(
          #setCallHangedUp,
          isHangedUp,
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCallStart({required bool? callStart}) => super.noSuchMethod(
        Invocation.method(
          #setCallStart,
          [],
          {#callStart: callStart},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addCallEvent(_i84.CallEvents? event) => super.noSuchMethod(
        Invocation.method(
          #addCallEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> saveCallOnDb(_i85.CurrentCallInfo? callInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCallOnDb,
          [callInfo],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Stream<_i85.CurrentCallInfo?> watchCurrentCall() => (super.noSuchMethod(
        Invocation.method(
          #watchCurrentCall,
          [],
        ),
        returnValue: _i25.Stream<_i85.CurrentCallInfo?>.empty(),
      ) as _i25.Stream<_i85.CurrentCallInfo?>);
  @override
  _i25.Future<void> removeCallFromDb() => (super.noSuchMethod(
        Invocation.method(
          #removeCallFromDb,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i85.CurrentCallInfo?> loadCurrentCall() => (super.noSuchMethod(
        Invocation.method(
          #loadCurrentCall,
          [],
        ),
        returnValue: _i25.Future<_i85.CurrentCallInfo?>.value(),
      ) as _i25.Future<_i85.CurrentCallInfo?>);
  @override
  _i25.Future<void> initRenderer() => (super.noSuchMethod(
        Invocation.method(
          #initRenderer,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i86.CallStatus findCallEventStatusProto(
          _i16.CallEvent_CallStatus? eventCallStatus) =>
      (super.noSuchMethod(
        Invocation.method(
          #findCallEventStatusProto,
          [eventCallStatus],
        ),
        returnValue: _i86.CallStatus.CREATED,
      ) as _i86.CallStatus);
  @override
  _i87.CallType findCallEventType(_i16.CallEvent_CallType? eventCallType) =>
      (super.noSuchMethod(
        Invocation.method(
          #findCallEventType,
          [eventCallType],
        ),
        returnValue: _i87.CallType.VIDEO,
      ) as _i87.CallType);
  @override
  _i16.CallEvent_CallType findProtoCallEventType(
          _i87.CallType? eventCallType) =>
      (super.noSuchMethod(
        Invocation.method(
          #findProtoCallEventType,
          [eventCallType],
        ),
        returnValue: _FakeCallEvent_CallType_15(
          this,
          Invocation.method(
            #findProtoCallEventType,
            [eventCallType],
          ),
        ),
      ) as _i16.CallEvent_CallType);
  @override
  _i16.CallEvent_CallStatus findCallEventStatusDB(
          _i86.CallStatus? eventCallStatus) =>
      (super.noSuchMethod(
        Invocation.method(
          #findCallEventStatusDB,
          [eventCallStatus],
        ),
        returnValue: _FakeCallEvent_CallStatus_16(
          this,
          Invocation.method(
            #findCallEventStatusDB,
            [eventCallStatus],
          ),
        ),
      ) as _i16.CallEvent_CallStatus);
  @override
  String writeCallEventsToJson(_i84.CallEvents? event) => (super.noSuchMethod(
        Invocation.method(
          #writeCallEventsToJson,
          [event],
        ),
        returnValue: '',
      ) as String);
  @override
  _i25.Future<void> clearCallData({
    bool? forceToClearData = false,
    bool? isSaveCallData = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCallData,
          [],
          {
            #forceToClearData: forceToClearData,
            #isSaveCallData: isSaveCallData,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> disposeCallData({bool? forceToClearData = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #disposeCallData,
          [],
          {#forceToClearData: forceToClearData},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  bool isHiddenCallBottomRow(_i88.CallStatus? callStatus) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHiddenCallBottomRow,
          [callStatus],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool checkIncomingCallIsRepeated(
    String? callId,
    String? roomUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIncomingCallIsRepeated,
          [
            callId,
            roomUid,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  void saveLastCallStatusOnSharedPrefCallSlot(_i89.CallData? data) =>
      super.noSuchMethod(
        Invocation.method(
          #saveLastCallStatusOnSharedPrefCallSlot,
          [data],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NotificationServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationServices extends _i1.Mock
    implements _i90.NotificationServices {
  MockNotificationServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void notifyOutgoingMessage(String? roomUid) => super.noSuchMethod(
        Invocation.method(
          #notifyOutgoingMessage,
          [roomUid],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyIncomingMessage(
    _i48.Message? message,
    String? roomUid, {
    String? roomName,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyIncomingMessage,
          [
            message,
            roomUid,
          ],
          {#roomName: roomName},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> notifyIncomingCall(
    String? roomUid, {
    String? roomName,
    String? callEventJson,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyIncomingCall,
          [roomUid],
          {
            #roomName: roomName,
            #callEventJson: callEventJson,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void cancelRoomNotifications(String? roomUid) => super.noSuchMethod(
        Invocation.method(
          #cancelRoomNotifications,
          [roomUid],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void cancelNotificationById(
    int? id,
    String? roomUid,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #cancelNotificationById,
          [
            id,
            roomUid,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> editNotificationById(
    int? id,
    String? roomUid,
    _i48.Message? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editNotificationById,
          [
            id,
            roomUid,
            message,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void cancelAllNotifications() => super.noSuchMethod(
        Invocation.method(
          #cancelAllNotifications,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LastActivityDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockLastActivityDao extends _i1.Mock implements _i91.LastActivityDao {
  MockLastActivityDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i92.LastActivity?> get(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [uid],
        ),
        returnValue: _i25.Future<_i92.LastActivity?>.value(),
      ) as _i25.Future<_i92.LastActivity?>);
  @override
  _i25.Stream<_i92.LastActivity?> watch(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [uid],
        ),
        returnValue: _i25.Stream<_i92.LastActivity?>.empty(),
      ) as _i25.Stream<_i92.LastActivity?>);
  @override
  _i25.Future<void> save(_i92.LastActivity? lastActivity) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [lastActivity],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [MucDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMucDao extends _i1.Mock implements _i93.MucDao {
  MockMucDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<_i69.Muc?> get(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [uid],
        ),
        returnValue: _i25.Future<_i69.Muc?>.value(),
      ) as _i25.Future<_i69.Muc?>);
  @override
  _i25.Stream<_i69.Muc?> watch(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [uid],
        ),
        returnValue: _i25.Stream<_i69.Muc?>.empty(),
      ) as _i25.Stream<_i69.Muc?>);
  @override
  _i25.Future<void> save(_i69.Muc? muc) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [muc],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> delete(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> updateMuc({
    required String? uid,
    String? info,
    List<int>? pinMessagesIdList,
    int? lastCanceledPinMessageId,
    int? population,
    String? id,
    String? token,
    String? name,
    _i71.MucType? mucType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMuc,
          [],
          {
            #uid: uid,
            #info: info,
            #pinMessagesIdList: pinMessagesIdList,
            #lastCanceledPinMessageId: lastCanceledPinMessageId,
            #population: population,
            #id: id,
            #token: token,
            #name: name,
            #mucType: mucType,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i65.Member?> getMember(
    String? mucUid,
    String? memberUid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMember,
          [
            mucUid,
            memberUid,
          ],
        ),
        returnValue: _i25.Future<_i65.Member?>.value(),
      ) as _i25.Future<_i65.Member?>);
  @override
  _i25.Future<List<_i65.Member?>> getAllMembers(String? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMembers,
          [mucUid],
        ),
        returnValue: _i25.Future<List<_i65.Member?>>.value(<_i65.Member?>[]),
      ) as _i25.Future<List<_i65.Member?>>);
  @override
  _i25.Stream<List<_i65.Member?>> watchAllMembers(String? mucUid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllMembers,
          [mucUid],
        ),
        returnValue: _i25.Stream<List<_i65.Member?>>.empty(),
      ) as _i25.Stream<List<_i65.Member?>>);
  @override
  _i25.Future<void> saveMember(_i65.Member? member) => (super.noSuchMethod(
        Invocation.method(
          #saveMember,
          [member],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> deleteMember(_i65.Member? member) => (super.noSuchMethod(
        Invocation.method(
          #deleteMember,
          [member],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> deleteAllMembers(String? mucUid) => (super.noSuchMethod(
        Invocation.method(
          #deleteAllMembers,
          [mucUid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [Settings].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettings extends _i1.Mock implements _i94.Settings {
  MockSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.BatteryMonitor get batteryMonitor => (super.noSuchMethod(
        Invocation.getter(#batteryMonitor),
        returnValue: _FakeBatteryMonitor_17(
          this,
          Invocation.getter(#batteryMonitor),
        ),
      ) as _i17.BatteryMonitor);
  @override
  _i17.EnumPersistent<_i17.PerformanceMode> get performanceMode =>
      (super.noSuchMethod(
        Invocation.getter(#performanceMode),
        returnValue: _FakeEnumPersistent_18<_i17.PerformanceMode>(
          this,
          Invocation.getter(#performanceMode),
        ),
      ) as _i17.EnumPersistent<_i17.PerformanceMode>);
  @override
  _i17.IntPersistent get powerSaverBatteryLevel => (super.noSuchMethod(
        Invocation.getter(#powerSaverBatteryLevel),
        returnValue: _FakeIntPersistent_19(
          this,
          Invocation.getter(#powerSaverBatteryLevel),
        ),
      ) as _i17.IntPersistent);
  @override
  _i17.StringPersistent get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _FakeStringPersistent_20(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as _i17.StringPersistent);
  @override
  _i17.StringPersistent get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: _FakeStringPersistent_20(
          this,
          Invocation.getter(#refreshToken),
        ),
      ) as _i17.StringPersistent);
  @override
  _i17.StringPersistent get localPassword => (super.noSuchMethod(
        Invocation.getter(#localPassword),
        returnValue: _FakeStringPersistent_20(
          this,
          Invocation.getter(#localPassword),
        ),
      ) as _i17.StringPersistent);
  @override
  _i17.StringPersistent get applicationVersion => (super.noSuchMethod(
        Invocation.getter(#applicationVersion),
        returnValue: _FakeStringPersistent_20(
          this,
          Invocation.getter(#applicationVersion),
        ),
      ) as _i17.StringPersistent);
  @override
  _i17.IntPersistent get dbHashCode => (super.noSuchMethod(
        Invocation.getter(#dbHashCode),
        returnValue: _FakeIntPersistent_19(
          this,
          Invocation.getter(#dbHashCode),
        ),
      ) as _i17.IntPersistent);
  @override
  _i17.IntPersistent get themeColorIndex => (super.noSuchMethod(
        Invocation.getter(#themeColorIndex),
        returnValue: _FakeIntPersistent_19(
          this,
          Invocation.getter(#themeColorIndex),
        ),
      ) as _i17.IntPersistent);
  @override
  _i17.IntPersistent get backgroundPatternIndex => (super.noSuchMethod(
        Invocation.getter(#backgroundPatternIndex),
        returnValue: _FakeIntPersistent_19(
          this,
          Invocation.getter(#backgroundPatternIndex),
        ),
      ) as _i17.IntPersistent);
  @override
  _i17.DoublePersistent get textScale => (super.noSuchMethod(
        Invocation.getter(#textScale),
        returnValue: _FakeDoublePersistent_21(
          this,
          Invocation.getter(#textScale),
        ),
      ) as _i17.DoublePersistent);
  @override
  _i17.BooleanPersistent get sendByEnter => (super.noSuchMethod(
        Invocation.getter(#sendByEnter),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#sendByEnter),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get allRoomFetched => (super.noSuchMethod(
        Invocation.getter(#allRoomFetched),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#allRoomFetched),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get foregroundNotificationIsEnabled =>
      (super.noSuchMethod(
        Invocation.getter(#foregroundNotificationIsEnabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#foregroundNotificationIsEnabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get showShowcasePage => (super.noSuchMethod(
        Invocation.getter(#showShowcasePage),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#showShowcasePage),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get firebaseSettingIsSet => (super.noSuchMethod(
        Invocation.getter(#firebaseSettingIsSet),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#firebaseSettingIsSet),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.StringPersistent get firebaseToken => (super.noSuchMethod(
        Invocation.getter(#firebaseToken),
        returnValue: _FakeStringPersistent_20(
          this,
          Invocation.getter(#firebaseToken),
        ),
      ) as _i17.StringPersistent);
  @override
  _i17.JsonMapPersistent<_i95.WindowFrame> get windowsFrame =>
      (super.noSuchMethod(
        Invocation.getter(#windowsFrame),
        returnValue: _FakeJsonMapPersistent_23<_i95.WindowFrame>(
          this,
          Invocation.getter(#windowsFrame),
        ),
      ) as _i17.JsonMapPersistent<_i95.WindowFrame>);
  @override
  _i17.ProtoPersistent<_i48.MessageDeliveryAck> get lastMessageDeliveryAck =>
      (super.noSuchMethod(
        Invocation.getter(#lastMessageDeliveryAck),
        returnValue: _FakeProtoPersistent_24<_i48.MessageDeliveryAck>(
          this,
          Invocation.getter(#lastMessageDeliveryAck),
        ),
      ) as _i17.ProtoPersistent<_i48.MessageDeliveryAck>);
  @override
  _i17.BooleanPersistent get showTextsJustified => (super.noSuchMethod(
        Invocation.getter(#showTextsJustified),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#showTextsJustified),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.JsonMapPersistent<_i89.CallData> get LAST_CALL_DATA_SLOT_1 =>
      (super.noSuchMethod(
        Invocation.getter(#LAST_CALL_DATA_SLOT_1),
        returnValue: _FakeJsonMapPersistent_23<_i89.CallData>(
          this,
          Invocation.getter(#LAST_CALL_DATA_SLOT_1),
        ),
      ) as _i17.JsonMapPersistent<_i89.CallData>);
  @override
  _i17.JsonMapPersistent<_i89.CallData> get LAST_CALL_DATA_SLOT_2 =>
      (super.noSuchMethod(
        Invocation.getter(#LAST_CALL_DATA_SLOT_2),
        returnValue: _FakeJsonMapPersistent_23<_i89.CallData>(
          this,
          Invocation.getter(#LAST_CALL_DATA_SLOT_2),
        ),
      ) as _i17.JsonMapPersistent<_i89.CallData>);
  @override
  _i17.JsonMapPersistent<_i89.CallData> get LAST_CALL_DATA_SLOT_3 =>
      (super.noSuchMethod(
        Invocation.getter(#LAST_CALL_DATA_SLOT_3),
        returnValue: _FakeJsonMapPersistent_23<_i89.CallData>(
          this,
          Invocation.getter(#LAST_CALL_DATA_SLOT_3),
        ),
      ) as _i17.JsonMapPersistent<_i89.CallData>);
  @override
  _i17.BooleanPersistent get showColorfulMessages => (super.noSuchMethod(
        Invocation.getter(#showColorfulMessages),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#showColorfulMessages),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get showEvents => (super.noSuchMethod(
        Invocation.getter(#showEvents),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#showEvents),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get playInChatSounds => (super.noSuchMethod(
        Invocation.getter(#playInChatSounds),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#playInChatSounds),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get isAllNotificationDisabled => (super.noSuchMethod(
        Invocation.getter(#isAllNotificationDisabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#isAllNotificationDisabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get isNotificationAdvanceModeDisabled =>
      (super.noSuchMethod(
        Invocation.getter(#isNotificationAdvanceModeDisabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#isNotificationAdvanceModeDisabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get isAutoNightModeEnable => (super.noSuchMethod(
        Invocation.getter(#isAutoNightModeEnable),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#isAutoNightModeEnable),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get showDeveloperPage => (super.noSuchMethod(
        Invocation.getter(#showDeveloperPage),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#showDeveloperPage),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get themeIsDark => (super.noSuchMethod(
        Invocation.getter(#themeIsDark),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#themeIsDark),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get showDeveloperDetails => (super.noSuchMethod(
        Invocation.getter(#showDeveloperDetails),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#showDeveloperDetails),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.DoublePersistent get keyboardSizePortrait => (super.noSuchMethod(
        Invocation.getter(#keyboardSizePortrait),
        returnValue: _FakeDoublePersistent_21(
          this,
          Invocation.getter(#keyboardSizePortrait),
        ),
      ) as _i17.DoublePersistent);
  @override
  _i17.DoublePersistent get keyboardSizeLandscape => (super.noSuchMethod(
        Invocation.getter(#keyboardSizeLandscape),
        returnValue: _FakeDoublePersistent_21(
          this,
          Invocation.getter(#keyboardSizeLandscape),
        ),
      ) as _i17.DoublePersistent);
  @override
  _i17.IntPersistent get iceCandidateNumbers => (super.noSuchMethod(
        Invocation.getter(#iceCandidateNumbers),
        returnValue: _FakeIntPersistent_19(
          this,
          Invocation.getter(#iceCandidateNumbers),
        ),
      ) as _i17.IntPersistent);
  @override
  _i17.IntPersistent get iceCandidateTimeLimit => (super.noSuchMethod(
        Invocation.getter(#iceCandidateTimeLimit),
        returnValue: _FakeIntPersistent_19(
          this,
          Invocation.getter(#iceCandidateTimeLimit),
        ),
      ) as _i17.IntPersistent);
  @override
  _i17.BooleanPersistent get localStunServerIsEnabled => (super.noSuchMethod(
        Invocation.getter(#localStunServerIsEnabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#localStunServerIsEnabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get localTurnServerIsEnabled => (super.noSuchMethod(
        Invocation.getter(#localTurnServerIsEnabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#localTurnServerIsEnabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get googleStunServerIsEnabled => (super.noSuchMethod(
        Invocation.getter(#googleStunServerIsEnabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#googleStunServerIsEnabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get googleTurnServerIsEnabled => (super.noSuchMethod(
        Invocation.getter(#googleTurnServerIsEnabled),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#googleTurnServerIsEnabled),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.EnumPersistent<_i58.Language> get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: _FakeEnumPersistent_18<_i58.Language>(
          this,
          Invocation.getter(#language),
        ),
      ) as _i17.EnumPersistent<_i58.Language>);
  @override
  _i17.EnumPersistent<_i26.Level> get logLevel => (super.noSuchMethod(
        Invocation.getter(#logLevel),
        returnValue: _FakeEnumPersistent_18<_i26.Level>(
          this,
          Invocation.getter(#logLevel),
        ),
      ) as _i17.EnumPersistent<_i26.Level>);
  @override
  _i17.BooleanPersistent get logInFileEnable => (super.noSuchMethod(
        Invocation.getter(#logInFileEnable),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#logInFileEnable),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.BooleanPersistent get useBadCertificateConnection => (super.noSuchMethod(
        Invocation.getter(#useBadCertificateConnection),
        returnValue: _FakeBooleanPersistent_22(
          this,
          Invocation.getter(#useBadCertificateConnection),
        ),
      ) as _i17.BooleanPersistent);
  @override
  _i17.StringPersistent get hostSetByUser => (super.noSuchMethod(
        Invocation.getter(#hostSetByUser),
        returnValue: _FakeStringPersistent_20(
          this,
          Invocation.getter(#hostSetByUser),
        ),
      ) as _i17.StringPersistent);
  @override
  _i17.OncePersistent get onceShowNewVersionInformation => (super.noSuchMethod(
        Invocation.getter(#onceShowNewVersionInformation),
        returnValue: _FakeOncePersistent_25(
          this,
          Invocation.getter(#onceShowNewVersionInformation),
        ),
      ) as _i17.OncePersistent);
  @override
  _i17.OncePersistent get onceShowContactDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowContactDialog),
        returnValue: _FakeOncePersistent_25(
          this,
          Invocation.getter(#onceShowContactDialog),
        ),
      ) as _i17.OncePersistent);
  @override
  _i17.OncePersistent get onceShowMicrophoneDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowMicrophoneDialog),
        returnValue: _FakeOncePersistent_25(
          this,
          Invocation.getter(#onceShowMicrophoneDialog),
        ),
      ) as _i17.OncePersistent);
  @override
  _i17.OncePersistent get onceShowCameraDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowCameraDialog),
        returnValue: _FakeOncePersistent_25(
          this,
          Invocation.getter(#onceShowCameraDialog),
        ),
      ) as _i17.OncePersistent);
  @override
  _i17.OncePersistent get onceShowMediaLibraryDialog => (super.noSuchMethod(
        Invocation.getter(#onceShowMediaLibraryDialog),
        returnValue: _FakeOncePersistent_25(
          this,
          Invocation.getter(#onceShowMediaLibraryDialog),
        ),
      ) as _i17.OncePersistent);
  @override
  _i17.PerformanceBooleanPersistent get showLinkPreview => (super.noSuchMethod(
        Invocation.getter(#showLinkPreview),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showLinkPreview),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get repeatAnimatedEmoji =>
      (super.noSuchMethod(
        Invocation.getter(#repeatAnimatedEmoji),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#repeatAnimatedEmoji),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showAnimatedEmoji =>
      (super.noSuchMethod(
        Invocation.getter(#showAnimatedEmoji),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showAnimatedEmoji),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showRoomBackground =>
      (super.noSuchMethod(
        Invocation.getter(#showRoomBackground),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showRoomBackground),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showBlurredComponents =>
      (super.noSuchMethod(
        Invocation.getter(#showBlurredComponents),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showBlurredComponents),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showMessageDetails =>
      (super.noSuchMethod(
        Invocation.getter(#showMessageDetails),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showMessageDetails),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showAnimations => (super.noSuchMethod(
        Invocation.getter(#showAnimations),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showAnimations),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showAnimatedAvatars =>
      (super.noSuchMethod(
        Invocation.getter(#showAnimatedAvatars),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showAnimatedAvatars),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showAvatarImages => (super.noSuchMethod(
        Invocation.getter(#showAvatarImages),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showAvatarImages),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showAvatars => (super.noSuchMethod(
        Invocation.getter(#showAvatars),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showAvatars),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get parseAndShowGoogleEmojis =>
      (super.noSuchMethod(
        Invocation.getter(#parseAndShowGoogleEmojis),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#parseAndShowGoogleEmojis),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i17.PerformanceBooleanPersistent get showWsWithHighFrameRate =>
      (super.noSuchMethod(
        Invocation.getter(#showWsWithHighFrameRate),
        returnValue: _FakePerformanceBooleanPersistent_26(
          this,
          Invocation.getter(#showWsWithHighFrameRate),
        ),
      ) as _i17.PerformanceBooleanPersistent);
  @override
  _i19.BuildContext get appContext => (super.noSuchMethod(
        Invocation.getter(#appContext),
        returnValue: _FakeBuildContext_27(
          this,
          Invocation.getter(#appContext),
        ),
      ) as _i19.BuildContext);
  @override
  _i10.Brightness get brightnessOpposite => (super.noSuchMethod(
        Invocation.getter(#brightnessOpposite),
        returnValue: _i10.Brightness.dark,
      ) as _i10.Brightness);
  @override
  _i20.ThemeScheme get themeScheme => (super.noSuchMethod(
        Invocation.getter(#themeScheme),
        returnValue: _FakeThemeScheme_28(
          this,
          Invocation.getter(#themeScheme),
        ),
      ) as _i20.ThemeScheme);
  @override
  _i19.ThemeData get themeData => (super.noSuchMethod(
        Invocation.getter(#themeData),
        returnValue: _FakeThemeData_29(
          this,
          Invocation.getter(#themeData),
        ),
      ) as _i19.ThemeData);
  @override
  _i22.ExtraThemeData get extraThemeData => (super.noSuchMethod(
        Invocation.getter(#extraThemeData),
        returnValue: _FakeExtraThemeData_30(
          this,
          Invocation.getter(#extraThemeData),
        ),
      ) as _i22.ExtraThemeData);
  @override
  _i23.CorePalette get corePalette => (super.noSuchMethod(
        Invocation.getter(#corePalette),
        returnValue: _FakeCorePalette_31(
          this,
          Invocation.getter(#corePalette),
        ),
      ) as _i23.CorePalette);
  @override
  void reInitialize() => super.noSuchMethod(
        Invocation.method(
          #reInitialize,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateMainContext(_i19.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #updateMainContext,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateHomeContext(_i19.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #updateHomeContext,
          [context],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UrlHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlHandlerService extends _i1.Mock implements _i96.UrlHandlerService {
  MockUrlHandlerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.Future<void> onUrlTap(
    String? uri, {
    bool? openLinkImmediately = false,
    bool? sendDirectly = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onUrlTap,
          [uri],
          {
            #openLinkImmediately: openLinkImmediately,
            #sendDirectly: sendDirectly,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void handleApplicationUri(
    String? url, {
    bool? shareTextMessage = false,
    bool? sendDirectly = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleApplicationUri,
          [url],
          {
            #shareTextMessage: shareTextMessage,
            #sendDirectly: sendDirectly,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isApplicationUrl(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #isApplicationUrl,
          [uri],
        ),
        returnValue: false,
      ) as bool);
  @override
  String normalizeApplicationUrl(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #normalizeApplicationUrl,
          [uri],
        ),
        returnValue: '',
      ) as String);
  @override
  _i25.Future<void> handleIdLink(
    String? node,
    _i97.Categories? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleIdLink,
          [
            node,
            category,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> handleLogin(String? token) => (super.noSuchMethod(
        Invocation.method(
          #handleLogin,
          [token],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> handleAddContact({
    String? firstName,
    String? lastName,
    int? countryCode,
    int? nationalNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleAddContact,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #countryCode: countryCode,
            #nationalNumber: nationalNumber,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> handleSendMsgToBot(
    String? botId,
    String? text, {
    bool? sendDirectly = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSendMsgToBot,
          [
            botId,
            text,
          ],
          {#sendDirectly: sendDirectly},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> handleSendPrivateDateAcceptance(
    String? pdType,
    String? botId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSendPrivateDateAcceptance,
          [
            pdType,
            botId,
            token,
          ],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> handleJoin(
    _i3.Uid? roomUid,
    String? token, {
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleJoin,
          [
            roomUid,
            token,
          ],
          {#name: name},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void handleNormalLink(
    String? uri, {
    bool? openLinkImmediately = false,
    bool? sendDirectly = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleNormalLink,
          [uri],
          {
            #openLinkImmediately: openLinkImmediately,
            #sendDirectly: sendDirectly,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RoutingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoutingService extends _i1.Mock implements _i98.RoutingService {
  MockRoutingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GlobalKey<_i19.NavigatorState> get mainNavigatorState =>
      (super.noSuchMethod(
        Invocation.getter(#mainNavigatorState),
        returnValue: _FakeGlobalKey_32<_i19.NavigatorState>(
          this,
          Invocation.getter(#mainNavigatorState),
        ),
      ) as _i19.GlobalKey<_i19.NavigatorState>);
  @override
  _i4.BehaviorSubject<bool> get shouldScrollToLastMessageInRoom =>
      (super.noSuchMethod(
        Invocation.getter(#shouldScrollToLastMessageInRoom),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#shouldScrollToLastMessageInRoom),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set shouldScrollToLastMessageInRoom(
          _i4.BehaviorSubject<bool>? _shouldScrollToLastMessageInRoom) =>
      super.noSuchMethod(
        Invocation.setter(
          #shouldScrollToLastMessageInRoom,
          _shouldScrollToLastMessageInRoom,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Stream<_i98.RouteEvent> get currentRouteStream => (super.noSuchMethod(
        Invocation.getter(#currentRouteStream),
        returnValue: _i25.Stream<_i98.RouteEvent>.empty(),
      ) as _i25.Stream<_i98.RouteEvent>);
  @override
  void openSettings({bool? popAllBeforePush = false}) => super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
          {#popAllBeforePush: popAllBeforePush},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openLanguageSettings() => super.noSuchMethod(
        Invocation.method(
          #openLanguageSettings,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openPowerSaverSettings() => super.noSuchMethod(
        Invocation.method(
          #openPowerSaverSettings,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openThemeSettings() => super.noSuchMethod(
        Invocation.method(
          #openThemeSettings,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openSecuritySettings() => super.noSuchMethod(
        Invocation.method(
          #openSecuritySettings,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openDeveloperPage() => super.noSuchMethod(
        Invocation.method(
          #openDeveloperPage,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openDevices() => super.noSuchMethod(
        Invocation.method(
          #openDevices,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openAutoDownload() => super.noSuchMethod(
        Invocation.method(
          #openAutoDownload,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openLab() => super.noSuchMethod(
        Invocation.method(
          #openLab,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openContacts() => super.noSuchMethod(
        Invocation.method(
          #openContacts,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openNewContact() => super.noSuchMethod(
        Invocation.method(
          #openNewContact,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openScanQrCode() => super.noSuchMethod(
        Invocation.method(
          #openScanQrCode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCallsList() => super.noSuchMethod(
        Invocation.method(
          #openCallsList,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openShowcase() => super.noSuchMethod(
        Invocation.method(
          #openShowcase,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openConnectionSettingPage() => super.noSuchMethod(
        Invocation.method(
          #openConnectionSettingPage,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getCurrentRoomId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentRoomId,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  void resetCurrentRoom() => super.noSuchMethod(
        Invocation.method(
          #resetCurrentRoom,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openRoom(
    String? roomId, {
    List<_i28.Message>? forwardedMessages = const [],
    List<_i77.Media>? forwardedMedia = const [],
    bool? popAllBeforePush = false,
    _i48.ShareUid? shareUid,
    bool? forceToOpenRoom = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openRoom,
          [roomId],
          {
            #forwardedMessages: forwardedMessages,
            #forwardedMedia: forwardedMedia,
            #popAllBeforePush: popAllBeforePush,
            #shareUid: shareUid,
            #forceToOpenRoom: forceToOpenRoom,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCameraBox({
    dynamic Function(String)? onAvatarSelected,
    required bool? selectAsAvatar,
    required _i3.Uid? roomUid,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openCameraBox,
          [],
          {
            #onAvatarSelected: onAvatarSelected,
            #selectAsAvatar: selectAsAvatar,
            #roomUid: roomUid,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openVideoViewerPage({
    required _i99.File? file,
    required dynamic Function(String)? onSend,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openVideoViewerPage,
          [],
          {
            #file: file,
            #onSend: onSend,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openViewImagePage({
    required String? imagePath,
    String? caption = r'',
    required dynamic Function(String)? onEditEnd,
    dynamic Function(String)? onSend,
    dynamic Function(String)? onTap,
    bool? sendSingleImage = false,
    List<String>? selectedImage,
    bool? forceToShowCaptionTextField = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openViewImagePage,
          [],
          {
            #imagePath: imagePath,
            #caption: caption,
            #onEditEnd: onEditEnd,
            #onSend: onSend,
            #onTap: onTap,
            #sendSingleImage: sendSingleImage,
            #selectedImage: selectedImage,
            #forceToShowCaptionTextField: forceToShowCaptionTextField,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCallScreen(
    _i3.Uid? roomUid, {
    bool? isIncomingCall = false,
    bool? isCallInitialized = false,
    bool? isCallAccepted = false,
    bool? isVideoCall = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openCallScreen,
          [roomUid],
          {
            #isIncomingCall: isIncomingCall,
            #isCallInitialized: isCallInitialized,
            #isCallAccepted: isCallAccepted,
            #isVideoCall: isVideoCall,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openLocation(
    _i44.Location? location,
    _i3.Uid? from,
    _i28.Message? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #openLocation,
          [
            location,
            from,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openProfile(String? roomId) => super.noSuchMethod(
        Invocation.method(
          #openProfile,
          [roomId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<dynamic>? openManageMuc(String? roomId) =>
      (super.noSuchMethod(Invocation.method(
        #openManageMuc,
        [roomId],
      )) as _i25.Future<dynamic>?);
  @override
  void openShowAllAvatars({
    required _i3.Uid? uid,
    required bool? hasPermissionToDeleteAvatar,
    required String? heroTag,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShowAllAvatars,
          [],
          {
            #uid: uid,
            #hasPermissionToDeleteAvatar: hasPermissionToDeleteAvatar,
            #heroTag: heroTag,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openShowAllVideos({
    required String? roomUid,
    required int? messageId,
    int? initIndex,
    _i28.Message? message,
    String? filePath,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShowAllVideos,
          [],
          {
            #roomUid: roomUid,
            #messageId: messageId,
            #initIndex: initIndex,
            #message: message,
            #filePath: filePath,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openShowAllImage({
    required String? uid,
    required int? messageId,
    int? initIndex,
    _i28.Message? message,
    String? filePath,
    dynamic Function()? onEdit,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShowAllImage,
          [],
          {
            #uid: uid,
            #messageId: messageId,
            #initIndex: initIndex,
            #message: message,
            #filePath: filePath,
            #onEdit: onEdit,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCustomNotificationSoundSelection(String? roomId) =>
      super.noSuchMethod(
        Invocation.method(
          #openCustomNotificationSoundSelection,
          [roomId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openAccountSettings({bool? forceToSetName = false}) =>
      super.noSuchMethod(
        Invocation.method(
          #openAccountSettings,
          [],
          {#forceToSetName: forceToSetName},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openMemberSelection({
    required bool? isChannel,
    _i3.Uid? mucUid,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openMemberSelection,
          [],
          {
            #isChannel: isChannel,
            #mucUid: mucUid,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openSelectForwardMessage({
    List<_i28.Message>? forwardedMessages,
    List<_i77.Media>? medias,
    _i48.ShareUid? sharedUid,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openSelectForwardMessage,
          [],
          {
            #forwardedMessages: forwardedMessages,
            #medias: medias,
            #sharedUid: sharedUid,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openAllGroupedRoomsGridPage(
          {required _i100.GroupedRooms? groupedRooms}) =>
      super.noSuchMethod(
        Invocation.method(
          #openAllGroupedRoomsGridPage,
          [],
          {#groupedRooms: groupedRooms},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openGroupInfoDeterminationPage({required bool? isChannel}) =>
      super.noSuchMethod(
        Invocation.method(
          #openGroupInfoDeterminationPage,
          [],
          {#isChannel: isChannel},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openShareInput({
    List<String>? paths = const [],
    String? text = r'',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openShareInput,
          [],
          {
            #paths: paths,
            #text: text,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool notInRoom() => (super.noSuchMethod(
        Invocation.method(
          #notInRoom,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isInRoom(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #isInRoom,
          [roomId],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isInCallRoom() => (super.noSuchMethod(
        Invocation.method(
          #isInCallRoom,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  void popAll() => super.noSuchMethod(
        Invocation.method(
          #popAll,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.PageRouteBuilder<dynamic> customPageRoute(
    _i19.RouteSettings? setting,
    _i19.RoutePageBuilder? builder,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #customPageRoute,
          [
            setting,
            builder,
          ],
        ),
        returnValue: _FakePageRouteBuilder_33<dynamic>(
          this,
          Invocation.method(
            #customPageRoute,
            [
              setting,
              builder,
            ],
          ),
        ),
      ) as _i19.PageRouteBuilder<dynamic>);
  @override
  void registerPreMaybePopScope(
    String? name,
    bool Function()? callback,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerPreMaybePopScope,
          [
            name,
            callback,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void unregisterPreMaybePopScope(String? name) => super.noSuchMethod(
        Invocation.method(
          #unregisterPreMaybePopScope,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pop() => super.noSuchMethod(
        Invocation.method(
          #pop,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool preMaybePopScopeValue() => (super.noSuchMethod(
        Invocation.method(
          #preMaybePopScopeValue,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool maybePop() => (super.noSuchMethod(
        Invocation.method(
          #maybePop,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool canPop() => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i19.Widget outlet(_i19.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #outlet,
          [context],
        ),
        returnValue: _FakeWidget_34(
          this,
          Invocation.method(
            #outlet,
            [context],
          ),
        ),
      ) as _i19.Widget);
  @override
  void selectChatMenu(String? key) => super.noSuchMethod(
        Invocation.method(
          #selectChatMenu,
          [key],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i19.Widget backButtonLeading({_i10.Color? color}) => (super.noSuchMethod(
        Invocation.method(
          #backButtonLeading,
          [],
          {#color: color},
        ),
        returnValue: _FakeWidget_34(
          this,
          Invocation.method(
            #backButtonLeading,
            [],
            {#color: color},
          ),
        ),
      ) as _i19.Widget);
}

/// A class which mocks [CallRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCallRepo extends _i1.Mock implements _i88.CallRepo {
  MockCallRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onLocalStream(dynamic Function(_i15.MediaStream)? _onLocalStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #onLocalStream,
          _onLocalStream,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onAddRemoteStream(
          dynamic Function(_i15.MediaStream)? _onAddRemoteStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #onAddRemoteStream,
          _onAddRemoteStream,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onRemoveRemoteStream(
          dynamic Function(_i15.MediaStream)? _onRemoveRemoteStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #onRemoveRemoteStream,
          _onRemoveRemoteStream,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timerDeclined(_i25.Timer? _timerDeclined) => super.noSuchMethod(
        Invocation.setter(
          #timerDeclined,
          _timerDeclined,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timerResendOffer(_i25.Timer? _timerResendOffer) => super.noSuchMethod(
        Invocation.setter(
          #timerResendOffer,
          _timerResendOffer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timerResendAnswer(_i25.Timer? _timerResendAnswer) => super.noSuchMethod(
        Invocation.setter(
          #timerResendAnswer,
          _timerResendAnswer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timerConnectionFailed(_i25.Timer? _timerConnectionFailed) =>
      super.noSuchMethod(
        Invocation.setter(
          #timerConnectionFailed,
          _timerConnectionFailed,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timerDisconnected(_i25.Timer? _timerDisconnected) => super.noSuchMethod(
        Invocation.setter(
          #timerDisconnected,
          _timerDisconnected,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timerEndCallDispose(_i25.Timer? _timerEndCallDispose) =>
      super.noSuchMethod(
        Invocation.setter(
          #timerEndCallDispose,
          _timerEndCallDispose,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set videoMotivation(_i25.Timer? _videoMotivation) => super.noSuchMethod(
        Invocation.setter(
          #videoMotivation,
          _videoMotivation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<_i101.CountTimer> get callTimer => (super.noSuchMethod(
        Invocation.getter(#callTimer),
        returnValue: _FakeBehaviorSubject_2<_i101.CountTimer>(
          this,
          Invocation.getter(#callTimer),
        ),
      ) as _i4.BehaviorSubject<_i101.CountTimer>);
  @override
  set callTimer(_i4.BehaviorSubject<_i101.CountTimer>? _callTimer) =>
      super.noSuchMethod(
        Invocation.setter(
          #callTimer,
          _callTimer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAccepted => (super.noSuchMethod(
        Invocation.getter(#isAccepted),
        returnValue: false,
      ) as bool);
  @override
  set isAccepted(bool? _isAccepted) => super.noSuchMethod(
        Invocation.setter(
          #isAccepted,
          _isAccepted,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timer(_i25.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<_i88.CallStatus> get callingStatus => (super.noSuchMethod(
        Invocation.getter(#callingStatus),
        returnValue: _FakeBehaviorSubject_2<_i88.CallStatus>(
          this,
          Invocation.getter(#callingStatus),
        ),
      ) as _i4.BehaviorSubject<_i88.CallStatus>);
  @override
  set callingStatus(_i4.BehaviorSubject<_i88.CallStatus>? _callingStatus) =>
      super.noSuchMethod(
        Invocation.setter(
          #callingStatus,
          _callingStatus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get switching => (super.noSuchMethod(
        Invocation.getter(#switching),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#switching),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set switching(_i4.BehaviorSubject<bool>? _switching) => super.noSuchMethod(
        Invocation.setter(
          #switching,
          _switching,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get sharing => (super.noSuchMethod(
        Invocation.getter(#sharing),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#sharing),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set sharing(_i4.BehaviorSubject<bool>? _sharing) => super.noSuchMethod(
        Invocation.setter(
          #sharing,
          _sharing,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get incomingSharing => (super.noSuchMethod(
        Invocation.getter(#incomingSharing),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#incomingSharing),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set incomingSharing(_i4.BehaviorSubject<bool>? _incomingSharing) =>
      super.noSuchMethod(
        Invocation.setter(
          #incomingSharing,
          _incomingSharing,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get videoing => (super.noSuchMethod(
        Invocation.getter(#videoing),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#videoing),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set videoing(_i4.BehaviorSubject<bool>? _videoing) => super.noSuchMethod(
        Invocation.setter(
          #videoing,
          _videoing,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get incomingVideo => (super.noSuchMethod(
        Invocation.getter(#incomingVideo),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#incomingVideo),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set incomingVideo(_i4.BehaviorSubject<bool>? _incomingVideo) =>
      super.noSuchMethod(
        Invocation.setter(
          #incomingVideo,
          _incomingVideo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get incomingVideoSwitch => (super.noSuchMethod(
        Invocation.getter(#incomingVideoSwitch),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#incomingVideoSwitch),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set incomingVideoSwitch(_i4.BehaviorSubject<bool>? _incomingVideoSwitch) =>
      super.noSuchMethod(
        Invocation.setter(
          #incomingVideoSwitch,
          _incomingVideoSwitch,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get desktopDualVideo => (super.noSuchMethod(
        Invocation.getter(#desktopDualVideo),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#desktopDualVideo),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set desktopDualVideo(_i4.BehaviorSubject<bool>? _desktopDualVideo) =>
      super.noSuchMethod(
        Invocation.setter(
          #desktopDualVideo,
          _desktopDualVideo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get isSpeaker => (super.noSuchMethod(
        Invocation.getter(#isSpeaker),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#isSpeaker),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set isSpeaker(_i4.BehaviorSubject<bool>? _isSpeaker) => super.noSuchMethod(
        Invocation.setter(
          #isSpeaker,
          _isSpeaker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get incomingCallOnHold => (super.noSuchMethod(
        Invocation.getter(#incomingCallOnHold),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#incomingCallOnHold),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set incomingCallOnHold(_i4.BehaviorSubject<bool>? _incomingCallOnHold) =>
      super.noSuchMethod(
        Invocation.setter(
          #incomingCallOnHold,
          _incomingCallOnHold,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BehaviorSubject<bool> get isConnectedSubject => (super.noSuchMethod(
        Invocation.getter(#isConnectedSubject),
        returnValue: _FakeBehaviorSubject_2<bool>(
          this,
          Invocation.getter(#isConnectedSubject),
        ),
      ) as _i4.BehaviorSubject<bool>);
  @override
  set isConnectedSubject(_i4.BehaviorSubject<bool>? _isConnectedSubject) =>
      super.noSuchMethod(
        Invocation.setter(
          #isConnectedSubject,
          _isConnectedSubject,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isMicMuted => (super.noSuchMethod(
        Invocation.getter(#isMicMuted),
        returnValue: false,
      ) as bool);
  @override
  bool get isCaller => (super.noSuchMethod(
        Invocation.getter(#isCaller),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  bool get isSharing => (super.noSuchMethod(
        Invocation.getter(#isSharing),
        returnValue: false,
      ) as bool);
  @override
  bool get isVideo => (super.noSuchMethod(
        Invocation.getter(#isVideo),
        returnValue: false,
      ) as bool);
  @override
  bool get isInitRenderer => (super.noSuchMethod(
        Invocation.getter(#isInitRenderer),
        returnValue: false,
      ) as bool);
  @override
  set setRenderer(bool? isInit) => super.noSuchMethod(
        Invocation.setter(
          #setRenderer,
          isInit,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i15.StatsReport get selectedCandidate => (super.noSuchMethod(
        Invocation.getter(#selectedCandidate),
        returnValue: _FakeStatsReport_35(
          this,
          Invocation.getter(#selectedCandidate),
        ),
      ) as _i15.StatsReport);
  @override
  Map<int, String> get callEvents => (super.noSuchMethod(
        Invocation.getter(#callEvents),
        returnValue: <int, String>{},
      ) as Map<int, String>);
  @override
  List<_i15.MediaStreamTrack> get audioTracks => (super.noSuchMethod(
        Invocation.getter(#audioTracks),
        returnValue: <_i15.MediaStreamTrack>[],
      ) as List<_i15.MediaStreamTrack>);
  @override
  set selectAudioTrackById(String? trackId) => super.noSuchMethod(
        Invocation.setter(
          #selectAudioTrackById,
          trackId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool checkCallExpireTimeFailed(_i84.CallEvents? event) => (super.noSuchMethod(
        Invocation.method(
          #checkCallExpireTimeFailed,
          [event],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<void> initCall({bool? isOffer = false}) => (super.noSuchMethod(
        Invocation.method(
          #initCall,
          [],
          {#isOffer: isOffer},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<bool> requestPhoneStatePermission() => (super.noSuchMethod(
        Invocation.method(
          #requestPhoneStatePermission,
          [],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  void startListenToPhoneCallState() => super.noSuchMethod(
        Invocation.method(
          #startListenToPhoneCallState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onRTCPeerConnectionDisconnected() => super.noSuchMethod(
        Invocation.method(
          #onRTCPeerConnectionDisconnected,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> onRTCPeerConnectionConnected() => (super.noSuchMethod(
        Invocation.method(
          #onRTCPeerConnectionConnected,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void onRTCPeerConnectionStateFailed() => super.noSuchMethod(
        Invocation.method(
          #onRTCPeerConnectionStateFailed,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> shareScreen({_i15.DesktopCapturerSource? source}) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareScreen,
          [],
          {#source: source},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  bool muteMicrophone() => (super.noSuchMethod(
        Invocation.method(
          #muteMicrophone,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool enableMicrophone() => (super.noSuchMethod(
        Invocation.method(
          #enableMicrophone,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool enableSpeakerVoice() => (super.noSuchMethod(
        Invocation.method(
          #enableSpeakerVoice,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<bool> switchCamera() => (super.noSuchMethod(
        Invocation.method(
          #switchCamera,
          [],
        ),
        returnValue: _i25.Future<bool>.value(false),
      ) as _i25.Future<bool>);
  @override
  bool toggleDesktopDualVideo() => (super.noSuchMethod(
        Invocation.method(
          #toggleDesktopDualVideo,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool muteCamera() => (super.noSuchMethod(
        Invocation.method(
          #muteCamera,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i25.Future<void> startCall(
    _i3.Uid? roomId, {
    bool? isVideo = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startCall,
          [roomId],
          {#isVideo: isVideo},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> acceptCall(_i3.Uid? roomId) => (super.noSuchMethod(
        Invocation.method(
          #acceptCall,
          [roomId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> declineCall() => (super.noSuchMethod(
        Invocation.method(
          #declineCall,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> receivedBusyCall() => (super.noSuchMethod(
        Invocation.method(
          #receivedBusyCall,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> receivedDeclinedCall() => (super.noSuchMethod(
        Invocation.method(
          #receivedDeclinedCall,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> receivedEndCall(int? callDuration) => (super.noSuchMethod(
        Invocation.method(
          #receivedEndCall,
          [callDuration],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> cancelCallNotification() => (super.noSuchMethod(
        Invocation.method(
          #cancelCallNotification,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void endCall() => super.noSuchMethod(
        Invocation.method(
          #endCall,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  int calculateCallEndTime() => (super.noSuchMethod(
        Invocation.method(
          #calculateCallEndTime,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i25.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void startCallTimer() => super.noSuchMethod(
        Invocation.method(
          #startCallTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<void> fetchUserCallList(_i3.Uid? roomUid) => (super.noSuchMethod(
        Invocation.method(
          #fetchUserCallList,
          [roomUid],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  void openCallScreen(
    _i19.BuildContext? context,
    _i3.Uid? room, {
    bool? isVideoCall = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #openCallScreen,
          [
            context,
            room,
          ],
          {#isVideoCall: isVideoCall},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppLifecycleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppLifecycleService extends _i1.Mock
    implements _i102.AppLifecycleService {
  MockAppLifecycleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  _i25.Stream<_i102.AppLifecycle> get lifecycleStream => (super.noSuchMethod(
        Invocation.getter(#lifecycleStream),
        returnValue: _i25.Stream<_i102.AppLifecycle>.empty(),
      ) as _i25.Stream<_i102.AppLifecycle>);
  @override
  void updateAppStateToPause() => super.noSuchMethod(
        Invocation.method(
          #updateAppStateToPause,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void startLifeCycListener() => super.noSuchMethod(
        Invocation.method(
          #startLifeCycListener,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
